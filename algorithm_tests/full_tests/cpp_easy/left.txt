#include "featureextractor.h"
#include "mix/functional.h"
#include "mix/qstringutils.h"

FeatureExtractor::FeatureExtractor(vector<unique_ptr<Feature>> features)
  : mFeatures(std::move(features))
{
	//TODO verify names
}

std::unordered_map<QString, float> FeatureExtractor::computeFeatures(const OneToOneAlignment &alignment, int leftIdx, int rightIdx) const
{
  auto nameValuePairs = map(mFeatures, [&alignment, leftIdx, rightIdx](const unique_ptr<Feature>& feature) {
    float value = feature->compute(alignment, leftIdx, rightIdx);
    QString name = feature->name();
    return std::make_pair(name, value);
  });
  return toMap(nameValuePairs);
}

