#ifndef SENSIDIFF_H
#define SENSIDIFF_H
#include <QMainWindow>
#include "aligner/learning/mlpipeline.h"
#include "mix/logger/logger.h"
#include <boost/optional.hpp>

using boost::optional;

class OneToOneAlignmentWithAmbiguity;

class SensiDiff : public QMainWindow
{
    Q_OBJECT
    SensiDiff(const SensiDiff&) = delete;
    SensiDiff& operator=(const SensiDiff&) = delete;
    const Logger logger{"SensiDiff"};
    void createMenus();
    QTabWidget &tabs; //memory managed by qt
    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);
    bool reallyShouldSave(const QString& dirPath);
    const QString mModelPath;
    const QString mRangesPath;
    const SVMModelPtr mMLModel;
    const vector<FeatureRange> mRanges;
private slots:
    void saveTestCase();
    void openTestCase();
    void openDiffFromMenu();
public:
    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);
    ~SensiDiff(){}
    void openDiff(QString leftPath, QString rightPath);
};

#endif // SENSIDIFF_H
