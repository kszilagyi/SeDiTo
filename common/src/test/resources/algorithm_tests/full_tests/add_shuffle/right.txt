
object Train {
  def main(args: Array[String]) {
    logger.info("Start")
    val start = Instant.now()
    val samples = readDataSetAndMeasureMetrics()
    val crossValidates = crossValidate(samples)
    val random = new Random(124) //make it repeatable but avoid weird dependence on file structure
    val (training, test) = random.shuffle(samples).splitAt((samples.size * trainingRatio).toInt)
    val (classifier, scaler) = train(training, test, logStats = true)
    write.xstream(classifier, Main.firstPhaseClassifierPath)
    write.xstream(scaler, Main.firstPhaseScalerPath)
    val duration = Duration.between(start, Instant.now())
    discard(Await.ready(Future.sequence(crossValidates), 10.minutes))
    logger.info(s"Took: ${duration.toMinutes} minutes, ${duration.toMillis / 1000 - duration.toMinutes * 60} seconds")
  }
}