{
  "matches": [{
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 77,
      "to": 78
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 77,
      "to": 78
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 58,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 56,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 11,
      "to": 15
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 11,
      "to": 15
    }
  }, {
    "left": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 54,
      "from": 8,
      "to": 11
    },
    "right": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 52,
      "from": 8,
      "to": 11
    }
  }, {
    "left": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 35,
      "to": 44
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 35,
      "to": 44
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 95,
      "to": 96
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 95,
      "to": 96
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 71,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 69,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 60,
      "from": 46,
      "to": 61
    },
    "right": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 58,
      "from": 46,
      "to": 61
    }
  }, {
    "left": {
      "line": "import hashlib",
      "lineIdx": 4,
      "from": 7,
      "to": 14
    },
    "right": {
      "line": "import hashlib",
      "lineIdx": 4,
      "from": 7,
      "to": 14
    }
  }, {
    "left": {
      "line": "            else:",
      "lineIdx": 69,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "            else:",
      "lineIdx": 67,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 101,
      "to": 102
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 101,
      "to": 102
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 30,
      "to": 34
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 30,
      "to": 34
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 50,
      "to": 52
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 50,
      "to": 52
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 59,
      "from": 34,
      "to": 46
    },
    "right": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 57,
      "from": 34,
      "to": 46
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 4,
      "to": 16
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 4,
      "to": 16
    }
  }, {
    "left": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "        time.sleep(5)",
      "lineIdx": 73,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "        time.sleep(5)",
      "lineIdx": 71,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 35,
      "to": 39
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 35,
      "to": 39
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "        time.sleep(5)",
      "lineIdx": 73,
      "from": 13,
      "to": 18
    },
    "right": {
      "line": "        time.sleep(5)",
      "lineIdx": 71,
      "from": 13,
      "to": 18
    }
  }, {
    "left": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 76,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 74,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 100,
      "to": 101
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 100,
      "to": 101
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 41,
      "to": 47
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 41,
      "to": 47
    }
  }, {
    "left": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 63,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 61,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 4,
      "to": 10
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 4,
      "to": 10
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 67,
      "to": 68
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 91,
      "to": 101
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 91,
      "to": 101
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 112,
      "to": 113
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 112,
      "to": 113
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 135,
      "to": 136
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 135,
      "to": 136
    }
  }, {
    "left": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 54,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 52,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 50,
      "to": 55
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 50,
      "to": 55
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "        return",
      "lineIdx": 25,
      "from": 8,
      "to": 14
    },
    "right": {
      "line": "        return",
      "lineIdx": 25,
      "from": 8,
      "to": 14
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "    received_c_exps = set()",
      "lineIdx": 46,
      "from": 22,
      "to": 25
    },
    "right": {
      "line": "    received_c_exps = set()",
      "lineIdx": 44,
      "from": 22,
      "to": 25
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 78,
      "to": 79
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 78,
      "to": 79
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 88,
      "to": 89
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 88,
      "to": 89
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 11,
      "to": 20
    },
    "right": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 11,
      "to": 20
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 21,
      "to": 29
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 21,
      "to": 29
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 21,
      "to": 25
    },
    "right": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 21,
      "to": 25
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 74,
      "to": 77
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 74,
      "to": 77
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 8,
      "to": 10
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 8,
      "to": 10
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 45,
      "to": 62
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 45,
      "to": 62
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 59,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 57,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 91,
      "to": 92
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 91,
      "to": 92
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 101,
      "to": 111
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 101,
      "to": 111
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 78,
      "to": 79
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 78,
      "to": 79
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 52,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 50,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "                else:",
      "lineIdx": 67,
      "from": 16,
      "to": 20
    },
    "right": {
      "line": "                else:",
      "lineIdx": 65,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 49,
      "to": 62
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 49,
      "to": 62
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 52,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 50,
      "from": 12,
      "to": 19
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 78,
      "to": 90
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 78,
      "to": 90
    }
  }, {
    "left": {
      "line": "                    for r in results:",
      "lineIdx": 65,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "                    for r in results:",
      "lineIdx": 63,
      "from": 20,
      "to": 23
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 79,
      "to": 86
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 79,
      "to": 86
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 57,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 55,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 89,
      "to": 100
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 89,
      "to": 100
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 49,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 47,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 43,
      "to": 49
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 43,
      "to": 49
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 21,
      "to": 28
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 21,
      "to": 28
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 76,
      "to": 77
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 76,
      "to": 77
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 48,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 46,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 72,
      "to": 73
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 18,
      "to": 20
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 18,
      "to": 20
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 44,
      "to": 49
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 44,
      "to": 49
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 155,
      "to": 156
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 155,
      "to": 156
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 25,
      "to": 31
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 25,
      "to": 31
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 87,
      "to": 88
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 87,
      "to": 88
    }
  }, {
    "left": {
      "line": "main()  ",
      "lineIdx": 93,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "main()  ",
      "lineIdx": 91,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 38,
      "to": 41
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 38,
      "to": 41
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 15,
      "to": 18
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 15,
      "to": 18
    }
  }, {
    "left": {
      "line": "    all_scores = []",
      "lineIdx": 47,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "    all_scores = []",
      "lineIdx": 45,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 71,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 69,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 46,
      "to": 48
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 46,
      "to": 48
    }
  }, {
    "left": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 54,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 52,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 42,
      "to": 51
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 42,
      "to": 51
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 36,
      "to": 73
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 36,
      "to": 73
    }
  }, {
    "left": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 57,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 55,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 25,
      "to": 31
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 25,
      "to": 31
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 16,
      "to": 21
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 16,
      "to": 21
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 60,
      "from": 61,
      "to": 62
    },
    "right": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 58,
      "from": 61,
      "to": 62
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 19,
      "to": 27
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 19,
      "to": 27
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 134,
      "to": 135
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 134,
      "to": 135
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "from grid_common import *",
      "lineIdx": 2,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "from grid_common import *",
      "lineIdx": 2,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 111,
      "to": 112
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 111,
      "to": 112
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 67,
      "to": 68
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "import sys",
      "lineIdx": 9,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "import sys",
      "lineIdx": 9,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 49,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 47,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 9,
      "to": 13
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 9,
      "to": 13
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 23,
      "to": 27
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 23,
      "to": 27
    }
  }, {
    "left": {
      "line": "    #print setup",
      "lineIdx": 75,
      "from": 11,
      "to": 16
    },
    "right": {
      "line": "    #print setup",
      "lineIdx": 73,
      "from": 11,
      "to": 16
    }
  }, {
    "left": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 76,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 74,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "from grid_common import *",
      "lineIdx": 2,
      "from": 17,
      "to": 23
    },
    "right": {
      "line": "from grid_common import *",
      "lineIdx": 2,
      "from": 17,
      "to": 23
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "import math",
      "lineIdx": 6,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import math",
      "lineIdx": 6,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 34,
      "to": 37
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 34,
      "to": 37
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 49,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 47,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "from svmutil import *",
      "lineIdx": 12,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "from svmutil import *",
      "lineIdx": 12,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 60,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 58,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 25,
      "to": 33
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 25,
      "to": 33
    }
  }, {
    "left": {
      "line": "main()  ",
      "lineIdx": 93,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "main()  ",
      "lineIdx": 91,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "    print(valids)",
      "lineIdx": 81,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "    print(valids)",
      "lineIdx": 79,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 40,
      "to": 47
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 40,
      "to": 47
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 75,
      "to": 89
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 75,
      "to": 89
    }
  }, {
    "left": {
      "line": "import random",
      "lineIdx": 7,
      "from": 7,
      "to": 13
    },
    "right": {
      "line": "import random",
      "lineIdx": 7,
      "from": 7,
      "to": 13
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 41,
      "to": 43
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 41,
      "to": 43
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 58,
      "to": 60
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 58,
      "to": 60
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 10,
      "to": 15
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 10,
      "to": 15
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 58,
      "to": 62
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 58,
      "to": 62
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "import time",
      "lineIdx": 5,
      "from": 7,
      "to": 11
    },
    "right": {
      "line": "import time",
      "lineIdx": 5,
      "from": 7,
      "to": 11
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 11,
      "to": 23
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 11,
      "to": 23
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 33,
      "to": 40
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 33,
      "to": 40
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 46,
      "to": 52
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 46,
      "to": 52
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 81,
      "to": 87
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 81,
      "to": 87
    }
  }, {
    "left": {
      "line": "    #print setup",
      "lineIdx": 75,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "    #print setup",
      "lineIdx": 73,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 6,
      "to": 12
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 6,
      "to": 12
    }
  }, {
    "left": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 76,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 74,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 152,
      "to": 153
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 152,
      "to": 153
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 42,
      "to": 45
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 42,
      "to": 45
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 28,
      "to": 34
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 28,
      "to": 34
    }
  }, {
    "left": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 50,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 48,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 130,
      "to": 131
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 130,
      "to": 131
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 32,
      "to": 37
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 32,
      "to": 37
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 73,
      "to": 74
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 73,
      "to": 74
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 44,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 42,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 71,
      "to": 73
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 71,
      "to": 73
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 64,
      "from": 20,
      "to": 35
    },
    "right": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 62,
      "from": 20,
      "to": 35
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 14,
      "to": 21
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 14,
      "to": 21
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 11,
      "to": 15
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 11,
      "to": 15
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 14,
      "to": 17
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 14,
      "to": 17
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 4,
      "to": 10
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 4,
      "to": 10
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 91,
      "to": 98
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 91,
      "to": 98
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 24,
      "to": 28
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 24,
      "to": 28
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 15,
      "to": 23
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 15,
      "to": 23
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 30,
      "to": 34
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 30,
      "to": 34
    }
  }, {
    "left": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 44,
      "from": 20,
      "to": 32
    },
    "right": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 42,
      "from": 20,
      "to": 32
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 151,
      "to": 152
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 151,
      "to": 152
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 16,
      "to": 28
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 16,
      "to": 28
    }
  }, {
    "left": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 44,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 42,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 40,
      "to": 43
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 40,
      "to": 43
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 31,
      "to": 37
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 31,
      "to": 37
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 23,
      "to": 26
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 23,
      "to": 26
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 28,
      "to": 38
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 28,
      "to": 38
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 20,
      "to": 25
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 20,
      "to": 25
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 18,
      "to": 24
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 18,
      "to": 24
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 23,
      "to": 26
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 23,
      "to": 26
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 15,
      "to": 21
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 15,
      "to": 21
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 38,
      "to": 53
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 38,
      "to": 53
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 52,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 50,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 89,
      "to": 90
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 89,
      "to": 90
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 11,
      "to": 22
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 11,
      "to": 22
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 56,
      "to": 67
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 56,
      "to": 67
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 157,
      "to": 158
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 157,
      "to": 158
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 50,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 48,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 48,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 46,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 25,
      "to": 34
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 25,
      "to": 34
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 26,
      "to": 29
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 26,
      "to": 29
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 131,
      "to": 132
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 131,
      "to": 132
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 29,
      "to": 40
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 29,
      "to": 40
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 90,
      "to": 100
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 90,
      "to": 100
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 35,
      "to": 38
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 35,
      "to": 38
    }
  }, {
    "left": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 54,
      "from": 36,
      "to": 52
    },
    "right": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 52,
      "from": 36,
      "to": 52
    }
  }, {
    "left": {
      "line": "start_time = time.time()",
      "lineIdx": 92,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "start_time = time.time()",
      "lineIdx": 90,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 16,
      "to": 19
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 16,
      "to": 19
    }
  }, {
    "left": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 11,
      "to": 14
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 11,
      "to": 14
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 52,
      "from": 20,
      "to": 26
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 50,
      "from": 20,
      "to": 26
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 25,
      "to": 36
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 25,
      "to": 36
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 74,
      "to": 75
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 74,
      "to": 75
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 66,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 64,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 63,
      "from": 19,
      "to": 31
    },
    "right": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 61,
      "from": 19,
      "to": 31
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 53,
      "to": 63
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 53,
      "to": 63
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 54,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 52,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 32,
      "to": 36
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 32,
      "to": 36
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 74,
      "to": 77
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 74,
      "to": 77
    }
  }, {
    "left": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 66,
      "from": 35,
      "to": 41
    },
    "right": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 64,
      "from": 35,
      "to": 41
    }
  }, {
    "left": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 76,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 74,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 63,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 61,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 5,
      "to": 16
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 4,
      "to": 15
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 67,
      "to": 71
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 67,
      "to": 71
    }
  }, {
    "left": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 66,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 64,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 85,
      "to": 88
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 85,
      "to": 88
    }
  }, {
    "left": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 58,
      "from": 22,
      "to": 31
    },
    "right": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 56,
      "from": 22,
      "to": 31
    }
  }, {
    "left": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 57,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 55,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 58,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 56,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 14,
      "to": 38
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 14,
      "to": 38
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 27,
      "to": 48
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 27,
      "to": 48
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 17,
      "to": 26
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 17,
      "to": 26
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 43,
      "to": 45
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 43,
      "to": 45
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "import sys",
      "lineIdx": 9,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import sys",
      "lineIdx": 9,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 8,
      "to": 14
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 8,
      "to": 14
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 61,
      "to": 70
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 61,
      "to": 70
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 11,
      "to": 14
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 11,
      "to": 14
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 50,
      "from": 23,
      "to": 34
    },
    "right": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 48,
      "from": 23,
      "to": 34
    }
  }, {
    "left": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 57,
      "from": 34,
      "to": 43
    },
    "right": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 55,
      "from": 34,
      "to": 43
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 59,
      "from": 12,
      "to": 14
    },
    "right": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 57,
      "from": 12,
      "to": 14
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 88,
      "to": 89
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 88,
      "to": 89
    }
  }, {
    "left": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "    all_scores = []",
      "lineIdx": 47,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "    all_scores = []",
      "lineIdx": 45,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 18,
      "to": 29
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 18,
      "to": 29
    }
  }, {
    "left": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 59,
      "from": 31,
      "to": 33
    },
    "right": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 57,
      "from": 31,
      "to": 33
    }
  }, {
    "left": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 50,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 48,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 8,
      "to": 14
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 8,
      "to": 14
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 68,
      "to": 69
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 68,
      "to": 69
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 44,
      "from": 33,
      "to": 44
    },
    "right": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 42,
      "from": 33,
      "to": 44
    }
  }, {
    "left": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "from svmutil import *",
      "lineIdx": 12,
      "from": 5,
      "to": 12
    },
    "right": {
      "line": "from svmutil import *",
      "lineIdx": 12,
      "from": 5,
      "to": 12
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 29,
      "to": 39
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 28,
      "to": 38
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 25,
      "to": 28
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 25,
      "to": 28
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 64,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 62,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 48,
      "from": 10,
      "to": 16
    },
    "right": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 46,
      "from": 10,
      "to": 16
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 143,
      "to": 144
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 143,
      "to": 144
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 25,
      "to": 29
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 25,
      "to": 29
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 4,
      "to": 28
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 4,
      "to": 28
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 60,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 58,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 44,
      "from": 46,
      "to": 50
    },
    "right": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 42,
      "from": 46,
      "to": 50
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 71,
      "to": 72
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 71,
      "to": 72
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "from operator import itemgetter",
      "lineIdx": 3,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "from operator import itemgetter",
      "lineIdx": 3,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 17,
      "to": 26
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 17,
      "to": 26
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 71,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 69,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "                else:",
      "lineIdx": 67,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "                else:",
      "lineIdx": 65,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 52,
      "to": 69
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 52,
      "to": 69
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 40,
      "to": 42
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 40,
      "to": 42
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 48,
      "from": 20,
      "to": 35
    },
    "right": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 46,
      "from": 20,
      "to": 35
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "import json",
      "lineIdx": 8,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import json",
      "lineIdx": 8,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 44,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 42,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 30,
      "to": 42
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 30,
      "to": 42
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 31,
      "to": 41
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 31,
      "to": 41
    }
  }, {
    "left": {
      "line": "from operator import itemgetter",
      "lineIdx": 3,
      "from": 21,
      "to": 31
    },
    "right": {
      "line": "from operator import itemgetter",
      "lineIdx": 3,
      "from": 21,
      "to": 31
    }
  }, {
    "left": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 139,
      "to": 140
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 139,
      "to": 140
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "                    for r in results:",
      "lineIdx": 65,
      "from": 26,
      "to": 28
    },
    "right": {
      "line": "                    for r in results:",
      "lineIdx": 63,
      "from": 26,
      "to": 28
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 80,
      "to": 81
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 80,
      "to": 81
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 144,
      "to": 145
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 144,
      "to": 145
    }
  }, {
    "left": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 48,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 46,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 49,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 47,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 30,
      "to": 34
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 30,
      "to": 34
    }
  }, {
    "left": {
      "line": "import json",
      "lineIdx": 8,
      "from": 7,
      "to": 11
    },
    "right": {
      "line": "import json",
      "lineIdx": 8,
      "from": 7,
      "to": 11
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 33,
      "to": 39
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 33,
      "to": 39
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 70,
      "to": 71
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 70,
      "to": 71
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 5,
      "to": 9
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 5,
      "to": 9
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 4,
      "to": 21
    },
    "right": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 4,
      "to": 21
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 16,
      "to": 19
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 16,
      "to": 19
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 43,
      "to": 48
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 43,
      "to": 48
    }
  }, {
    "left": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    print(\"Uploading file\")",
      "lineIdx": 29,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 63,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 61,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 38,
      "to": 49
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 38,
      "to": 49
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "import svm",
      "lineIdx": 11,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import svm",
      "lineIdx": 11,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 29,
      "to": 34
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 29,
      "to": 34
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 11,
      "to": 17
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 11,
      "to": 17
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 76,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 74,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 53,
      "to": 56
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 53,
      "to": 56
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 40,
      "to": 46
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 40,
      "to": 46
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 77,
      "to": 78
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 77,
      "to": 78
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "        time.sleep(5)",
      "lineIdx": 73,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "        time.sleep(5)",
      "lineIdx": 71,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "                    for r in results:",
      "lineIdx": 65,
      "from": 29,
      "to": 36
    },
    "right": {
      "line": "                    for r in results:",
      "lineIdx": 63,
      "from": 29,
      "to": 36
    }
  }, {
    "left": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 64,
      "from": 36,
      "to": 39
    },
    "right": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 62,
      "from": 36,
      "to": 39
    }
  }, {
    "left": {
      "line": "    print(valids)",
      "lineIdx": 81,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    print(valids)",
      "lineIdx": 79,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 19,
      "to": 27
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 19,
      "to": 27
    }
  }, {
    "left": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 49,
      "from": 23,
      "to": 26
    },
    "right": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 47,
      "from": 23,
      "to": 26
    }
  }, {
    "left": {
      "line": "start_time = time.time()",
      "lineIdx": 92,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "start_time = time.time()",
      "lineIdx": 90,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 87,
      "to": 88
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 87,
      "to": 88
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 102,
      "to": 103
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 102,
      "to": 103
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 10,
      "to": 15
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 10,
      "to": 15
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 64,
      "to": 72
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 64,
      "to": 72
    }
  }, {
    "left": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 76,
      "from": 11,
      "to": 27
    },
    "right": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 74,
      "from": 11,
      "to": 27
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 146,
      "to": 147
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 146,
      "to": 147
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 46,
      "to": 57
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 46,
      "to": 57
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 29,
      "to": 40
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 29,
      "to": 40
    }
  }, {
    "left": {
      "line": "start_time = time.time()",
      "lineIdx": 92,
      "from": 0,
      "to": 10
    },
    "right": {
      "line": "start_time = time.time()",
      "lineIdx": 90,
      "from": 0,
      "to": 10
    }
  }, {
    "left": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 45,
      "to": 69
    },
    "right": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 45,
      "to": 69
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 12,
      "to": 17
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 12,
      "to": 17
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 45,
      "to": 50
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 45,
      "to": 50
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 48,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 46,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 13,
      "to": 17
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 13,
      "to": 17
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 71,
      "from": 20,
      "to": 26
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 69,
      "from": 20,
      "to": 26
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 37,
      "to": 43
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 37,
      "to": 43
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 13,
      "to": 22
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 13,
      "to": 22
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 70,
      "to": 71
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 70,
      "to": 71
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 77,
      "to": 78
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 77,
      "to": 78
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 59,
      "to": 78
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 59,
      "to": 78
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 52,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 50,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 50,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 48,
      "from": 12,
      "to": 19
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 41,
      "to": 49
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 41,
      "to": 49
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "from svmutil import *",
      "lineIdx": 12,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "from svmutil import *",
      "lineIdx": 12,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 4,
      "to": 14
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 4,
      "to": 14
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 132,
      "to": 133
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 132,
      "to": 133
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 24,
      "to": 34
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 24,
      "to": 34
    }
  }, {
    "left": {
      "line": "start_time = time.time()",
      "lineIdx": 92,
      "from": 18,
      "to": 22
    },
    "right": {
      "line": "start_time = time.time()",
      "lineIdx": 90,
      "from": 18,
      "to": 22
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 11,
      "to": 22
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 11,
      "to": 22
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 35,
      "to": 62
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 35,
      "to": 62
    }
  }, {
    "left": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 46,
      "to": 50
    },
    "right": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 46,
      "to": 50
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 58,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 56,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 12,
      "to": 21
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 99,
      "to": 100
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 99,
      "to": 100
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 54,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 52,
      "from": 12,
      "to": 19
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 12,
      "to": 17
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 12,
      "to": 17
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 19,
      "to": 24
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 19,
      "to": 24
    }
  }, {
    "left": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 48,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 46,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 35,
      "to": 38
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 35,
      "to": 38
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 50,
      "to": 57
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 50,
      "to": 57
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 68,
      "to": 71
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 68,
      "to": 71
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "import hashlib",
      "lineIdx": 4,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import hashlib",
      "lineIdx": 4,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 44,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 42,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 28,
      "to": 33
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 28,
      "to": 33
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 30,
      "to": 36
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 30,
      "to": 36
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 39,
      "to": 45
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 39,
      "to": 45
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 35,
      "to": 62
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 35,
      "to": 62
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 37,
      "to": 39
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 37,
      "to": 39
    }
  }, {
    "left": {
      "line": "    received_c_exps = set()",
      "lineIdx": 46,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "    received_c_exps = set()",
      "lineIdx": 44,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 148,
      "to": 150
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 148,
      "to": 150
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "start_time = time.time()",
      "lineIdx": 92,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "start_time = time.time()",
      "lineIdx": 90,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 74,
      "to": 75
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 74,
      "to": 75
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 44,
      "to": 54
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 44,
      "to": 54
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 10,
      "to": 15
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 10,
      "to": 15
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 159,
      "to": 160
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 159,
      "to": 160
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 41,
      "to": 47
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 41,
      "to": 47
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 16,
      "to": 19
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 16,
      "to": 19
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 102,
      "to": 139
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 102,
      "to": 139
    }
  }, {
    "left": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 57,
      "from": 30,
      "to": 33
    },
    "right": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 55,
      "from": 30,
      "to": 33
    }
  }, {
    "left": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 32,
      "to": 45
    },
    "right": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 32,
      "to": 45
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 76,
      "from": 28,
      "to": 52
    },
    "right": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 74,
      "from": 28,
      "to": 52
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 24,
      "to": 27
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 24,
      "to": 27
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 60,
      "from": 33,
      "to": 45
    },
    "right": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 58,
      "from": 33,
      "to": 45
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 15,
      "to": 38
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 15,
      "to": 38
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 18,
      "to": 28
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 18,
      "to": 28
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 24,
      "to": 28
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 24,
      "to": 28
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 31,
      "to": 34
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 31,
      "to": 34
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 48,
      "to": 52
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 48,
      "to": 52
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "        time.sleep(5)",
      "lineIdx": 73,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "        time.sleep(5)",
      "lineIdx": 71,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 103,
      "to": 130
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 103,
      "to": 130
    }
  }, {
    "left": {
      "line": "import math",
      "lineIdx": 6,
      "from": 7,
      "to": 11
    },
    "right": {
      "line": "import math",
      "lineIdx": 6,
      "from": 7,
      "to": 11
    }
  }, {
    "left": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 8,
      "to": 29
    },
    "right": {
      "line": "        training_file_content = training_file.read()",
      "lineIdx": 16,
      "from": 8,
      "to": 29
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 23,
      "to": 28
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 23,
      "to": 28
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "    all_scores = []",
      "lineIdx": 47,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "    all_scores = []",
      "lineIdx": 45,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 61,
      "to": 62
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 61,
      "to": 62
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 39,
      "to": 42
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 39,
      "to": 42
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 82,
      "to": 84
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 82,
      "to": 84
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 90,
      "to": 91
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 90,
      "to": 91
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "    #print setup",
      "lineIdx": 75,
      "from": 5,
      "to": 10
    },
    "right": {
      "line": "    #print setup",
      "lineIdx": 73,
      "from": 5,
      "to": 10
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 10,
      "to": 15
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 10,
      "to": 15
    }
  }, {
    "left": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 63,
      "from": 16,
      "to": 18
    },
    "right": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 61,
      "from": 16,
      "to": 18
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 54,
      "from": 20,
      "to": 22
    },
    "right": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 52,
      "from": 20,
      "to": 22
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 54,
      "to": 67
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 54,
      "to": 67
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 39,
      "to": 42
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 39,
      "to": 42
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "start_time = time.time()",
      "lineIdx": 92,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "start_time = time.time()",
      "lineIdx": 90,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 88,
      "to": 89
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 88,
      "to": 89
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 24,
      "to": 32
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 24,
      "to": 32
    }
  }, {
    "left": {
      "line": "import random",
      "lineIdx": 7,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import random",
      "lineIdx": 7,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 98,
      "to": 99
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 98,
      "to": 99
    }
  }, {
    "left": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 56,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "            json_dict = json.JSONDecoder().decode(message.body)",
      "lineIdx": 54,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "import svm",
      "lineIdx": 11,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "import svm",
      "lineIdx": 11,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 4,
      "to": 15
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 4,
      "to": 15
    }
  }, {
    "left": {
      "line": "import time",
      "lineIdx": 5,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import time",
      "lineIdx": 5,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 73,
      "to": 78
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 73,
      "to": 78
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 23,
      "to": 26
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 23,
      "to": 26
    }
  }, {
    "left": {
      "line": "                    for r in results:",
      "lineIdx": 65,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "                    for r in results:",
      "lineIdx": 63,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 28,
      "to": 38
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 28,
      "to": 38
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "    print(valids)",
      "lineIdx": 81,
      "from": 10,
      "to": 16
    },
    "right": {
      "line": "    print(valids)",
      "lineIdx": 79,
      "from": 10,
      "to": 16
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 71,
      "to": 72
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 71,
      "to": 72
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 90,
      "to": 91
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 90,
      "to": 91
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "        time.sleep(5)",
      "lineIdx": 73,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "        time.sleep(5)",
      "lineIdx": 71,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 64,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 62,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 66,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 64,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 49,
      "from": 27,
      "to": 35
    },
    "right": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 47,
      "from": 27,
      "to": 35
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "from operator import itemgetter",
      "lineIdx": 3,
      "from": 5,
      "to": 13
    },
    "right": {
      "line": "from operator import itemgetter",
      "lineIdx": 3,
      "from": 5,
      "to": 13
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 74,
      "to": 95
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 74,
      "to": 95
    }
  }, {
    "left": {
      "line": "main()  ",
      "lineIdx": 93,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "main()  ",
      "lineIdx": 91,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 4,
      "to": 10
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 4,
      "to": 10
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 22,
      "to": 24
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 22,
      "to": 24
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 43,
      "from": 34,
      "to": 38
    },
    "right": {
      "line": "        print(\"Queueing task: \" + task)",
      "lineIdx": 41,
      "from": 34,
      "to": 38
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 50,
      "from": 8,
      "to": 11
    },
    "right": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 48,
      "from": 8,
      "to": 11
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "    all_scores = []",
      "lineIdx": 47,
      "from": 4,
      "to": 14
    },
    "right": {
      "line": "    all_scores = []",
      "lineIdx": 45,
      "from": 4,
      "to": 14
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "start_time = time.time()",
      "lineIdx": 92,
      "from": 13,
      "to": 17
    },
    "right": {
      "line": "start_time = time.time()",
      "lineIdx": 90,
      "from": 13,
      "to": 17
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 54,
      "to": 60
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 54,
      "to": 60
    }
  }, {
    "left": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 44,
      "from": 8,
      "to": 19
    },
    "right": {
      "line": "        input_queue.send_message(MessageBody= task)",
      "lineIdx": 42,
      "from": 8,
      "to": 19
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 39,
      "to": 43
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 39,
      "to": 43
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 11,
      "to": 19
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 11,
      "to": 19
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 28,
      "to": 31
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 28,
      "to": 31
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 47,
      "to": 49
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 46,
      "to": 48
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 11,
      "to": 17
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 11,
      "to": 17
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 78,
      "to": 89
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 78,
      "to": 89
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    received_c_exps = set()",
      "lineIdx": 46,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    received_c_exps = set()",
      "lineIdx": 44,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 15,
      "to": 22
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 15,
      "to": 22
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 66,
      "from": 24,
      "to": 34
    },
    "right": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 64,
      "from": 24,
      "to": 34
    }
  }, {
    "left": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 54,
      "from": 23,
      "to": 35
    },
    "right": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 52,
      "from": 23,
      "to": 35
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 49,
      "from": 15,
      "to": 22
    },
    "right": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 47,
      "from": 15,
      "to": 22
    }
  }, {
    "left": {
      "line": "from operator import itemgetter",
      "lineIdx": 3,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "from operator import itemgetter",
      "lineIdx": 3,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "from grid_common import *",
      "lineIdx": 2,
      "from": 5,
      "to": 16
    },
    "right": {
      "line": "from grid_common import *",
      "lineIdx": 2,
      "from": 5,
      "to": 16
    }
  }, {
    "left": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 4,
      "to": 24
    },
    "right": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 4,
      "to": 24
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 18,
      "to": 20
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 18,
      "to": 20
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 75,
      "to": 76
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 75,
      "to": 76
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "sys.path.insert(0, './../lib')",
      "lineIdx": 10,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 71,
      "to": 73
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 71,
      "to": 73
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 67,
      "to": 68
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "from svmutil import *",
      "lineIdx": 12,
      "from": 13,
      "to": 19
    },
    "right": {
      "line": "from svmutil import *",
      "lineIdx": 12,
      "from": 13,
      "to": 19
    }
  }, {
    "left": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 64,
      "from": 40,
      "to": 54
    },
    "right": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 62,
      "from": 40,
      "to": 54
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 57,
      "to": 72
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 57,
      "to": 72
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 4,
      "to": 6
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 4,
      "to": 6
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 49,
      "to": 60
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 49,
      "to": 60
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 139,
      "to": 141
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 139,
      "to": 141
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 27,
      "to": 30
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 27,
      "to": 30
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 72,
      "to": 73
    }
  }, {
    "left": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "    local_training_file_path = '../../features_output/train_samples.txt'",
      "lineIdx": 27,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 73,
      "to": 74
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 73,
      "to": 74
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 86,
      "to": 87
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 86,
      "to": 87
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 35,
      "to": 44
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 35,
      "to": 44
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 46,
      "to": 48
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 46,
      "to": 48
    }
  }, {
    "left": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 62,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "                c_exps_valid = all(map(lambda result: result[c_exp_key] == expected_c_exp, results))",
      "lineIdx": 60,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 78,
      "to": 79
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 78,
      "to": 79
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    print(\"Training file uploaded, md5 = \" + training_file_md5)",
      "lineIdx": 31,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 48,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    while(c_exps != received_c_exps):",
      "lineIdx": 46,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 23,
      "to": 26
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 23,
      "to": 26
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 67,
      "to": 68
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 18,
      "to": 27
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 17,
      "to": 26
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 72,
      "to": 73
    }
  }, {
    "left": {
      "line": "        time.sleep(5)",
      "lineIdx": 73,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "        time.sleep(5)",
      "lineIdx": 71,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 24,
      "to": 44
    },
    "right": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 24,
      "to": 44
    }
  }, {
    "left": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 63,
      "from": 35,
      "to": 39
    },
    "right": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 61,
      "from": 35,
      "to": 39
    }
  }, {
    "left": {
      "line": "            message.delete()",
      "lineIdx": 71,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "            message.delete()",
      "lineIdx": 69,
      "from": 12,
      "to": 19
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "                    for r in results:",
      "lineIdx": 65,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "                    for r in results:",
      "lineIdx": 63,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 50,
      "to": 59
    },
    "right": {
      "line": "        return hashlib.md5(training_file_content).hexdigest()",
      "lineIdx": 18,
      "from": 50,
      "to": 59
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 57,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 55,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 140,
      "to": 141
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 140,
      "to": 141
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 150,
      "to": 151
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 150,
      "to": 151
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 80,
      "from": 80,
      "to": 90
    },
    "right": {
      "line": "    valids = list(filter(lambda score: math.isnan(score[f_score_key]) == False, all_scores))",
      "lineIdx": 78,
      "from": 80,
      "to": 90
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 76,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "    y, x = svm_read_problem(local_training_file_path)",
      "lineIdx": 74,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  20",
      "lineIdx": 33,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "from grid_common import *",
      "lineIdx": 2,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "from grid_common import *",
      "lineIdx": 2,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 100,
      "to": 101
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 100,
      "to": 101
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "            else:",
      "lineIdx": 69,
      "from": 12,
      "to": 16
    },
    "right": {
      "line": "            else:",
      "lineIdx": 67,
      "from": 12,
      "to": 16
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 16,
      "to": 21
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 16,
      "to": 21
    }
  }, {
    "left": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 58,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 56,
      "from": 12,
      "to": 19
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 30,
      "to": 40
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 30,
      "to": 40
    }
  }, {
    "left": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 25,
      "to": 49
    },
    "right": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 25,
      "to": 49
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 48,
      "to": 55
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 48,
      "to": 55
    }
  }, {
    "left": {
      "line": "    print(valids)",
      "lineIdx": 81,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    print(valids)",
      "lineIdx": 79,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 11,
      "to": 15
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 11,
      "to": 15
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 23,
      "to": 33
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 23,
      "to": 33
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 15,
      "to": 21
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 15,
      "to": 21
    }
  }, {
    "left": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 66,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "                        all_scores.append(r)",
      "lineIdx": 64,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 19,
      "to": 23
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 19,
      "to": 23
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 11,
      "to": 17
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 11,
      "to": 17
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 37,
      "from": 79,
      "to": 80
    },
    "right": {
      "line": "    random_ids = frozenset(map(lambda x: random.randint(0, 1000000000000000000), c_exps))",
      "lineIdx": 35,
      "from": 79,
      "to": 80
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 101,
      "to": 102
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 101,
      "to": 102
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 83,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "    print(\"Best c: \" + str(2**best[c_exp_key]))",
      "lineIdx": 81,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 50,
      "from": 35,
      "to": 51
    },
    "right": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 48,
      "from": 35,
      "to": 51
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 57,
      "from": 12,
      "to": 27
    },
    "right": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 55,
      "from": 12,
      "to": 27
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 41,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "    for msg_id, c_exp in list(c_exps_by_id.items()):",
      "lineIdx": 39,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 63,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 61,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "    received_c_exps = set()",
      "lineIdx": 46,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    received_c_exps = set()",
      "lineIdx": 44,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 55,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "            print(\"Received result: \" + message.body)",
      "lineIdx": 53,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 47,
      "to": 51
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 47,
      "to": 51
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 61,
      "to": 63
    },
    "right": {
      "line": "    #todo purge queue, find out what to do if calculation is in progress",
      "lineIdx": 28,
      "from": 61,
      "to": 63
    }
  }, {
    "left": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 9,
      "to": 13
    },
    "right": {
      "line": "    with open(local_training_file_path, 'rb') as training_file:",
      "lineIdx": 15,
      "from": 9,
      "to": 13
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 25,
      "to": 34
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 25,
      "to": 34
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 63,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "                if(c_exps_valid == True):",
      "lineIdx": 61,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "# -*- coding: utf-8 -*-",
      "lineIdx": 0,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 23,
      "to": 33
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 23,
      "to": 33
    }
  }, {
    "left": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 70,
      "from": 17,
      "to": 22
    },
    "right": {
      "line": "                 print(\"Received invalid msg_id: \" + str(received_msg_id) + \", ignored.\")   ",
      "lineIdx": 68,
      "from": 17,
      "to": 22
    }
  }, {
    "left": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 64,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "                    received_c_exps.add(expected_c_exp)",
      "lineIdx": 62,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 50,
      "from": 20,
      "to": 22
    },
    "right": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 48,
      "from": 20,
      "to": 22
    }
  }, {
    "left": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 50,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "        for message in error_queue.receive_messages():",
      "lineIdx": 48,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 113,
      "to": 150
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 113,
      "to": 150
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 89,
      "to": 90
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 89,
      "to": 90
    }
  }, {
    "left": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 59,
      "from": 15,
      "to": 30
    },
    "right": {
      "line": "            if received_msg_id in c_exps_by_id:",
      "lineIdx": 57,
      "from": 15,
      "to": 30
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 77,
      "to": 78
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 77,
      "to": 78
    }
  }, {
    "left": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 38,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "    assert(len(c_exps) == len(random_ids))",
      "lineIdx": 36,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 51,
      "from": 39,
      "to": 46
    },
    "right": {
      "line": "            print(\"Received error: \" + message.body)",
      "lineIdx": 49,
      "from": 39,
      "to": 46
    }
  }, {
    "left": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 39,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "    c_exps_by_id = dict(zip(random_ids, c_exps))",
      "lineIdx": 37,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 35,
      "to": 38
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 35,
      "to": 38
    }
  }, {
    "left": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 90,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "        f.write(str(best[f_score_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 58,
      "from": 32,
      "to": 53
    },
    "right": {
      "line": "            results = json_dict[json_response_results]",
      "lineIdx": 56,
      "from": 32,
      "to": 53
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 44,
      "to": 48
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 44,
      "to": 48
    }
  }, {
    "left": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "        print(\"Non-empty queues! \")",
      "lineIdx": 24,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 36,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "    c_exps = frozenset(range(c_exp_begin, c_exp_end, c_exp_step))",
      "lineIdx": 34,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 78,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "    print(\"Number of features: \" + str(len(x[0])))",
      "lineIdx": 76,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 137,
      "to": 138
    },
    "right": {
      "line": "    if(int(error_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(result_queue.attributes['ApproximateNumberOfMessages']) != 0 or ",
      "lineIdx": 21,
      "from": 137,
      "to": 138
    }
  }, {
    "left": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 42,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "        task =  \"{0},{1},{2}\".format(msg_id, c_exp, training_file_md5)",
      "lineIdx": 40,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 57,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 55,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 89,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "        f.write(str(best[g_exp_key]) + \"\\n\")",
      "lineIdx": 87,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "def upload_training_file(local_training_file_path):",
      "lineIdx": 14,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 82,
      "from": 27,
      "to": 37
    },
    "right": {
      "line": "    best = max(valids, key=itemgetter(f_score_key)) ",
      "lineIdx": 80,
      "from": 27,
      "to": 37
    }
  }, {
    "left": {
      "line": "    received_c_exps = set()",
      "lineIdx": 46,
      "from": 4,
      "to": 19
    },
    "right": {
      "line": "    received_c_exps = set()",
      "lineIdx": 44,
      "from": 4,
      "to": 19
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 48,
      "to": 65
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 48,
      "to": 65
    }
  }, {
    "left": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 57,
      "from": 44,
      "to": 64
    },
    "right": {
      "line": "            received_msg_id = int(json_dict[json_response_msg_id])",
      "lineIdx": 55,
      "from": 44,
      "to": 64
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 154,
      "to": 155
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 154,
      "to": 155
    }
  }, {
    "left": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 158,
      "to": 159
    },
    "right": {
      "line": "       int(result_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or int(input_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0):",
      "lineIdx": 23,
      "from": 158,
      "to": 159
    }
  }, {
    "left": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 94,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "print(\"--- %s seconds ---\" % (time.time() - start_time))",
      "lineIdx": 92,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 87,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "    with open('cross_vaildation_result.txt', 'w') as f:",
      "lineIdx": 85,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 85,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    print(\"Best f validation score: \" + str(best[f_score_key]))",
      "lineIdx": 83,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 49,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "        print(\"Waiting for messages\")",
      "lineIdx": 47,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 54,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "        for message in result_queue.receive_messages():",
      "lineIdx": 52,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 141,
      "to": 142
    },
    "right": {
      "line": "       int(input_queue.attributes['ApproximateNumberOfMessages']) != 0 or int(error_queue.attributes['ApproximateNumberOfMessagesNotVisible']) != 0 or",
      "lineIdx": 22,
      "from": 141,
      "to": 142
    }
  }, {
    "left": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 68,
      "from": 27,
      "to": 32
    },
    "right": {
      "line": "                    print(\"Wrong c_exps! Ignoring.\")",
      "lineIdx": 66,
      "from": 27,
      "to": 32
    }
  }, {
    "left": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "    training_file_md5 = upload_training_file(local_training_file_path)",
      "lineIdx": 30,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 77,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "    print(\"Number of samples: \" + str(len(y)))",
      "lineIdx": 75,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 88,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "        f.write(str(best[c_exp_key]) + \"\\n\")",
      "lineIdx": 86,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 60,
      "from": 16,
      "to": 30
    },
    "right": {
      "line": "                expected_c_exp = c_exps_by_id[received_msg_id]",
      "lineIdx": 58,
      "from": 16,
      "to": 30
    }
  }, {
    "left": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "def main():",
      "lineIdx": 20,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 84,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    print(\"Best g: \" + str(2**best[g_exp_key]))",
      "lineIdx": 82,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "    #c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "    c_exp_begin, c_exp_end, c_exp_step = -5,  15,  2",
      "lineIdx": 32,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "        s3.Bucket(bucket_name).put_object(Key = training_file_key, Body = training_file_content)",
      "lineIdx": 17,
      "from": 46,
      "to": 47
    }
  }]
}