{
  "matches": [{
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 25,
      "from": 1,
      "to": 6
    },
    "right": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 29,
      "from": 1,
      "to": 6
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "#ifndef TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 0,
      "from": 8,
      "to": 28
    },
    "right": {
      "line": "#ifndef TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 0,
      "from": 8,
      "to": 28
    }
  }, {
    "left": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 1,
      "to": 8
    },
    "right": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 20,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 24,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 21,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 25,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 1,
      "to": 8
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "#ifndef TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 0,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "#ifndef TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 0,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 25,
      "from": 10,
      "to": 30
    },
    "right": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 29,
      "from": 10,
      "to": 30
    }
  }, {
    "left": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 21,
      "to": 27
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 21,
      "to": 27
    }
  }, {
    "left": {
      "line": "class TextBlockLinkedOneToOneMatch;",
      "lineIdx": 9,
      "from": 6,
      "to": 34
    },
    "right": {
      "line": "class TextBlockLinkedOneToOneMatch;",
      "lineIdx": 9,
      "from": 6,
      "to": 34
    }
  }, {
    "left": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 20,
      "from": 7,
      "to": 35
    },
    "right": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 24,
      "from": 7,
      "to": 35
    }
  }, {
    "left": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 26,
      "to": 29
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 26,
      "to": 29
    }
  }, {
    "left": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 20,
      "from": 42,
      "to": 59
    },
    "right": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 24,
      "from": 42,
      "to": 59
    }
  }, {
    "left": {
      "line": "};",
      "lineIdx": 23,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "};",
      "lineIdx": 27,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 20,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 24,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 10,
      "to": 16
    },
    "right": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 10,
      "to": 16
    }
  }, {
    "left": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 20,
      "from": 87,
      "to": 88
    },
    "right": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 24,
      "from": 87,
      "to": 88
    }
  }, {
    "left": {
      "line": "class OneToOneAlignment;",
      "lineIdx": 8,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "class OneToOneAlignment;",
      "lineIdx": 8,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 11,
      "to": 21
    },
    "right": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 11,
      "to": 21
    }
  }, {
    "left": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 25,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 29,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 10,
      "to": 13
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 10,
      "to": 13
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "  TwoSidedDiffWidget();",
      "lineIdx": 19,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "  TwoSidedDiffWidget();",
      "lineIdx": 23,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 27,
      "to": 33
    },
    "right": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 27,
      "to": 33
    }
  }, {
    "left": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "#ifndef TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#ifndef TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 25,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 29,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 25,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#endif // TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 29,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 20,
      "from": 61,
      "to": 86
    },
    "right": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 24,
      "from": 61,
      "to": 86
    }
  }, {
    "left": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 11,
      "to": 19
    },
    "right": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 11,
      "to": 19
    }
  }, {
    "left": {
      "line": "  TwoSidedDiffWidget();",
      "lineIdx": 19,
      "from": 2,
      "to": 20
    },
    "right": {
      "line": "  TwoSidedDiffWidget();",
      "lineIdx": 23,
      "from": 2,
      "to": 20
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "class OneToOneAlignment;",
      "lineIdx": 8,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "class OneToOneAlignment;",
      "lineIdx": 8,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 21,
      "from": 20,
      "to": 29
    },
    "right": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 25,
      "from": 20,
      "to": 29
    }
  }, {
    "left": {
      "line": "#define TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 1,
      "from": 8,
      "to": 28
    },
    "right": {
      "line": "#define TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 1,
      "from": 8,
      "to": 28
    }
  }, {
    "left": {
      "line": "class OneToOneAlignment;",
      "lineIdx": 8,
      "from": 6,
      "to": 23
    },
    "right": {
      "line": "class OneToOneAlignment;",
      "lineIdx": 8,
      "from": 6,
      "to": 23
    }
  }, {
    "left": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 34,
      "to": 58
    },
    "right": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 34,
      "to": 58
    }
  }, {
    "left": {
      "line": "public:",
      "lineIdx": 18,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "public:",
      "lineIdx": 22,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 20,
      "from": 86,
      "to": 87
    },
    "right": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 24,
      "from": 86,
      "to": 87
    }
  }, {
    "left": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 21,
      "from": 2,
      "to": 19
    },
    "right": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 25,
      "from": 2,
      "to": 19
    }
  }, {
    "left": {
      "line": "#define TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 1,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#define TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 1,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "  TwoSidedDiffWidget();",
      "lineIdx": 19,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "  TwoSidedDiffWidget();",
      "lineIdx": 23,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 20,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 24,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 20,
      "from": 36,
      "to": 41
    },
    "right": {
      "line": "  void setComputedOrLoadedAlignment(const OneToOneAlignment& computedOrLoadedAlignment);",
      "lineIdx": 24,
      "from": 36,
      "to": 41
    }
  }, {
    "left": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 41,
      "to": 44
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 41,
      "to": 44
    }
  }, {
    "left": {
      "line": "class TextBlockLinkedOneToOneMatch;",
      "lineIdx": 9,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "class TextBlockLinkedOneToOneMatch;",
      "lineIdx": 9,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 21,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 25,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "#define TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 1,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "#define TWOSIDEDDIFFWIDGET_H",
      "lineIdx": 1,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 6,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 11,
      "to": 17
    },
    "right": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 11,
      "to": 17
    }
  }, {
    "left": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 21,
      "from": 32,
      "to": 37
    },
    "right": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 25,
      "from": 32,
      "to": 37
    }
  }, {
    "left": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 6,
      "to": 9
    },
    "right": {
      "line": "using std::vector;",
      "lineIdx": 10,
      "from": 6,
      "to": 9
    }
  }, {
    "left": {
      "line": "  TwoSidedDiffWidget();",
      "lineIdx": 19,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "  TwoSidedDiffWidget();",
      "lineIdx": 23,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "public:",
      "lineIdx": 18,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "public:",
      "lineIdx": 22,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "{",
      "lineIdx": 15,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "{",
      "lineIdx": 15,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 6,
      "to": 24
    },
    "right": {
      "line": "class TwoSidedDiffWidget : public CanvasedDoubleTextEditor",
      "lineIdx": 14,
      "from": 6,
      "to": 24
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 7,
      "to": 25
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 7,
      "to": 25
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 30,
      "to": 39
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 30,
      "to": 39
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 45,
      "to": 55
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 45,
      "to": 55
    }
  }, {
    "left": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 21,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "  OneToOneAlignment alignment() const;",
      "lineIdx": 25,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "class TextBlockLinkedOneToOneMatch;",
      "lineIdx": 9,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "class TextBlockLinkedOneToOneMatch;",
      "lineIdx": 9,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#include <memory>",
      "lineIdx": 3,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 22,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "  void addManualAlignment(int aLeftLine, int aRightLine);",
      "lineIdx": 26,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "};",
      "lineIdx": 23,
      "from": 1,
      "to": 2
    },
    "right": {
      "line": "};",
      "lineIdx": 27,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 6,
      "to": 9
    },
    "right": {
      "line": "using std::unique_ptr;",
      "lineIdx": 12,
      "from": 6,
      "to": 9
    }
  }, {
    "left": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 17,
      "to": 35
    },
    "right": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 17,
      "to": 35
    }
  }, {
    "left": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 1,
      "to": 8
    },
    "right": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 10,
      "to": 34
    },
    "right": {
      "line": "#include \"canvaseddoubletexteditor.h\"",
      "lineIdx": 5,
      "from": 10,
      "to": 34
    }
  }, {
    "left": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "  Logger logger{\"TwoSidedDiffWidget\"};",
      "lineIdx": 16,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 6,
      "to": 9
    },
    "right": {
      "line": "using std::weak_ptr;",
      "lineIdx": 11,
      "from": 6,
      "to": 9
    }
  }]
}