{
  "matches": [{
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 10,
      "to": 22
    },
    "right": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 10,
      "to": 22
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 92,
      "to": 93
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 92,
      "to": 93
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 15,
      "to": 20
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 15,
      "to": 20
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 66,
      "to": 79
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 66,
      "to": 79
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 39,
      "to": 56
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 39,
      "to": 56
    }
  }, {
    "left": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 40,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 41,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 58,
      "to": 72
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 58,
      "to": 72
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 42,
      "to": 45
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 42,
      "to": 45
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 23,
      "to": 28
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 23,
      "to": 28
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 36,
      "to": 41
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 36,
      "to": 41
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 45,
      "to": 53
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 45,
      "to": 53
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 34,
      "to": 37
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 34,
      "to": 37
    }
  }, {
    "left": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 3,
      "to": 6
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 3,
      "to": 6
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 0,
      "to": 12
    },
    "right": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 0,
      "to": 12
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 83,
      "to": 88
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 83,
      "to": 88
    }
  }, {
    "left": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 24,
      "to": 32
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 24,
      "to": 32
    }
  }, {
    "left": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 40,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 41,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 20,
      "from": 14,
      "to": 25
    },
    "right": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 21,
      "from": 14,
      "to": 25
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 80,
      "to": 81
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 80,
      "to": 81
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 27,
      "to": 38
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 27,
      "to": 38
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "{",
      "lineIdx": 5,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "{",
      "lineIdx": 5,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 68,
      "to": 69
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 68,
      "to": 69
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 9,
      "to": 19
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 9,
      "to": 19
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 25,
      "to": 30
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 25,
      "to": 30
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 20,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 21,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "        }",
      "lineIdx": 25,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "        }",
      "lineIdx": 26,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "}",
      "lineIdx": 9,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "}",
      "lineIdx": 10,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 30,
      "to": 37
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 30,
      "to": 37
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "        if(output.level >= level)",
      "lineIdx": 22,
      "from": 11,
      "to": 17
    },
    "right": {
      "line": "        if(output.level >= level)",
      "lineIdx": 23,
      "from": 11,
      "to": 17
    }
  }, {
    "left": {
      "line": "    }",
      "lineIdx": 26,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "    }",
      "lineIdx": 27,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 61,
      "to": 62
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 61,
      "to": 62
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 7,
      "to": 12
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 7,
      "to": 12
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 29,
      "to": 34
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 29,
      "to": 34
    }
  }, {
    "left": {
      "line": "        if(output.level >= level)",
      "lineIdx": 22,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "        if(output.level >= level)",
      "lineIdx": 23,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 4,
      "to": 11
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 4,
      "to": 11
    }
  }, {
    "left": {
      "line": "        if(output.level >= level)",
      "lineIdx": 22,
      "from": 18,
      "to": 23
    },
    "right": {
      "line": "        if(output.level >= level)",
      "lineIdx": 23,
      "from": 18,
      "to": 23
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 40,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 41,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 11,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 12,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "        {",
      "lineIdx": 23,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "        {",
      "lineIdx": 24,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "        if(output.level >= level)",
      "lineIdx": 22,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "        if(output.level >= level)",
      "lineIdx": 23,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 104,
      "to": 105
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 104,
      "to": 105
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 11,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 12,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "        if(output.level >= level)",
      "lineIdx": 22,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "        if(output.level >= level)",
      "lineIdx": 23,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "}",
      "lineIdx": 32,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "}",
      "lineIdx": 33,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 12,
      "to": 18
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 12,
      "to": 18
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 14,
      "to": 26
    },
    "right": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 14,
      "to": 26
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "{",
      "lineIdx": 12,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "{",
      "lineIdx": 13,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 1,
      "to": 8
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 51,
      "to": 54
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 51,
      "to": 54
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 39,
      "to": 43
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 39,
      "to": 43
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 20,
      "from": 35,
      "to": 42
    },
    "right": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 21,
      "from": 35,
      "to": 42
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "        if(output.level >= level)",
      "lineIdx": 22,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "        if(output.level >= level)",
      "lineIdx": 23,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 21,
      "to": 25
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 21,
      "to": 25
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 49,
      "to": 56
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 49,
      "to": 56
    }
  }, {
    "left": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 40,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 41,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 5,
      "to": 17
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 5,
      "to": 17
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 45,
      "from": 33,
      "to": 41
    },
    "right": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 46,
      "from": 33,
      "to": 41
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 19,
      "to": 28
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 19,
      "to": 28
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 88,
      "to": 89
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 88,
      "to": 89
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "{",
      "lineIdx": 35,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "{",
      "lineIdx": 36,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 35,
      "to": 40
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 35,
      "to": 40
    }
  }, {
    "left": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 1,
      "to": 8
    },
    "right": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 31,
      "to": 40
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 31,
      "to": 40
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 40,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 41,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 22,
      "to": 33
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 22,
      "to": 33
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 53,
      "to": 58
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 53,
      "to": 58
    }
  }, {
    "left": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 20,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 21,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 32,
      "to": 36
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 32,
      "to": 36
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 23,
      "to": 28
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 23,
      "to": 28
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 80,
      "to": 82
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 80,
      "to": 82
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 39,
      "to": 60
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 39,
      "to": 60
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 33,
      "to": 40
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 33,
      "to": 40
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "{",
      "lineIdx": 41,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "{",
      "lineIdx": 42,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 40,
      "from": 20,
      "to": 32
    },
    "right": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 41,
      "from": 20,
      "to": 32
    }
  }, {
    "left": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 20,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 21,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 14,
      "to": 19
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 14,
      "to": 19
    }
  }, {
    "left": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 11,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 12,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 32,
      "to": 36
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 32,
      "to": 36
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 108,
      "to": 109
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 108,
      "to": 109
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 82,
      "to": 83
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 82,
      "to": 83
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 5,
      "to": 17
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 5,
      "to": 17
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 23,
      "to": 29
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 23,
      "to": 29
    }
  }, {
    "left": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 20,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 21,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 70,
      "to": 75
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 70,
      "to": 75
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 4,
      "to": 11
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 4,
      "to": 11
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 40,
      "from": 6,
      "to": 18
    },
    "right": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 41,
      "from": 6,
      "to": 18
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 14,
      "to": 19
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 14,
      "to": 19
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 27,
      "to": 30
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 27,
      "to": 30
    }
  }, {
    "left": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 40,
      "from": 34,
      "to": 37
    },
    "right": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 41,
      "from": 34,
      "to": 37
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 37,
      "to": 49
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 37,
      "to": 49
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 37,
      "to": 49
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 37,
      "to": 49
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 96,
      "to": 97
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 96,
      "to": 97
    }
  }, {
    "left": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 20,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 21,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 11,
      "from": 15,
      "to": 27
    },
    "right": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 12,
      "from": 15,
      "to": 27
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "    return instance;",
      "lineIdx": 42,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "    return instance;",
      "lineIdx": 43,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 11,
      "from": 0,
      "to": 12
    },
    "right": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 12,
      "from": 0,
      "to": 12
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 58,
      "to": 65
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 58,
      "to": 65
    }
  }, {
    "left": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 45,
      "from": 19,
      "to": 31
    },
    "right": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 46,
      "from": 19,
      "to": 31
    }
  }, {
    "left": {
      "line": "    return instance;",
      "lineIdx": 42,
      "from": 11,
      "to": 19
    },
    "right": {
      "line": "    return instance;",
      "lineIdx": 43,
      "from": 11,
      "to": 19
    }
  }, {
    "left": {
      "line": "    return instance;",
      "lineIdx": 42,
      "from": 4,
      "to": 10
    },
    "right": {
      "line": "    return instance;",
      "lineIdx": 43,
      "from": 4,
      "to": 10
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 5,
      "to": 17
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 5,
      "to": 17
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 4,
      "to": 13
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 4,
      "to": 13
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 98,
      "to": 99
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 98,
      "to": 99
    }
  }, {
    "left": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 1,
      "to": 8
    },
    "right": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "        if(output.level >= level)",
      "lineIdx": 22,
      "from": 8,
      "to": 10
    },
    "right": {
      "line": "        if(output.level >= level)",
      "lineIdx": 23,
      "from": 8,
      "to": 10
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 19,
      "to": 25
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 19,
      "to": 25
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "}",
      "lineIdx": 38,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "}",
      "lineIdx": 39,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "        if(output.level >= level)",
      "lineIdx": 22,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "        if(output.level >= level)",
      "lineIdx": 23,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 27,
      "to": 38
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 27,
      "to": 38
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 29,
      "to": 34
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 29,
      "to": 34
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 110,
      "to": 111
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 110,
      "to": 111
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 12,
      "to": 21
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "LoggerCommon::LoggerCommon()",
      "lineIdx": 4,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "#include \"loggercommon.h\"",
      "lineIdx": 0,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 36,
      "to": 41
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 36,
      "to": 41
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 106,
      "to": 107
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 106,
      "to": 107
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 107,
      "to": 108
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 107,
      "to": 108
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 63,
      "to": 66
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 83,
      "to": 86
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 44,
      "to": 50
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 44,
      "to": 50
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "        if(output.level >= level)",
      "lineIdx": 22,
      "from": 27,
      "to": 32
    },
    "right": {
      "line": "        if(output.level >= level)",
      "lineIdx": 23,
      "from": 27,
      "to": 32
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 100,
      "to": 103
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 100,
      "to": 103
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 23,
      "to": 29
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 23,
      "to": 29
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 25,
      "to": 30
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 25,
      "to": 30
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 72,
      "to": 73
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 68,
      "to": 69
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 88,
      "to": 89
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 9,
      "to": 19
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 9,
      "to": 19
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "{",
      "lineIdx": 30,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "{",
      "lineIdx": 31,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 56,
      "to": 61
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 56,
      "to": 61
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 42,
      "to": 44
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 42,
      "to": 44
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 42,
      "to": 46
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 42,
      "to": 46
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 4,
      "to": 13
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 4,
      "to": 13
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 20,
      "to": 23
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 42,
      "to": 49
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 42,
      "to": 49
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 86,
      "to": 87
    }
  }, {
    "left": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 11,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 12,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 36,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 37,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 45,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 46,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 15,
      "to": 20
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 15,
      "to": 20
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 29,
      "to": 34
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 29,
      "to": 34
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 45,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 46,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 13,
      "to": 24
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 13,
      "to": 24
    }
  }, {
    "left": {
      "line": "}",
      "lineIdx": 27,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "}",
      "lineIdx": 28,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 31,
      "to": 42
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 31,
      "to": 42
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<StandardLoggingOutput>());",
      "lineIdx": 6,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 89,
      "to": 90
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 67,
      "to": 68
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 87,
      "to": 88
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 45,
      "from": 6,
      "to": 18
    },
    "right": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 46,
      "from": 6,
      "to": 18
    }
  }, {
    "left": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 11,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "LoggerCommon::~LoggerCommon()",
      "lineIdx": 12,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 109,
      "to": 110
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 109,
      "to": 110
    }
  }, {
    "left": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 10,
      "to": 15
    },
    "right": {
      "line": "#include <QTime>",
      "lineIdx": 1,
      "from": 10,
      "to": 15
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 45,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 46,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 82,
      "to": 83
    }
  }, {
    "left": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"log.txt\"));",
      "lineIdx": 7,
      "from": 21,
      "to": 25
    },
    "right": {
      "line": "    addOutput(Level::INFO, make_unique<FileLoggingOutput>(\"/home/kristof/sensi_log.txt\"));",
      "lineIdx": 8,
      "from": 21,
      "to": 25
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 20,
      "to": 23
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 19,
      "to": 22
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 19,
      "to": 22
    }
  }, {
    "left": {
      "line": "    {",
      "lineIdx": 21,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "    {",
      "lineIdx": 22,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "#include \"../make_unique.h\"",
      "lineIdx": 2,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 37,
      "from": 12,
      "to": 21
    },
    "right": {
      "line": "    outputs.push_back(LoggingInfo{std::move(output), level});",
      "lineIdx": 38,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 40,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "const LoggerCommon& LoggerCommon::get()",
      "lineIdx": 41,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 90,
      "to": 91
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 90,
      "to": 91
    }
  }, {
    "left": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 20,
      "from": 27,
      "to": 33
    },
    "right": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 21,
      "from": 27,
      "to": 33
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 8,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger started\");",
      "lineIdx": 9,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 24,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "            output.output->log(outputMsg);",
      "lineIdx": 25,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 47,
      "to": 57
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 47,
      "to": 57
    }
  }, {
    "left": {
      "line": "{",
      "lineIdx": 17,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "{",
      "lineIdx": 18,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 18,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "    std::lock_guard<std::mutex> lock(loggingMutex);",
      "lineIdx": 19,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 16,
      "from": 19,
      "to": 22
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const QString& msg) const",
      "lineIdx": 17,
      "from": 19,
      "to": 22
    }
  }, {
    "left": {
      "line": "}",
      "lineIdx": 43,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "}",
      "lineIdx": 44,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 29,
      "from": 66,
      "to": 68
    },
    "right": {
      "line": "void LoggerCommon::log(Level level, const char * cformat, va_list ap) const",
      "lineIdx": 30,
      "from": 66,
      "to": 68
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 74,
      "to": 80
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 74,
      "to": 80
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 94,
      "to": 95
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 94,
      "to": 95
    }
  }, {
    "left": {
      "line": "}",
      "lineIdx": 14,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "}",
      "lineIdx": 15,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 31,
      "from": 14,
      "to": 21
    },
    "right": {
      "line": "   log(level, QString().vsprintf(cformat, ap));",
      "lineIdx": 32,
      "from": 14,
      "to": 21
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 79,
      "to": 80
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 79,
      "to": 80
    }
  }, {
    "left": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 20,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "    for(const LoggingInfo& output: outputs)",
      "lineIdx": 21,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 13,
      "from": 30,
      "to": 35
    },
    "right": {
      "line": "    log(Level::ERROR, \"Logger ended\");",
      "lineIdx": 14,
      "from": 30,
      "to": 35
    }
  }, {
    "left": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 45,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "const LoggerCommon LoggerCommon::instance;",
      "lineIdx": 46,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 19,
      "from": 24,
      "to": 29
    },
    "right": {
      "line": "    QString outputMsg = QTime::currentTime().toString() + \" - \" + levelToString.at(level) + \" - \" + msg + \"\\n\";",
      "lineIdx": 20,
      "from": 24,
      "to": 29
    }
  }, {
    "left": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 34,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "void LoggerCommon::addOutput(Level level, std::unique_ptr<ILoggingOutput> output)",
      "lineIdx": 35,
      "from": 45,
      "to": 46
    }
  }]
}