{
  "matches": [{
    "left": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 29,
      "to": 33
    },
    "right": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 29,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 257,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 262,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 1,
      "to": 3
    },
    "right": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 1,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 140,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 145,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 100,
      "from": 15,
      "to": 21
    },
    "right": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 105,
      "from": 15,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 137,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 142,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 264,
      "from": 28,
      "to": 32
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 269,
      "from": 28,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 157,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 162,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 12,
      "to": 14
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 12,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 219,
      "from": 22,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 224,
      "from": 22,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 178,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 183,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 124,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 129,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 219,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 224,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "C_SVC = 0",
      "lineIdx": 28,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "C_SVC = 0",
      "lineIdx": 28,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 158,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 163,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 9,
      "to": 18
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 9,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 262,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 267,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 161,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 166,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 137,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 142,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 94,
      "to": 95
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 94,
      "to": 95
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 175,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 180,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\treturn ret, max_idx",
      "lineIdx": 84,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\treturn ret, max_idx",
      "lineIdx": 84,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 239,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 244,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 264,
      "from": 9,
      "to": 27
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 269,
      "from": 9,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 236,
      "from": 22,
      "to": 28
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 241,
      "from": 22,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 17,
      "to": 21
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 17,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 158,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 163,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 196,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 201,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 32,
      "to": 34
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 32,
      "to": 34
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 61,
      "to": 72
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 61,
      "to": 72
    }
  }, {
    "left": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 263,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 268,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\tmax_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "                    max_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 117,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 122,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 249,
      "from": 18,
      "to": 22
    },
    "right": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 254,
      "from": 18,
      "to": 22
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 25,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 25,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 26,
      "to": 32
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 26,
      "to": 32
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 1,
      "to": 3
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 1,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 1,
      "to": 9
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 1,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 39,
      "to": 44
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 39,
      "to": 44
    }
  }, {
    "left": {
      "line": "SIGMOID = 3",
      "lineIdx": 37,
      "from": 0,
      "to": 7
    },
    "right": {
      "line": "SIGMOID = 3",
      "lineIdx": 37,
      "from": 0,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 299,
      "from": 2,
      "to": 7
    },
    "right": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 304,
      "from": 2,
      "to": 7
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 46,
      "to": 54
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 46,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 18,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 18,
      "to": 21
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "POLY = 1",
      "lineIdx": 35,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "POLY = 1",
      "lineIdx": 35,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 270,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 275,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 3,
      "to": 10
    }
  }, {
    "left": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 300,
      "from": 1,
      "to": 2
    },
    "right": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 305,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 64,
      "to": 71
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 64,
      "to": 71
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 72,
      "to": 73
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 15,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 15,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 6,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 82,
      "to": 83
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 82,
      "to": 83
    }
  }, {
    "left": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 18,
      "to": 27
    },
    "right": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 18,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 154,
      "from": 25,
      "to": 32
    },
    "right": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 159,
      "from": 25,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 141,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 146,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 2,
      "to": 7
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 2,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 167,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 172,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 289,
      "from": 3,
      "to": 9
    },
    "right": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 294,
      "from": 3,
      "to": 9
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\telse:",
      "lineIdx": 66,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\telse:",
      "lineIdx": 66,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 19,
      "to": 22
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 19,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 2,
      "to": 5
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 2,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 262,
      "from": 13,
      "to": 17
    },
    "right": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 267,
      "from": 13,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 24,
      "to": 26
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 24,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 22,
      "to": 28
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 22,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 199,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 204,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "PRECOMPUTED = 4",
      "lineIdx": 38,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "PRECOMPUTED = 4",
      "lineIdx": 38,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 244,
      "from": 45,
      "to": 49
    },
    "right": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 249,
      "from": 45,
      "to": 49
    }
  }, {
    "left": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 17,
      "to": 23
    },
    "right": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 17,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 11,
      "to": 15
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 11,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 21,
      "to": 24
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 21,
      "to": 24
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 11,
      "to": 17
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 11,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 103,
      "to": 104
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 103,
      "to": 104
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 255,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 260,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tif not isKernel:",
      "lineIdx": 63,
      "from": 2,
      "to": 4
    },
    "right": {
      "line": "\t\tif not isKernel:",
      "lineIdx": 63,
      "from": 2,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 9,
      "to": 17
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 9,
      "to": 17
    }
  }, {
    "left": {
      "line": "try:",
      "lineIdx": 13,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "try:",
      "lineIdx": 13,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 22,
      "to": 24
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 22,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\tself.C = 1",
      "lineIdx": 142,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.C = 1",
      "lineIdx": 147,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 26,
      "to": 38
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 26,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 61,
      "to": 62
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 61,
      "to": 62
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 24,
      "to": 28
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 24,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 58,
      "to": 63
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 58,
      "to": 63
    }
  }, {
    "left": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 244,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 249,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 145,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 150,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 12,
      "to": 23
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 12,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "\t\tweight = []",
      "lineIdx": 164,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tweight = []",
      "lineIdx": 169,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 9,
      "to": 14
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 9,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 84,
      "to": 85
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 84,
      "to": 85
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 12,
      "to": 20
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 12,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 289,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 294,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 219,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 224,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 22,
      "to": 33
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 22,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 261,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 266,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 16,
      "to": 22
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 16,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 299,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 304,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 39,
      "to": 45
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 39,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 102,
      "from": 11,
      "to": 18
    },
    "right": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 107,
      "from": 11,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 299,
      "from": 8,
      "to": 18
    },
    "right": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 304,
      "from": 8,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 71,
      "to": 72
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 71,
      "to": 72
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 249,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 254,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 259,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 264,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 21,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 21,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 265,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 270,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 55,
      "to": 58
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 55,
      "to": 58
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 32,
      "to": 40
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 32,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 214,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 219,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 167,
      "from": 2,
      "to": 7
    },
    "right": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 172,
      "from": 2,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 147,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 152,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 116,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 121,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 259,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 264,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "from ctypes import *",
      "lineIdx": 2,
      "from": 5,
      "to": 11
    },
    "right": {
      "line": "from ctypes import *",
      "lineIdx": 2,
      "from": 5,
      "to": 11
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 215,
      "from": 21,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 220,
      "from": 21,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 244,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 249,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 280,
      "from": 3,
      "to": 6
    },
    "right": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 285,
      "from": 3,
      "to": 6
    }
  }, {
    "left": {
      "line": "RBF = 2",
      "lineIdx": 36,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "RBF = 2",
      "lineIdx": 36,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 51,
      "to": 53
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 51,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 178,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 183,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 7,
      "to": 17
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 7,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 213,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 218,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 44,
      "to": 50
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 44,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 252,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 257,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 143,
      "from": 15,
      "to": 18
    },
    "right": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 148,
      "from": 15,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 104,
      "to": 112
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 104,
      "to": 112
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 12,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 15,
      "to": 24
    },
    "right": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 15,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 49,
      "to": 58
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 49,
      "to": 58
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 91,
      "to": 98
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 91,
      "to": 98
    }
  }, {
    "left": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 246,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 251,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 24,
      "to": 26
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 24,
      "to": 26
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 72,
      "to": 77
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 72,
      "to": 77
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 75,
      "to": 76
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 75,
      "to": 76
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 25,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 25,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 215,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 220,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 61,
      "to": 72
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 61,
      "to": 72
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 265,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 270,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 145,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 150,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 21,
      "to": 35
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 21,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 289,
      "from": 17,
      "to": 20
    },
    "right": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 294,
      "from": 17,
      "to": 20
    }
  }, {
    "left": {
      "line": "POLY = 1",
      "lineIdx": 35,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "POLY = 1",
      "lineIdx": 35,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 9,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 9,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 299,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 304,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 15,
      "to": 17
    },
    "right": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 15,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 169,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 174,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 47,
      "to": 54
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 47,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 6,
      "to": 14
    },
    "right": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 6,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 45,
      "to": 48
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 45,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 155,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 160,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 31,
      "to": 34
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 31,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 33,
      "to": 36
    },
    "right": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 33,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 12,
      "to": 23
    },
    "right": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 12,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 267,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 272,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 139,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 144,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 18,
      "to": 25
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 18,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 28,
      "to": 39
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 28,
      "to": 39
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 29,
      "to": 36
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 29,
      "to": 36
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 98,
      "to": 99
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 98,
      "to": 99
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\tmax_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "                    max_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\tif options == None:",
      "lineIdx": 120,
      "from": 5,
      "to": 12
    },
    "right": {
      "line": "\t\tif options == None:",
      "lineIdx": 125,
      "from": 5,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 147,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 152,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "from os import path",
      "lineIdx": 4,
      "from": 15,
      "to": 19
    },
    "right": {
      "line": "from os import path",
      "lineIdx": 4,
      "from": 15,
      "to": 19
    }
  }, {
    "left": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 53,
      "to": 60
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 53,
      "to": 60
    }
  }, {
    "left": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 145,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 150,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 44,
      "to": 55
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 44,
      "to": 55
    }
  }, {
    "left": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 301,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 306,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 25,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 25,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 35,
      "to": 43
    },
    "right": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 35,
      "to": 43
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 47,
      "to": 54
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 47,
      "to": 54
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 222,
      "from": 44,
      "to": 54
    },
    "right": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 227,
      "from": 44,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 75,
      "to": 82
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 75,
      "to": 82
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 71,
      "to": 72
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 71,
      "to": 72
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 187,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 192,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 12,
      "to": 21
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 2,
      "to": 13
    },
    "right": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 2,
      "to": 13
    }
  }, {
    "left": {
      "line": "class svm_model(Structure):",
      "lineIdx": 229,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "class svm_model(Structure):",
      "lineIdx": 234,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 138,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 143,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 117,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 122,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 202,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 21,
      "to": 26
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 21,
      "to": 26
    }
  }, {
    "left": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 134,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 139,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\tmax_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "                    max_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 12,
      "to": 17
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 12,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 262,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 267,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 222,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 227,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 21,
      "to": 29
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 21,
      "to": 29
    }
  }, {
    "left": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 20,
      "to": 28
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 20,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 196,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 201,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 157,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 162,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 12,
      "to": 18
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 12,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 262,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 267,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 13,
      "to": 20
    },
    "right": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 13,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 109,
      "to": 110
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 109,
      "to": 110
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 6,
      "to": 9
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 6,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 116,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 121,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 262,
      "from": 2,
      "to": 10
    },
    "right": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 267,
      "from": 2,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 30,
      "to": 39
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 30,
      "to": 39
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 37,
      "to": 42
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 37,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 23,
      "to": 28
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 23,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\tmax_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "                    max_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 29,
      "to": 31
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 29,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 102,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 107,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 124,
      "from": 13,
      "to": 17
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 129,
      "from": 13,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 16,
      "to": 18
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 16,
      "to": 18
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\treturn s",
      "lineIdx": 132,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn s",
      "lineIdx": 137,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 253,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 258,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 24,
      "to": 36
    },
    "right": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 24,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 212,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "LINEAR = 0",
      "lineIdx": 34,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "LINEAR = 0",
      "lineIdx": 34,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 205,
      "from": 39,
      "to": 49
    },
    "right": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 210,
      "from": 39,
      "to": 49
    }
  }, {
    "left": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 81,
      "to": 82
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 81,
      "to": 82
    }
  }, {
    "left": {
      "line": "\treturn m",
      "lineIdx": 302,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\treturn m",
      "lineIdx": 307,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 38,
      "to": 42
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 38,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 38,
      "to": 43
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 38,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 28,
      "to": 35
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 28,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 50,
      "to": 57
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 50,
      "to": 57
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\ti += 1",
      "lineIdx": 220,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\t\t\ti += 1",
      "lineIdx": 225,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\ti += 1",
      "lineIdx": 220,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\ti += 1",
      "lineIdx": 225,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "NU_SVC = 1",
      "lineIdx": 29,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "NU_SVC = 1",
      "lineIdx": 29,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 75,
      "to": 82
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 75,
      "to": 82
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 71,
      "to": 72
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 71,
      "to": 72
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "C_SVC = 0",
      "lineIdx": 28,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "C_SVC = 0",
      "lineIdx": 28,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 12,
      "to": 21
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 20,
      "to": 31
    },
    "right": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 20,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 21,
      "to": 28
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 21,
      "to": 28
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 82,
      "to": 83
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 82,
      "to": 83
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 21,
      "to": 41
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 21,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 154,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 159,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 17,
      "to": 22
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 17,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 29,
      "to": 31
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 29,
      "to": 31
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 52,
      "to": 59
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 52,
      "to": 59
    }
  }, {
    "left": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 134,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 139,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tresult = []",
      "lineIdx": 278,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tresult = []",
      "lineIdx": 283,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 21,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 21,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 15,
      "to": 24
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 15,
      "to": 24
    }
  }, {
    "left": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 134,
      "from": 5,
      "to": 26
    },
    "right": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 139,
      "from": 5,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 172,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 177,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 83,
      "to": 84
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 83,
      "to": 84
    }
  }, {
    "left": {
      "line": "except:",
      "lineIdx": 19,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "except:",
      "lineIdx": 19,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 67,
      "to": 68
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 40,
      "to": 47
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 40,
      "to": 47
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 35,
      "to": 39
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 35,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 116,
      "from": 3,
      "to": 11
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 121,
      "from": 3,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 9,
      "to": 19
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 9,
      "to": 19
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 124,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 129,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 263,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 268,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 110,
      "from": 6,
      "to": 19
    },
    "right": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 115,
      "from": 6,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 258,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 263,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 222,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 227,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 187,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 192,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 20,
      "to": 34
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 20,
      "to": 34
    }
  }, {
    "left": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 67,
      "to": 68
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\telse:",
      "lineIdx": 25,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\telse:",
      "lineIdx": 25,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 122,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 127,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 2,
      "to": 5
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 2,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 11,
      "to": 16
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 11,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 13,
      "to": 18
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 13,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 8,
      "to": 17
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 8,
      "to": 17
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 53,
      "to": 57
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 53,
      "to": 57
    }
  }, {
    "left": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 169,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 174,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 97,
      "to": 98
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 97,
      "to": 98
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 236,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 241,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 25,
      "to": 42
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 25,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 3,
      "to": 9
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 20,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 19,
      "to": 26
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 19,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 137,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 142,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 299,
      "from": 25,
      "to": 32
    },
    "right": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 304,
      "from": 25,
      "to": 32
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 30,
      "to": 39
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 30,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\tmax_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 26,
      "to": 33
    },
    "right": {
      "line": "                    max_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 43,
      "to": 50
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 138,
      "from": 7,
      "to": 12
    },
    "right": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 143,
      "from": 7,
      "to": 12
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 70,
      "to": 71
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 70,
      "to": 71
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 66,
      "to": 75
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 66,
      "to": 75
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "EPSILON_SVR = 3",
      "lineIdx": 31,
      "from": 0,
      "to": 11
    },
    "right": {
      "line": "EPSILON_SVR = 3",
      "lineIdx": 31,
      "from": 0,
      "to": 11
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 37,
      "to": 39
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 37,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 3,
      "to": 5
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 3,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 236,
      "from": 1,
      "to": 9
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 241,
      "from": 1,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 8,
      "to": 16
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 8,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 5,
      "to": 13
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 5,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 239,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 244,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 11,
      "to": 15
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 11,
      "to": 15
    }
  }, {
    "left": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 270,
      "from": 26,
      "to": 30
    },
    "right": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 275,
      "from": 26,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 150,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 155,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 17,
      "to": 24
    },
    "right": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 17,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 55,
      "to": 64
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 55,
      "to": 64
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 38,
      "to": 44
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 38,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 26,
      "to": 33
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 26,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 205,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 210,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 82,
      "to": 83
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 82,
      "to": 83
    }
  }, {
    "left": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 155,
      "from": 25,
      "to": 29
    },
    "right": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 160,
      "from": 25,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 16,
      "to": 26
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 16,
      "to": 26
    }
  }, {
    "left": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 246,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 251,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\tif feature_max:",
      "lineIdx": 69,
      "from": 1,
      "to": 3
    },
    "right": {
      "line": "\tif feature_max:",
      "lineIdx": 69,
      "from": 1,
      "to": 3
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 73,
      "to": 74
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 73,
      "to": 74
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 265,
      "from": 9,
      "to": 19
    },
    "right": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 270,
      "from": 9,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 76,
      "to": 77
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 76,
      "to": 77
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 205,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 210,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 208,
      "from": 9,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 213,
      "from": 9,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t\ts = ''",
      "lineIdx": 125,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\ts = ''",
      "lineIdx": 130,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 214,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 219,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 15,
      "to": 24
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 15,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "from os import path",
      "lineIdx": 4,
      "from": 5,
      "to": 7
    },
    "right": {
      "line": "from os import path",
      "lineIdx": 4,
      "from": 5,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 157,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 162,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 210,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 215,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 158,
      "from": 10,
      "to": 17
    },
    "right": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 163,
      "from": 10,
      "to": 17
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 267,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 272,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 256,
      "from": 18,
      "to": 30
    },
    "right": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 261,
      "from": 18,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 3,
      "to": 11
    },
    "right": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 3,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\t\ti += 1",
      "lineIdx": 287,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\t\t\ti += 1",
      "lineIdx": 292,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 52,
      "to": 59
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 52,
      "to": 59
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 52,
      "to": 61
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 52,
      "to": 61
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 11,
      "to": 16
    },
    "right": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 11,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 68,
      "to": 69
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 68,
      "to": 69
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 190,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 195,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 2,
      "to": 13
    },
    "right": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 2,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 20,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 151,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 156,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 178,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 183,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 35,
      "to": 51
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 35,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\t\twhile True:",
      "lineIdx": 283,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\twhile True:",
      "lineIdx": 288,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 44,
      "to": 51
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 44,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 147,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 152,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 9,
      "to": 11
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 9,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 135,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 140,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 23,
      "to": 28
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 23,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 4,
      "to": 14
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 4,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 41,
      "to": 48
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 41,
      "to": 48
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 4,
      "to": 21
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 4,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 12,
      "to": 14
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 12,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 4,
      "to": 16
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 4,
      "to": 16
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 48,
      "to": 55
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 48,
      "to": 55
    }
  }, {
    "left": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 5,
      "to": 11
    },
    "right": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 5,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 14,
      "to": 22
    },
    "right": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 14,
      "to": 22
    }
  }, {
    "left": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 134,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 139,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 48,
      "to": 54
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 48,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 22,
      "to": 32
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 22,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "from ctypes import *",
      "lineIdx": 2,
      "from": 12,
      "to": 18
    },
    "right": {
      "line": "from ctypes import *",
      "lineIdx": 2,
      "from": 12,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 2,
      "to": 5
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 2,
      "to": 5
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 61,
      "to": 62
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 61,
      "to": 62
    }
  }, {
    "left": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 280,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 285,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 84,
      "to": 85
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 84,
      "to": 85
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 19,
      "to": 27
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 19,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 36,
      "to": 40
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 36,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 9,
      "to": 16
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 9,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 46,
      "to": 60
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 46,
      "to": 60
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 11,
      "to": 16
    },
    "right": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 11,
      "to": 16
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tif not isKernel:",
      "lineIdx": 63,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\tif not isKernel:",
      "lineIdx": 63,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 130,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 135,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 1,
      "to": 3
    },
    "right": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 1,
      "to": 3
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 258,
      "from": 24,
      "to": 28
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 263,
      "from": 24,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "\tdef __init__(self):",
      "lineIdx": 238,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef __init__(self):",
      "lineIdx": 243,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 26,
      "to": 28
    },
    "right": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 26,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 10,
      "to": 16
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 10,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 268,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 273,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "class svm_model(Structure):",
      "lineIdx": 229,
      "from": 6,
      "to": 15
    },
    "right": {
      "line": "class svm_model(Structure):",
      "lineIdx": 234,
      "from": 6,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 161,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 166,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 25,
      "to": 29
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 25,
      "to": 29
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 1,
      "to": 8
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 77,
      "to": 84
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 77,
      "to": 84
    }
  }, {
    "left": {
      "line": "\t\t\toptions = ''",
      "lineIdx": 121,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\toptions = ''",
      "lineIdx": 126,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 10,
      "to": 12
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 10,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 161,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 166,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 15,
      "to": 21
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 15,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 15,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 15,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 11,
      "to": 16
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 11,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 212,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 222,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 227,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 257,
      "from": 20,
      "to": 28
    },
    "right": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 262,
      "from": 20,
      "to": 28
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 74,
      "to": 75
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 74,
      "to": 75
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 289,
      "from": 10,
      "to": 16
    },
    "right": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 294,
      "from": 10,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\treturn result",
      "lineIdx": 290,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "\t\treturn result",
      "lineIdx": 295,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 222,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 227,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 75,
      "to": 76
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 75,
      "to": 76
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 298,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 303,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "\treturn ret, max_idx",
      "lineIdx": 84,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\treturn ret, max_idx",
      "lineIdx": 84,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 42,
      "to": 50
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 59,
      "to": 67
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 50,
      "to": 54
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 50,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 261,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 266,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 102,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 107,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 3,
      "to": 10
    }
  }, {
    "left": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 110,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 115,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "class svm_model(Structure):",
      "lineIdx": 229,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "class svm_model(Structure):",
      "lineIdx": 234,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 250,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 255,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 19,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 19,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 280,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 285,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 57,
      "to": 66
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 57,
      "to": 66
    }
  }, {
    "left": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 144,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 149,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 154,
      "from": 5,
      "to": 18
    },
    "right": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 159,
      "from": 5,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 151,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 156,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 16,
      "to": 22
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 16,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 21,
      "to": 34
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 21,
      "to": 34
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 13,
      "to": 16
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 13,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\ts = ''",
      "lineIdx": 125,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\ts = ''",
      "lineIdx": 130,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "from ctypes import *",
      "lineIdx": 2,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "from ctypes import *",
      "lineIdx": 2,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 253,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 258,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 146,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 151,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 48,
      "to": 53
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 48,
      "to": 53
    }
  }, {
    "left": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 255,
      "from": 16,
      "to": 20
    },
    "right": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 260,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 18,
      "to": 23
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 18,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "NU_SVC = 1",
      "lineIdx": 29,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "NU_SVC = 1",
      "lineIdx": 29,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 21,
      "to": 26
    },
    "right": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 21,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 130,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 135,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 0,
      "to": 16
    },
    "right": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 0,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 75,
      "to": 76
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 75,
      "to": 76
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 196,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 201,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 52,
      "to": 56
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 52,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 205,
      "from": 9,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 210,
      "from": 9,
      "to": 19
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 23,
      "to": 31
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 23,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tself.C = 1",
      "lineIdx": 142,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.C = 1",
      "lineIdx": 147,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "ONE_CLASS = 2",
      "lineIdx": 30,
      "from": 0,
      "to": 9
    },
    "right": {
      "line": "ONE_CLASS = 2",
      "lineIdx": 30,
      "from": 0,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 172,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 177,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 110,
      "to": 111
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 110,
      "to": 111
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 208,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 213,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 16,
      "to": 20
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 45,
      "to": 49
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 45,
      "to": 49
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 21,
      "to": 43
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 21,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 6,
      "to": 15
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 6,
      "to": 15
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 37,
      "to": 41
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 37,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 130,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 135,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 4,
      "to": 14
    },
    "right": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 4,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\twhile True:",
      "lineIdx": 283,
      "from": 3,
      "to": 8
    },
    "right": {
      "line": "\t\t\twhile True:",
      "lineIdx": 288,
      "from": 3,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 261,
      "from": 5,
      "to": 19
    },
    "right": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 266,
      "from": 5,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 268,
      "from": 16,
      "to": 29
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 273,
      "from": 16,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 167,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 172,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 33,
      "to": 37
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 33,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 256,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 261,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 151,
      "from": 7,
      "to": 14
    },
    "right": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 156,
      "from": 7,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 268,
      "from": 30,
      "to": 34
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 273,
      "from": 30,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 151,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 156,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "from ctypes import *",
      "lineIdx": 2,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "from ctypes import *",
      "lineIdx": 2,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 299,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 304,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 21,
      "to": 35
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 21,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 7,
      "to": 13
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 7,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 172,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 177,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 43,
      "to": 48
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 43,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 264,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 269,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 122,
      "from": 7,
      "to": 20
    },
    "right": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 127,
      "from": 7,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 76,
      "to": 77
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 76,
      "to": 77
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 28,
      "to": 32
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 28,
      "to": 32
    }
  }, {
    "left": {
      "line": "\tif index_range:",
      "lineIdx": 82,
      "from": 4,
      "to": 15
    },
    "right": {
      "line": "\tif index_range:",
      "lineIdx": 82,
      "from": 4,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 7,
      "to": 16
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 7,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 298,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 303,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 252,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 257,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 80,
      "to": 88
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 80,
      "to": 88
    }
  }, {
    "left": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 172,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 177,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 14,
      "to": 19
    },
    "right": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 14,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 215,
      "from": 16,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 220,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 6,
      "to": 10
    }
  }, {
    "left": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 110,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 115,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 20,
      "to": 27
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 20,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 21,
      "to": 44
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 21,
      "to": 44
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "\t\ts = ''",
      "lineIdx": 125,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "\t\ts = ''",
      "lineIdx": 130,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 9,
      "to": 11
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 9,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\treturn ret, max_idx",
      "lineIdx": 84,
      "from": 13,
      "to": 20
    },
    "right": {
      "line": "\treturn ret, max_idx",
      "lineIdx": 84,
      "from": 13,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 167,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 172,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 38,
      "to": 42
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 38,
      "to": 42
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 124,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 129,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 155,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 160,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 100,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 105,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 15,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 15,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 247,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 252,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 59,
      "to": 65
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 59,
      "to": 65
    }
  }, {
    "left": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 210,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 215,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 298,
      "from": 9,
      "to": 18
    },
    "right": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 303,
      "from": 9,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 294,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 299,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 5,
      "to": 12
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 5,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 26,
      "to": 33
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 26,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 70,
      "to": 71
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 70,
      "to": 71
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 83,
      "to": 84
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 83,
      "to": 84
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 70,
      "to": 71
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 70,
      "to": 71
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 214,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 219,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 3,
      "to": 6
    },
    "right": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 3,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 184,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 189,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 68,
      "to": 69
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 68,
      "to": 69
    }
  }, {
    "left": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 137,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 142,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 49,
      "to": 54
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 49,
      "to": 54
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 53,
      "to": 62
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 53,
      "to": 62
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\ti = 0",
      "lineIdx": 282,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "\t\t\ti = 0",
      "lineIdx": 287,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 100,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 105,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tweight_label = []",
      "lineIdx": 163,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\tweight_label = []",
      "lineIdx": 168,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 202,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 119,
      "to": 120
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 119,
      "to": 120
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 134,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 139,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 190,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 195,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 27,
      "to": 31
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 27,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 24,
      "to": 35
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 24,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 213,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 218,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 158,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 163,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 116,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 121,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 48,
      "to": 51
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 48,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 30,
      "to": 38
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 30,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 15,
      "to": 21
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 15,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 116,
      "from": 30,
      "to": 35
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 121,
      "from": 30,
      "to": 35
    }
  }, {
    "left": {
      "line": "NU_SVC = 1",
      "lineIdx": 29,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "NU_SVC = 1",
      "lineIdx": 29,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 143,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 148,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 139,
      "from": 7,
      "to": 12
    },
    "right": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 144,
      "from": 7,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 250,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 255,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 61,
      "to": 62
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 61,
      "to": 62
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 181,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 186,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 3,
      "to": 8
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 3,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 255,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 260,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 258,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 263,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 30,
      "to": 33
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 30,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 157,
      "from": 27,
      "to": 30
    },
    "right": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 162,
      "from": 27,
      "to": 30
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 19,
      "to": 23
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 19,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 264,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 269,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 30,
      "to": 34
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 30,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\tdef __del__(self):",
      "lineIdx": 241,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\tdef __del__(self):",
      "lineIdx": 246,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 6,
      "to": 17
    },
    "right": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 6,
      "to": 17
    }
  }, {
    "left": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 252,
      "from": 25,
      "to": 29
    },
    "right": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 257,
      "from": 25,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 146,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 151,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 2,
      "to": 5
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 2,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 247,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 252,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 213,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 218,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 11,
      "to": 16
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 11,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 11,
      "to": 16
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 11,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 21,
      "to": 44
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 21,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 11,
      "to": 19
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 11,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 2,
      "to": 5
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 2,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 100,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 105,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 70,
      "to": 71
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 70,
      "to": 71
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 40,
      "to": 44
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 40,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 38,
      "to": 40
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 38,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 19,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 19,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 11,
      "to": 15
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 11,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 130,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 135,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 219,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 224,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 155,
      "from": 2,
      "to": 4
    },
    "right": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 160,
      "from": 2,
      "to": 4
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 40,
      "to": 47
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 40,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 100,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 105,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 134,
      "from": 27,
      "to": 31
    },
    "right": {
      "line": "\tdef set_to_default_values(self):",
      "lineIdx": 139,
      "from": 27,
      "to": 31
    }
  }, {
    "left": {
      "line": "\telse:",
      "lineIdx": 66,
      "from": 1,
      "to": 5
    },
    "right": {
      "line": "\telse:",
      "lineIdx": 66,
      "from": 1,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 244,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 249,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 15,
      "to": 24
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 15,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 145,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 150,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 56,
      "to": 64
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 56,
      "to": 64
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 73,
      "to": 81
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 73,
      "to": 81
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 35,
      "to": 45
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 35,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 21,
      "to": 25
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 21,
      "to": 25
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 24,
      "to": 29
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 24,
      "to": 29
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 72,
      "to": 81
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 72,
      "to": 81
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 135,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 140,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 2,
      "to": 5
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 2,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 184,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 189,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 259,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 264,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 2,
      "to": 5
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 2,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 267,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 272,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 175,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 180,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 202,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\tweight = []",
      "lineIdx": 164,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\tweight = []",
      "lineIdx": 169,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 11,
      "to": 15
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 11,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 11,
      "to": 16
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 11,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 146,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 151,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 67,
      "to": 68
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 17,
      "to": 25
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 17,
      "to": 25
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 77,
      "to": 78
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 77,
      "to": 78
    }
  }, {
    "left": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 193,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 198,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 199,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 204,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 11,
      "to": 14
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 11,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 256,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 261,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 72,
      "to": 73
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 58,
      "to": 66
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 58,
      "to": 66
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 21,
      "to": 32
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 21,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\ti = 0",
      "lineIdx": 166,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\ti = 0",
      "lineIdx": 171,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 154,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 159,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 255,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 260,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\ti += 1",
      "lineIdx": 287,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti += 1",
      "lineIdx": 292,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 12,
      "to": 15
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 12,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 41,
      "to": 43
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 41,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 116,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 121,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 51,
      "to": 55
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 51,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "LINEAR = 0",
      "lineIdx": 34,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "LINEAR = 0",
      "lineIdx": 34,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 175,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 180,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 42,
      "to": 50
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 42,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 117,
      "from": 1,
      "to": 9
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 122,
      "from": 1,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 117,
      "from": 30,
      "to": 36
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 122,
      "from": 30,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tweight_label = []",
      "lineIdx": 163,
      "from": 2,
      "to": 14
    },
    "right": {
      "line": "\t\tweight_label = []",
      "lineIdx": 168,
      "from": 2,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 136,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 141,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 9,
      "to": 14
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 9,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 253,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 258,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 13,
      "to": 17
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 13,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 76,
      "to": 81
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 76,
      "to": 81
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 169,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 174,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 37,
      "to": 42
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 37,
      "to": 42
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 110,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 115,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 124,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 129,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 277,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 282,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 47,
      "to": 53
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 47,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 22,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 22,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "NU_SVR = 4",
      "lineIdx": 32,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "NU_SVR = 4",
      "lineIdx": 32,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 45,
      "to": 49
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 45,
      "to": 49
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 208,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 213,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 5,
      "to": 10
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 5,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 22,
      "to": 33
    },
    "right": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 22,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 181,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 186,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 27,
      "to": 31
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 27,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 172,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 177,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 97,
      "to": 98
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 97,
      "to": 98
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 27,
      "to": 33
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 27,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 43,
      "to": 51
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 43,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 155,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 160,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 124,
      "from": 5,
      "to": 12
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 129,
      "from": 5,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\tif not isKernel:",
      "lineIdx": 63,
      "from": 5,
      "to": 8
    },
    "right": {
      "line": "\t\tif not isKernel:",
      "lineIdx": 63,
      "from": 5,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 7,
      "to": 19
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 7,
      "to": 19
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 74,
      "to": 75
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 74,
      "to": 75
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 75,
      "to": 76
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 75,
      "to": 76
    }
  }, {
    "left": {
      "line": "\t\tif not isKernel:",
      "lineIdx": 63,
      "from": 9,
      "to": 17
    },
    "right": {
      "line": "\t\tif not isKernel:",
      "lineIdx": 63,
      "from": 9,
      "to": 17
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 210,
      "from": 7,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 215,
      "from": 7,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 213,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 218,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 117,
      "from": 22,
      "to": 28
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 122,
      "from": 22,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 263,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 268,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 72,
      "to": 77
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 72,
      "to": 77
    }
  }, {
    "left": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 21,
      "to": 35
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 21,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 136,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 141,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 139,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 144,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tweight = []",
      "lineIdx": 164,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tweight = []",
      "lineIdx": 169,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\tif index_range:",
      "lineIdx": 82,
      "from": 1,
      "to": 3
    },
    "right": {
      "line": "\tif index_range:",
      "lineIdx": 82,
      "from": 1,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 11,
      "to": 24
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 11,
      "to": 24
    }
  }, {
    "left": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 301,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 306,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 30,
      "to": 33
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 30,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tdef __del__(self):",
      "lineIdx": 241,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tdef __del__(self):",
      "lineIdx": 246,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\ti = 0",
      "lineIdx": 166,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\ti = 0",
      "lineIdx": 171,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "NU_SVR = 4",
      "lineIdx": 32,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "NU_SVR = 4",
      "lineIdx": 32,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 294,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 299,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 8,
      "to": 10
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 8,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 255,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 260,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 80,
      "to": 93
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 80,
      "to": 93
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 268,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 273,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 2,
      "to": 5
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 2,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 256,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 261,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 249,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 254,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 167,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 172,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\t\ti += 1",
      "lineIdx": 287,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti += 1",
      "lineIdx": 292,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 37,
      "to": 40
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 37,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 2,
      "to": 5
    },
    "right": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 2,
      "to": 5
    }
  }, {
    "left": {
      "line": "RBF = 2",
      "lineIdx": 36,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "RBF = 2",
      "lineIdx": 36,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 6,
      "to": 18
    },
    "right": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 6,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 292,
      "from": 14,
      "to": 23
    },
    "right": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 297,
      "from": 14,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 30,
      "to": 37
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 30,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 246,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 251,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 11,
      "to": 18
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 11,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 137,
      "from": 7,
      "to": 13
    },
    "right": {
      "line": "\t\tself.degree = 3",
      "lineIdx": 142,
      "from": 7,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 26,
      "to": 37
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 26,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 25,
      "to": 30
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 25,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 16,
      "to": 20
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 1,
      "to": 9
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 1,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 13,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 13,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 61,
      "to": 62
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 61,
      "to": 62
    }
  }, {
    "left": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 140,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 145,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 273,
      "from": 5,
      "to": 16
    },
    "right": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 278,
      "from": 5,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 202,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 29,
      "to": 33
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 29,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 26,
      "to": 35
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 26,
      "to": 35
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 45,
      "to": 54
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 45,
      "to": 54
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 23,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 23,
      "to": 27
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\tif feature_max:",
      "lineIdx": 69,
      "from": 4,
      "to": 15
    },
    "right": {
      "line": "\tif feature_max:",
      "lineIdx": 69,
      "from": 4,
      "to": 15
    }
  }, {
    "left": {
      "line": "ONE_CLASS = 2",
      "lineIdx": 30,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "ONE_CLASS = 2",
      "lineIdx": 30,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 249,
      "from": 5,
      "to": 17
    },
    "right": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 254,
      "from": 5,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tself.C = 1",
      "lineIdx": 142,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tself.C = 1",
      "lineIdx": 147,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 135,
      "from": 7,
      "to": 15
    },
    "right": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 140,
      "from": 7,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 2,
      "to": 4
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 2,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 77,
      "to": 78
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 77,
      "to": 78
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 8,
      "to": 20
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 8,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 155,
      "from": 16,
      "to": 23
    },
    "right": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 160,
      "from": 16,
      "to": 23
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 46,
      "to": 54
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 46,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 32,
      "to": 37
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 32,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 18,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 18,
      "to": 21
    }
  }, {
    "left": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 257,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 262,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 10,
      "to": 15
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 10,
      "to": 15
    }
  }, {
    "left": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 301,
      "from": 1,
      "to": 2
    },
    "right": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 306,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 21,
      "to": 38
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 21,
      "to": 38
    }
  }, {
    "left": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 301,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 306,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 16,
      "to": 18
    },
    "right": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 16,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\targv = options",
      "lineIdx": 156,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\targv = options",
      "lineIdx": 161,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 23,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 23,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 5,
      "to": 13
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 5,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 210,
      "from": 4,
      "to": 6
    },
    "right": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 215,
      "from": 4,
      "to": 6
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 13,
      "to": 17
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 13,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 27,
      "to": 32
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 27,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 22,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 22,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 270,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 275,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 249,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 254,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\targv = options",
      "lineIdx": 156,
      "from": 10,
      "to": 17
    },
    "right": {
      "line": "\t\t\targv = options",
      "lineIdx": 161,
      "from": 10,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 94,
      "to": 95
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 94,
      "to": 95
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 98,
      "to": 99
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 98,
      "to": 99
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 301,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 306,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 20,
      "to": 31
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 20,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 23,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 23,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 55,
      "to": 58
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 55,
      "to": 58
    }
  }, {
    "left": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 157,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 162,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 31,
      "to": 47
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 31,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\ts = ''",
      "lineIdx": 125,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\ts = ''",
      "lineIdx": 130,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tif options == None:",
      "lineIdx": 120,
      "from": 16,
      "to": 20
    },
    "right": {
      "line": "\t\tif options == None:",
      "lineIdx": 125,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 117,
      "from": 12,
      "to": 21
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 122,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 8,
      "to": 17
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 8,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 73,
      "to": 74
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 73,
      "to": 74
    }
  }, {
    "left": {
      "line": "\t\t\telse:",
      "lineIdx": 218,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telse:",
      "lineIdx": 223,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\ti = 0",
      "lineIdx": 166,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "\t\ti = 0",
      "lineIdx": 171,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 3,
      "to": 5
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 3,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 15,
      "to": 21
    },
    "right": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 15,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = 0",
      "lineIdx": 96,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\tmax_idx = 0",
      "lineIdx": 96,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 14,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 14,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 190,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 195,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 8,
      "to": 16
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 8,
      "to": 16
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 15,
      "to": 24
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 15,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 28,
      "to": 30
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 28,
      "to": 30
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 24,
      "to": 28
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 24,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 244,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 249,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 73,
      "to": 74
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 73,
      "to": 74
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 9,
      "to": 14
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 9,
      "to": 14
    }
  }, {
    "left": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 273,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 278,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\treturn",
      "lineIdx": 42,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\treturn",
      "lineIdx": 42,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 167,
      "from": 16,
      "to": 20
    },
    "right": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 172,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 34,
      "to": 42
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 34,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 150,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 155,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 5,
      "to": 8
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 5,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\treturn ret, max_idx",
      "lineIdx": 84,
      "from": 8,
      "to": 11
    },
    "right": {
      "line": "\treturn ret, max_idx",
      "lineIdx": 84,
      "from": 8,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 264,
      "from": 34,
      "to": 44
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 269,
      "from": 34,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 111,
      "to": 119
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 111,
      "to": 119
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 54,
      "to": 59
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 54,
      "to": 59
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 21,
      "to": 28
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 21,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 169,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 174,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 72,
      "to": 79
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 72,
      "to": 79
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 20,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 213,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 218,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\"\"\"",
      "lineIdx": 297,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "\t\"\"\"",
      "lineIdx": 302,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 11,
      "to": 14
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 11,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 23,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 23,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 236,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 241,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 16,
      "to": 18
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 16,
      "to": 18
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 246,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 251,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 19,
      "to": 22
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 19,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 122,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 127,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 157,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 162,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 247,
      "from": 16,
      "to": 32
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 252,
      "from": 16,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 56,
      "to": 64
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 56,
      "to": 64
    }
  }, {
    "left": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 144,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 149,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 31,
      "to": 38
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 31,
      "to": 38
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 34,
      "to": 44
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 34,
      "to": 44
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 24,
      "to": 35
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 24,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 258,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 263,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 1,
      "to": 2
    },
    "right": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 83,
      "to": 84
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 83,
      "to": 84
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 15,
      "to": 18
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 15,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 81,
      "to": 82
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 81,
      "to": 82
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 4,
      "to": 16
    },
    "right": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 4,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 6,
      "to": 16
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 6,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 72,
      "to": 79
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 72,
      "to": 79
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 40,
      "to": 47
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 40,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 68,
      "to": 69
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 68,
      "to": 69
    }
  }, {
    "left": {
      "line": "\t\"\"\"",
      "lineIdx": 297,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "\t\"\"\"",
      "lineIdx": 302,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 42,
      "to": 46
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 42,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 114,
      "to": 115
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 114,
      "to": 115
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 36,
      "to": 46
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 36,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 43,
      "to": 55
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 43,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 73,
      "to": 74
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 73,
      "to": 74
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 21,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 21,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 292,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 297,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 9,
      "to": 12
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 9,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 14,
      "to": 18
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 14,
      "to": 18
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 258,
      "from": 30,
      "to": 36
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 263,
      "from": 30,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 22,
      "to": 31
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 22,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 239,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 244,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 33,
      "to": 35
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 33,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 17,
      "to": 44
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 17,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 161,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 166,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 215,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 220,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 236,
      "from": 12,
      "to": 21
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 241,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 130,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 135,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 21,
      "to": 47
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 21,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\t\twhile True:",
      "lineIdx": 283,
      "from": 9,
      "to": 13
    },
    "right": {
      "line": "\t\t\twhile True:",
      "lineIdx": 288,
      "from": 9,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 82,
      "to": 83
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 82,
      "to": 83
    }
  }, {
    "left": {
      "line": "\tmax_idx = 0",
      "lineIdx": 81,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\tmax_idx = 0",
      "lineIdx": 81,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "\tif feature_max:",
      "lineIdx": 69,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\tif feature_max:",
      "lineIdx": 69,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 208,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 213,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 300,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 305,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 12,
      "to": 14
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 12,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 259,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 264,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 144,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 149,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 214,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 219,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 17,
      "to": 22
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 17,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 247,
      "from": 33,
      "to": 37
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 252,
      "from": 33,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 23,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 23,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 23,
      "to": 29
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 23,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 52,
      "to": 56
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 52,
      "to": 56
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 76,
      "to": 77
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 76,
      "to": 77
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 35,
      "to": 38
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 35,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 292,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 297,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 37,
      "to": 45
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 37,
      "to": 45
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 58,
      "to": 69
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 58,
      "to": 69
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 4,
      "to": 10
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 4,
      "to": 10
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 294,
      "from": 25,
      "to": 34
    },
    "right": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 299,
      "from": 25,
      "to": 34
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 196,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 201,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 250,
      "from": 16,
      "to": 32
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 255,
      "from": 16,
      "to": 32
    }
  }, {
    "left": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 270,
      "from": 5,
      "to": 25
    },
    "right": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 275,
      "from": 5,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 67,
      "to": 68
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 257,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 262,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 12,
      "to": 16
    },
    "right": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 12,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\ti = 0",
      "lineIdx": 282,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\t\t\ti = 0",
      "lineIdx": 287,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 268,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 273,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 2,
      "to": 9
    },
    "right": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 2,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 11,
      "to": 18
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 28,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 252,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 257,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 65,
      "to": 74
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 65,
      "to": 74
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 13,
      "to": 18
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 13,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "NU_SVR = 4",
      "lineIdx": 32,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "NU_SVR = 4",
      "lineIdx": 32,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 187,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 192,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 30,
      "to": 38
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 30,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 30,
      "to": 36
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 30,
      "to": 36
    }
  }, {
    "left": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 292,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 297,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 39,
      "to": 45
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 39,
      "to": 45
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 31,
      "to": 40
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 31,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 244,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 249,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 43,
      "to": 45
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 43,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 222,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 227,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 157,
      "from": 7,
      "to": 17
    },
    "right": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 162,
      "from": 7,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 280,
      "from": 9,
      "to": 13
    },
    "right": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 285,
      "from": 9,
      "to": 13
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 113,
      "to": 114
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 113,
      "to": 114
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 262,
      "from": 18,
      "to": 27
    },
    "right": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 267,
      "from": 18,
      "to": 27
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 56,
      "to": 65
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 56,
      "to": 65
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 21,
      "to": 30
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 21,
      "to": 30
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t\t\tbreak",
      "lineIdx": 286,
      "from": 5,
      "to": 10
    },
    "right": {
      "line": "\t\t\t\t\tbreak",
      "lineIdx": 291,
      "from": 5,
      "to": 10
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "\t\telse:",
      "lineIdx": 159,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\telse:",
      "lineIdx": 164,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 18,
      "to": 25
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 18,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 252,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 257,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\tif options == None:",
      "lineIdx": 120,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\tif options == None:",
      "lineIdx": 125,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 130,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 135,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 12,
      "to": 16
    },
    "right": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 12,
      "to": 16
    }
  }, {
    "left": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 300,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 305,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 68,
      "to": 75
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 68,
      "to": 75
    }
  }, {
    "left": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 239,
      "from": 7,
      "to": 21
    },
    "right": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 244,
      "from": 7,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 44,
      "to": 51
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 44,
      "to": 51
    }
  }, {
    "left": {
      "line": "C_SVC = 0",
      "lineIdx": 28,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "C_SVC = 0",
      "lineIdx": 28,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 140,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 145,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 100,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "\t\t\tx_space += [tmp_xi]",
      "lineIdx": 105,
      "from": 3,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 25,
      "to": 30
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 25,
      "to": 30
    }
  }, {
    "left": {
      "line": "SIGMOID = 3",
      "lineIdx": 37,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "SIGMOID = 3",
      "lineIdx": 37,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 301,
      "from": 3,
      "to": 17
    },
    "right": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 306,
      "from": 3,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 33,
      "to": 38
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 33,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 78,
      "to": 79
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 78,
      "to": 79
    }
  }, {
    "left": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 263,
      "from": 2,
      "to": 12
    },
    "right": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 268,
      "from": 2,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\"\"\"",
      "lineIdx": 293,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "\t\"\"\"",
      "lineIdx": 298,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 56,
      "to": 63
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 56,
      "to": 63
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 12,
      "to": 17
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 12,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 257,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 262,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 81,
      "to": 82
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 81,
      "to": 82
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 49,
      "to": 54
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 49,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 121,
      "to": 122
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 121,
      "to": 122
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 210,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 215,
      "from": 12,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 2,
      "to": 13
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 2,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 219,
      "from": 10,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 224,
      "from": 10,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 6,
      "to": 10
    }
  }, {
    "left": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\telse:",
      "lineIdx": 17,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\telse:",
      "lineIdx": 17,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 9,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 9,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 141,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 146,
      "from": 20,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 117,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 122,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 253,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 258,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 246,
      "from": 18,
      "to": 22
    },
    "right": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 251,
      "from": 18,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 20,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 20,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 154,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 159,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 63,
      "to": 72
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 63,
      "to": 72
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 273,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 278,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 158,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 163,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 250,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 255,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\telse:",
      "lineIdx": 218,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\t\telse:",
      "lineIdx": 223,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 277,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 282,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 41,
      "to": 49
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 41,
      "to": 49
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 55,
      "to": 58
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 55,
      "to": 58
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 40,
      "to": 49
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 40,
      "to": 49
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 239,
      "from": 25,
      "to": 31
    },
    "right": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 244,
      "from": 25,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 268,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 273,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 205,
      "from": 22,
      "to": 38
    },
    "right": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 210,
      "from": 22,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 258,
      "from": 9,
      "to": 23
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 263,
      "from": 9,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 205,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 210,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 20,
      "to": 23
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 178,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 183,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 141,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 146,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 16,
      "to": 21
    },
    "right": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 16,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 59,
      "to": 75
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 59,
      "to": 75
    }
  }, {
    "left": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 147,
      "from": 7,
      "to": 16
    },
    "right": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 152,
      "from": 7,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tif options == None:",
      "lineIdx": 120,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tif options == None:",
      "lineIdx": 125,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 210,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 215,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 13,
      "to": 18
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 13,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 167,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 172,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 98,
      "to": 99
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 98,
      "to": 99
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 75,
      "to": 76
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 75,
      "to": 76
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 253,
      "from": 40,
      "to": 44
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 258,
      "from": 40,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\telse:",
      "lineIdx": 159,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\telse:",
      "lineIdx": 164,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 236,
      "from": 30,
      "to": 36
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 241,
      "from": 30,
      "to": 36
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 89,
      "to": 90
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 89,
      "to": 90
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 26,
      "to": 33
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 26,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 144,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 149,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\tif not isKernel:",
      "lineIdx": 72,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\tif not isKernel:",
      "lineIdx": 72,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 34,
      "to": 37
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 34,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 58,
      "to": 65
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 58,
      "to": 65
    }
  }, {
    "left": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 239,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 244,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 28,
      "to": 33
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 28,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "ONE_CLASS = 2",
      "lineIdx": 30,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "ONE_CLASS = 2",
      "lineIdx": 30,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 29,
      "to": 33
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 29,
      "to": 33
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 83,
      "to": 96
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 83,
      "to": 96
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 34,
      "to": 43
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 34,
      "to": 43
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 36,
      "to": 41
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 36,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 2,
      "to": 7
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 2,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tresult = []",
      "lineIdx": 278,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\tresult = []",
      "lineIdx": 283,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 4,
      "to": 6
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 4,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 102,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 107,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 1,
      "to": 5
    },
    "right": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 1,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 53,
      "to": 60
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 53,
      "to": 60
    }
  }, {
    "left": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 219,
      "from": 28,
      "to": 35
    },
    "right": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 224,
      "from": 28,
      "to": 35
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 175,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 180,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\telse:",
      "lineIdx": 25,
      "from": 1,
      "to": 5
    },
    "right": {
      "line": "\telse:",
      "lineIdx": 25,
      "from": 1,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\tself.C = 1",
      "lineIdx": 142,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tself.C = 1",
      "lineIdx": 147,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 60,
      "to": 69
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 60,
      "to": 69
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 21,
      "to": 37
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 21,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\tdef __init__(self):",
      "lineIdx": 238,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tdef __init__(self):",
      "lineIdx": 243,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 60,
      "to": 68
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 60,
      "to": 68
    }
  }, {
    "left": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 294,
      "from": 1,
      "to": 10
    },
    "right": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 299,
      "from": 1,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 11,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 11,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 294,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 299,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "\tif not isKernel:",
      "lineIdx": 72,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "\tif not isKernel:",
      "lineIdx": 72,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "class svm_model(Structure):",
      "lineIdx": 229,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "class svm_model(Structure):",
      "lineIdx": 234,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 22,
      "to": 29
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 22,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 21,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 21,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 30,
      "to": 36
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 30,
      "to": 36
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 294,
      "from": 11,
      "to": 20
    },
    "right": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 299,
      "from": 11,
      "to": 20
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 38,
      "to": 49
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 38,
      "to": 49
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 277,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 282,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 257,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 262,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 136,
      "from": 21,
      "to": 24
    },
    "right": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 141,
      "from": 21,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\ti += 1",
      "lineIdx": 220,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "\t\t\ti += 1",
      "lineIdx": 225,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 130,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\ts = s.strip()",
      "lineIdx": 135,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 298,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 303,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 96,
      "to": 97
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 96,
      "to": 97
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\tmax_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "                    max_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 20,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 247,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 252,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 21,
      "to": 25
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 21,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\ti += 1",
      "lineIdx": 220,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\ti += 1",
      "lineIdx": 225,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 21,
      "to": 37
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 21,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 263,
      "from": 24,
      "to": 32
    },
    "right": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 268,
      "from": 24,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\tweight = []",
      "lineIdx": 164,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tweight = []",
      "lineIdx": 169,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 21,
      "to": 39
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 21,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 273,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 278,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 44,
      "to": 51
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 44,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 35,
      "to": 40
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 35,
      "to": 40
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 222,
      "from": 9,
      "to": 38
    },
    "right": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 227,
      "from": 9,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 49,
      "to": 54
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 49,
      "to": 54
    }
  }, {
    "left": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 19,
      "to": 28
    },
    "right": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 19,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 140,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 145,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 55,
      "to": 62
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 55,
      "to": 62
    }
  }, {
    "left": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 256,
      "from": 2,
      "to": 10
    },
    "right": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 261,
      "from": 2,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 219,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 224,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 11,
      "to": 15
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 11,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 41,
      "to": 45
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 41,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 7,
      "to": 13
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 7,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 143,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 148,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 16,
      "to": 28
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 16,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 5,
      "to": 6
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 5,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 199,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 204,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 65,
      "to": 72
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 65,
      "to": 72
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 1,
      "to": 5
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 1,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 7,
      "to": 19
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 7,
      "to": 19
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 26,
      "to": 34
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 26,
      "to": 34
    }
  }, {
    "left": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 19,
      "to": 23
    },
    "right": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 19,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 263,
      "from": 16,
      "to": 21
    },
    "right": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 268,
      "from": 16,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 65,
      "to": 74
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 65,
      "to": 74
    }
  }, {
    "left": {
      "line": "\t\treturn s",
      "lineIdx": 132,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\treturn s",
      "lineIdx": 137,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 256,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 261,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 23,
      "to": 31
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 23,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 108,
      "to": 109
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 108,
      "to": 109
    }
  }, {
    "left": {
      "line": "\t\tif options == None:",
      "lineIdx": 120,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\tif options == None:",
      "lineIdx": 125,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 145,
      "from": 7,
      "to": 16
    },
    "right": {
      "line": "\t\tself.shrinking = 1",
      "lineIdx": 150,
      "from": 7,
      "to": 16
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 187,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 192,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 236,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 241,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 40,
      "to": 44
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 40,
      "to": 44
    }
  }, {
    "left": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 292,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 297,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 167,
      "from": 12,
      "to": 15
    },
    "right": {
      "line": "\t\twhile i < len(argv):",
      "lineIdx": 172,
      "from": 12,
      "to": 15
    }
  }, {
    "left": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 110,
      "from": 20,
      "to": 29
    },
    "right": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 115,
      "from": 20,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 143,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 148,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 277,
      "from": 5,
      "to": 11
    },
    "right": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 282,
      "from": 5,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 79,
      "to": 80
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 79,
      "to": 80
    }
  }, {
    "left": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 135,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 140,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 26,
      "to": 31
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 26,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 250,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 255,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 122,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 127,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 101,
      "to": 102
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 101,
      "to": 102
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 64,
      "to": 71
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 64,
      "to": 71
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 299,
      "from": 20,
      "to": 24
    },
    "right": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 304,
      "from": 20,
      "to": 24
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 112,
      "to": 113
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 112,
      "to": 113
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 38,
      "to": 42
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 38,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tweight_label = []",
      "lineIdx": 163,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tweight_label = []",
      "lineIdx": 168,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 259,
      "from": 17,
      "to": 25
    },
    "right": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 264,
      "from": 17,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 146,
      "from": 7,
      "to": 18
    },
    "right": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 151,
      "from": 7,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 161,
      "from": 7,
      "to": 28
    },
    "right": {
      "line": "\t\tself.set_to_default_values()",
      "lineIdx": 166,
      "from": 7,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\tdef __del__(self):",
      "lineIdx": 241,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef __del__(self):",
      "lineIdx": 246,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 2,
      "to": 7
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 2,
      "to": 7
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 215,
      "from": 4,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\tnr_weight = self.nr_weight",
      "lineIdx": 220,
      "from": 4,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 139,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 144,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 3,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 144,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 149,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\tresult = []",
      "lineIdx": 278,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\tresult = []",
      "lineIdx": 283,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 12,
      "to": 16
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 12,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 144,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 149,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 14,
      "to": 16
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 14,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 178,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 183,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 158,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 163,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "PRECOMPUTED = 4",
      "lineIdx": 38,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "PRECOMPUTED = 4",
      "lineIdx": 38,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 37,
      "to": 44
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 37,
      "to": 44
    }
  }, {
    "left": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 292,
      "from": 4,
      "to": 13
    },
    "right": {
      "line": "def toPyModel(model_ptr):",
      "lineIdx": 297,
      "from": 4,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 82,
      "to": 83
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 82,
      "to": 83
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 77,
      "to": 78
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 77,
      "to": 78
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "EPSILON_SVR = 3",
      "lineIdx": 31,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "EPSILON_SVR = 3",
      "lineIdx": 31,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 150,
      "from": 26,
      "to": 31
    },
    "right": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 155,
      "from": 26,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "POLY = 1",
      "lineIdx": 35,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "POLY = 1",
      "lineIdx": 35,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 246,
      "from": 5,
      "to": 17
    },
    "right": {
      "line": "\tdef get_svm_type(self):",
      "lineIdx": 251,
      "from": 5,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 4,
      "to": 6
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 4,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 79,
      "to": 80
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 79,
      "to": 80
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 41,
      "to": 45
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 41,
      "to": 45
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 181,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 186,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 150,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 155,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 46,
      "to": 50
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 46,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "from ctypes.util import find_library",
      "lineIdx": 3,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 197,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\t\tself.p = float(argv[i])",
      "lineIdx": 202,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 110,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "class svm_parameter(Structure):",
      "lineIdx": 115,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\tif index_range:",
      "lineIdx": 82,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\tif index_range:",
      "lineIdx": 82,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 275,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tfor i in xrange(self.l)]",
      "lineIdx": 280,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 26,
      "to": 34
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 26,
      "to": 34
    }
  }, {
    "left": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 4,
      "to": 14
    },
    "right": {
      "line": "\tif isinstance(xi, dict):",
      "lineIdx": 60,
      "from": 4,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 261,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 266,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 23,
      "to": 28
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 23,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 6,
      "to": 9
    },
    "right": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 6,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 43,
      "to": 47
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 43,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 219,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\t\t\traise ValueError(\"Wrong options\")",
      "lineIdx": 224,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 12,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "           'POLY', 'PRECOMPUTED', 'PRINT_STRING_FUN', 'RBF',",
      "lineIdx": 10,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 60,
      "to": 69
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 60,
      "to": 69
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 169,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 174,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 56,
      "to": 63
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 56,
      "to": 63
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "PRINT_STRING_FUN = CFUNCTYPE(None, c_char_p)",
      "lineIdx": 40,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 299,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\traise ValueError(\"Null pointer\")",
      "lineIdx": 304,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 205,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 210,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 244,
      "from": 10,
      "to": 36
    },
    "right": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 249,
      "from": 10,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 30,
      "to": 36
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 30,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 289,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 294,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 208,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tself.cross_validation = 1",
      "lineIdx": 213,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 265,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 270,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 242,
      "from": 16,
      "to": 23
    },
    "right": {
      "line": "\t\t# free memory created by C to avoid memory leak",
      "lineIdx": 247,
      "from": 16,
      "to": 23
    }
  }, {
    "left": {
      "line": "class svm_model(Structure):",
      "lineIdx": 229,
      "from": 16,
      "to": 25
    },
    "right": {
      "line": "class svm_model(Structure):",
      "lineIdx": 234,
      "from": 16,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 17,
      "to": 25
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 17,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 21,
      "to": 50
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 21,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 273,
      "from": 17,
      "to": 21
    },
    "right": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 278,
      "from": 17,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "\tdef __del__(self):",
      "lineIdx": 241,
      "from": 13,
      "to": 17
    },
    "right": {
      "line": "\tdef __del__(self):",
      "lineIdx": 246,
      "from": 13,
      "to": 17
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 21,
      "to": 39
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 21,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 136,
      "from": 7,
      "to": 18
    },
    "right": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 141,
      "from": 7,
      "to": 18
    }
  }, {
    "left": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "\tf.restype = restype",
      "lineIdx": 48,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\tret[idx].index = j",
      "lineIdx": 79,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 117,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 122,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 26,
      "to": 30
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 26,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 46,
      "to": 48
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 46,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 116,
      "from": 23,
      "to": 28
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 121,
      "from": 23,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 184,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 189,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 21,
      "to": 40
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 21,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 17,
      "to": 22
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 17,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 268,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_sv(self)",
      "lineIdx": 273,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 289,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\t\tresult.append(row)",
      "lineIdx": 294,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 301,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tm.__createfrom__ = 'C'",
      "lineIdx": 306,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\t\t\ti += 1",
      "lineIdx": 287,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\ti += 1",
      "lineIdx": 292,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 22,
      "to": 25
    },
    "right": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 22,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 72,
      "to": 73
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 88,
      "to": 89
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 88,
      "to": 89
    }
  }, {
    "left": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 284,
      "from": 8,
      "to": 17
    },
    "right": {
      "line": "\t\t\t\trow[sparse_sv[i].index] = sparse_sv[i].value",
      "lineIdx": 289,
      "from": 8,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\"\"\"",
      "lineIdx": 297,
      "from": 1,
      "to": 2
    },
    "right": {
      "line": "\t\"\"\"",
      "lineIdx": 302,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 158,
      "from": 18,
      "to": 23
    },
    "right": {
      "line": "\t\t\targv = options.split()",
      "lineIdx": 163,
      "from": 18,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 217,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tweight += [float(argv[i])]",
      "lineIdx": 222,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 173,
      "from": 9,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tself.kernel_type = int(argv[i])",
      "lineIdx": 178,
      "from": 9,
      "to": 20
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 96,
      "to": 101
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 96,
      "to": 101
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 55,
      "to": 64
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 55,
      "to": 64
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 39,
      "to": 47
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 39,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 57,
      "to": 64
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 57,
      "to": 64
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tif not isKernel:",
      "lineIdx": 72,
      "from": 8,
      "to": 16
    },
    "right": {
      "line": "\tif not isKernel:",
      "lineIdx": 72,
      "from": 8,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 116,
      "from": 13,
      "to": 21
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_int, c_int]",
      "lineIdx": 121,
      "from": 13,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 298,
      "from": 23,
      "to": 28
    },
    "right": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 303,
      "from": 23,
      "to": 28
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 48,
      "to": 55
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 48,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 135,
      "from": 18,
      "to": 23
    },
    "right": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 140,
      "from": 18,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 9,
      "to": 11
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 9,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 113,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\t\"nu\", \"p\", \"shrinking\", \"probability\"]",
      "lineIdx": 118,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 265,
      "from": 21,
      "to": 29
    },
    "right": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 270,
      "from": 21,
      "to": 29
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 0,
      "to": 7
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 0,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 294,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\ttoPyModel(model_ptr) -> svm_model",
      "lineIdx": 299,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\tmax_idx = 0",
      "lineIdx": 81,
      "from": 1,
      "to": 8
    },
    "right": {
      "line": "\tmax_idx = 0",
      "lineIdx": 81,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 280,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\trow = dict()",
      "lineIdx": 285,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "from os import path",
      "lineIdx": 4,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "from os import path",
      "lineIdx": 4,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 12,
      "to": 14
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 12,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "except:",
      "lineIdx": 19,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "except:",
      "lineIdx": 19,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 39,
      "to": 44
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 39,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 31,
      "to": 34
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 31,
      "to": 34
    }
  }, {
    "left": {
      "line": "EPSILON_SVR = 3",
      "lineIdx": 31,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "EPSILON_SVR = 3",
      "lineIdx": 31,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 3,
      "to": 11
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 3,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 31,
      "to": 36
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 31,
      "to": 36
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 37,
      "to": 50
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 37,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 19,
      "to": 25
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 19,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 42,
      "to": 50
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 42,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 264,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 269,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 37,
      "to": 43
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 37,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 157,
      "from": 18,
      "to": 25
    },
    "right": {
      "line": "\t\telif isinstance(options, str):",
      "lineIdx": 162,
      "from": 18,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 199,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 204,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "class svm_model(Structure):",
      "lineIdx": 229,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "class svm_model(Structure):",
      "lineIdx": 234,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 1,
      "to": 2
    },
    "right": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 50,
      "to": 55
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 50,
      "to": 55
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 143,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 148,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 7,
      "to": 17
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 7,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 9,
      "to": 19
    },
    "right": {
      "line": "\t\tassert(isinstance(feature_max, int))",
      "lineIdx": 70,
      "from": 9,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 196,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 201,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\tmax_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 13,
      "to": 16
    },
    "right": {
      "line": "                    max_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 30,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 155,
      "from": 5,
      "to": 15
    },
    "right": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 160,
      "from": 5,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 187,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 192,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 16,
      "to": 28
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 16,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 210,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\tif self.nr_fold < 2:",
      "lineIdx": 215,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 188,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\t\t\tself.cache_size = float(argv[i])",
      "lineIdx": 193,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "LINEAR = 0",
      "lineIdx": 34,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "LINEAR = 0",
      "lineIdx": 34,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 184,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 189,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tret[-1].index = -1",
      "lineIdx": 77,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 85,
      "to": 93
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 85,
      "to": 93
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 18,
      "to": 21
    },
    "right": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 18,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 250,
      "from": 33,
      "to": 37
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 255,
      "from": 33,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 36,
      "to": 41
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 36,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 45,
      "to": 52
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 45,
      "to": 52
    }
  }, {
    "left": {
      "line": "import sys",
      "lineIdx": 5,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "import sys",
      "lineIdx": 5,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\toptions = ''",
      "lineIdx": 121,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "\t\t\toptions = ''",
      "lineIdx": 126,
      "from": 3,
      "to": 10
    }
  }, {
    "left": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 30,
      "to": 35
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 30,
      "to": 35
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\tdef __init__(self):",
      "lineIdx": 238,
      "from": 5,
      "to": 13
    },
    "right": {
      "line": "\tdef __init__(self):",
      "lineIdx": 243,
      "from": 5,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\tmax_idx = 0",
      "lineIdx": 81,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\tmax_idx = 0",
      "lineIdx": 81,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 83,
      "to": 96
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 83,
      "to": 96
    }
  }, {
    "left": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 122,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 127,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\traise ValueError(\"len(y) != len(x)\")",
      "lineIdx": 93,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 300,
      "from": 5,
      "to": 14
    },
    "right": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 305,
      "from": 5,
      "to": 14
    }
  }, {
    "left": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "def print_null(s):",
      "lineIdx": 41,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 270,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 275,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 300,
      "from": 15,
      "to": 23
    },
    "right": {
      "line": "\tm = model_ptr.contents",
      "lineIdx": 305,
      "from": 15,
      "to": 23
    }
  }, {
    "left": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 273,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\tdef get_sv_coef(self):",
      "lineIdx": 278,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 112,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "\t\t\t\"cache_size\", \"eps\", \"C\", \"nr_weight\", \"weight_label\", \"weight\",",
      "lineIdx": 117,
      "from": 65,
      "to": 66
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 244,
      "from": 3,
      "to": 9
    },
    "right": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 249,
      "from": 3,
      "to": 9
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 257,
      "from": 12,
      "to": 17
    },
    "right": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 262,
      "from": 12,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\tmax_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 17,
      "to": 24
    },
    "right": {
      "line": "                    max_idx = max(max_idx, tmp_idx)",
      "lineIdx": 101,
      "from": 34,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 193,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 198,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 298,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 303,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 24,
      "to": 28
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 24,
      "to": 28
    }
  }, {
    "left": {
      "line": "\tdef __init__(self):",
      "lineIdx": 238,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\tdef __init__(self):",
      "lineIdx": 243,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 25,
      "to": 29
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 25,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 139,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\tself.coef0 = 0",
      "lineIdx": 144,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, y, x, isKernel=None):",
      "lineIdx": 91,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\tdef __init__(self, y, x, isKernel=None, computed_max_idx):",
      "lineIdx": 91,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 72,
      "to": 73
    }
  }, {
    "left": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 298,
      "from": 1,
      "to": 3
    },
    "right": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 303,
      "from": 1,
      "to": 3
    }
  }, {
    "left": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "__all__ = ['libsvm', 'svm_problem', 'svm_parameter',",
      "lineIdx": 7,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\"\"\"",
      "lineIdx": 293,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "\t\"\"\"",
      "lineIdx": 298,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 138,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 143,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 46,
      "to": 56
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 46,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 93,
      "to": 94
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 93,
      "to": 94
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 21,
      "to": 48
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_probability_model, c_int, [POINTER(svm_model)])",
      "lineIdx": 331,
      "from": 21,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 250,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_nr_class(self)",
      "lineIdx": 255,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 285,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\t\t\tif sparse_sv[i].index == -1:",
      "lineIdx": 290,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tif options == None:",
      "lineIdx": 120,
      "from": 2,
      "to": 4
    },
    "right": {
      "line": "\t\tif options == None:",
      "lineIdx": 125,
      "from": 2,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\treturn result",
      "lineIdx": 290,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn result",
      "lineIdx": 295,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 185,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.nu = float(argv[i])",
      "lineIdx": 190,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 21,
      "to": 24
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 21,
      "to": 24
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 79,
      "to": 80
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 79,
      "to": 80
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 264,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 269,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tweight_label = []",
      "lineIdx": 163,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\tweight_label = []",
      "lineIdx": 168,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 141,
      "from": 7,
      "to": 17
    },
    "right": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 146,
      "from": 7,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 259,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn labels[:nr_class]",
      "lineIdx": 264,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 236,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 241,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(x):",
      "lineIdx": 98,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 53,
      "to": 61
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 53,
      "to": 61
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 253,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 258,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 99,
      "to": 107
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 99,
      "to": 107
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = 0",
      "lineIdx": 96,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\tmax_idx = 0",
      "lineIdx": 96,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 21,
      "to": 26
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 21,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 247,
      "from": 9,
      "to": 15
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 252,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 327,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "fillprototype(libsvm.svm_set_print_string_function, None, [PRINT_STRING_FUN])",
      "lineIdx": 332,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 150,
      "from": 7,
      "to": 23
    },
    "right": {
      "line": "\t\tself.cross_validation = False",
      "lineIdx": 155,
      "from": 7,
      "to": 23
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 11,
      "to": 14
    },
    "right": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 11,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 14,
      "to": 20
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 318,
      "from": 45,
      "to": 52
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict, c_double, [POINTER(svm_model), POINTER(svm_node)])",
      "lineIdx": 323,
      "from": 45,
      "to": 52
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 104,
      "from": 12,
      "to": 20
    },
    "right": {
      "line": "\t\tself.y = (c_double * l)()",
      "lineIdx": 109,
      "from": 12,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 140,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 145,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\targv = options",
      "lineIdx": 156,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\targv = options",
      "lineIdx": 161,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 41,
      "to": 43
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 41,
      "to": 43
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 49,
      "to": 53
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 49,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 2,
      "to": 13
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 2,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 265,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\treturn sv_indices[:total_sv]",
      "lineIdx": 270,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 37,
      "to": 41
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 37,
      "to": 41
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 5,
      "to": 8
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 5,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 45,
      "to": 53
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 45,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 263,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 268,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "\tdef __init__(self):",
      "lineIdx": 238,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\tdef __init__(self):",
      "lineIdx": 243,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 204,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-q\":",
      "lineIdx": 209,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 181,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 186,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 93,
      "to": 94
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 93,
      "to": 94
    }
  }, {
    "left": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 262,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\ttotal_sv = self.get_nr_sv()",
      "lineIdx": 267,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 71,
      "to": 72
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 71,
      "to": 72
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 212,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 32,
      "to": 36
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 32,
      "to": 36
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('svm'))",
      "lineIdx": 22,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 255,
      "from": 5,
      "to": 15
    },
    "right": {
      "line": "\tdef get_labels(self):",
      "lineIdx": 260,
      "from": 5,
      "to": 15
    }
  }, {
    "left": {
      "line": "try:",
      "lineIdx": 13,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "try:",
      "lineIdx": 13,
      "from": 3,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 140,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 145,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 263,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 268,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 214,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 219,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 8,
      "to": 14
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 8,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 225,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\tfor i in range(self.nr_weight):",
      "lineIdx": 230,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 216,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "\t\t\t\tweight_label += [int(argv[i-1][2:])]",
      "lineIdx": 221,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 155,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\tif isinstance(options, list):",
      "lineIdx": 160,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 199,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 204,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tdef __del__(self):",
      "lineIdx": 241,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tdef __del__(self):",
      "lineIdx": 246,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 263,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tsv_indices = (c_int * total_sv)()",
      "lineIdx": 268,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\tresult = []",
      "lineIdx": 278,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tresult = []",
      "lineIdx": 283,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 20,
      "to": 26
    },
    "right": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 20,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 128,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\tfor attr, val in zip(attrs, values):",
      "lineIdx": 133,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 18,
      "to": 26
    },
    "right": {
      "line": "\t_types = [c_int, c_double]",
      "lineIdx": 53,
      "from": 18,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 234,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\tPOINTER(c_double), POINTER(c_double), POINTER(c_int),",
      "lineIdx": 239,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 174,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-d\":",
      "lineIdx": 179,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 258,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 263,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 322,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_and_destroy_model, None, [POINTER(POINTER(svm_model))])",
      "lineIdx": 327,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 143,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 148,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 120,
      "to": 121
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 120,
      "to": 121
    }
  }, {
    "left": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tif find_library('svm'):",
      "lineIdx": 21,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "import sys",
      "lineIdx": 5,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import sys",
      "lineIdx": 5,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 267,
      "from": 15,
      "to": 19
    },
    "right": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 272,
      "from": 15,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 257,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 262,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 35,
      "to": 44
    },
    "right": {
      "line": "           'SIGMOID', 'c_double', 'svm_model']",
      "lineIdx": 11,
      "from": 35,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "\telse:",
      "lineIdx": 17,
      "from": 1,
      "to": 5
    },
    "right": {
      "line": "\telse:",
      "lineIdx": 17,
      "from": 1,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 146,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\tself.probability = 0",
      "lineIdx": 151,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 144,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\tself.p = 0.1",
      "lineIdx": 149,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 270,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef is_probability_model(self):",
      "lineIdx": 275,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 15,
      "to": 18
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 15,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 184,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 189,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 177,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-g\":",
      "lineIdx": 182,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\toptions = ''",
      "lineIdx": 121,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t\t\toptions = ''",
      "lineIdx": 126,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 141,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.cache_size = 100",
      "lineIdx": 146,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "SIGMOID = 3",
      "lineIdx": 37,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "SIGMOID = 3",
      "lineIdx": 37,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 1,
      "to": 2
    },
    "right": {
      "line": "#!/usr/bin/env python",
      "lineIdx": 0,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 119,
      "from": 14,
      "to": 18
    },
    "right": {
      "line": "\tdef __init__(self, options = None):",
      "lineIdx": 124,
      "from": 14,
      "to": 18
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 308,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "fillprototype(libsvm.svm_load_model, POINTER(svm_model), [c_char_p])",
      "lineIdx": 313,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tindex_range = range(len(xi))",
      "lineIdx": 65,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 2,
      "to": 9
    },
    "right": {
      "line": "\t\tmax_idx = index_range[-1]",
      "lineIdx": 83,
      "from": 2,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 198,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-h\":",
      "lineIdx": 203,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 277,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 282,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 24,
      "to": 30
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 24,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 23,
      "to": 29
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 23,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 180,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-r\":",
      "lineIdx": 185,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 64,
      "to": 72
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 64,
      "to": 72
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 227,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\t\t\tself.weight_label[i] = weight_label[i]",
      "lineIdx": 232,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 230,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t_names = ['param', 'nr_class', 'l', 'SV', 'sv_coef', 'rho',",
      "lineIdx": 235,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 47,
      "to": 54
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 47,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 39,
      "to": 41
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 56,
      "to": 58
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 5,
      "to": 12
    },
    "right": {
      "line": "\tdef __str__(self):",
      "lineIdx": 56,
      "from": 5,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 211,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "\t\t\t\t\traise ValueError(\"n-fold cross validation: n must >= 2\")",
      "lineIdx": 216,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 30,
      "to": 36
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 30,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 149,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\tself.weight = (c_double*0)()",
      "lineIdx": 154,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 212,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 10,
      "to": 23
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 10,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 235,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\tPOINTER(c_int), POINTER(c_int), c_int]",
      "lineIdx": 240,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 190,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 195,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\tif not isKernel:",
      "lineIdx": 72,
      "from": 1,
      "to": 3
    },
    "right": {
      "line": "\tif not isKernel:",
      "lineIdx": 72,
      "from": 1,
      "to": 3
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 175,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 180,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\tmax_idx = 0",
      "lineIdx": 96,
      "from": 2,
      "to": 9
    },
    "right": {
      "line": "\t\tmax_idx = 0",
      "lineIdx": 96,
      "from": 2,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 244,
      "from": 37,
      "to": 44
    },
    "right": {
      "line": "\t\t\tlibsvm.svm_free_and_destroy_model(pointer(self))",
      "lineIdx": 249,
      "from": 37,
      "to": 44
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 3,
      "to": 8
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 3,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tself.C = 1",
      "lineIdx": 142,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\tself.C = 1",
      "lineIdx": 147,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 2,
      "to": 6
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 2,
      "to": 6
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 22,
      "to": 28
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 89,
      "from": 22,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 20,
      "to": 26
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 20,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 102,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\tself.n = max_idx",
      "lineIdx": 107,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "RBF = 2",
      "lineIdx": 36,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "RBF = 2",
      "lineIdx": 36,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 52,
      "to": 59
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 52,
      "to": 59
    }
  }, {
    "left": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\treturn list(zip(names, types))",
      "lineIdx": 45,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 264,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_sv_indices(self, sv_indices)",
      "lineIdx": 269,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 19,
      "to": 21
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 19,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 32,
      "to": 39
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 32,
      "to": 39
    }
  }, {
    "left": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 4,
      "to": 17
    },
    "right": {
      "line": "def fillprototype(f, restype, argtypes):",
      "lineIdx": 47,
      "from": 4,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 135,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.svm_type = C_SVC;",
      "lineIdx": 140,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\t\toptions = ''",
      "lineIdx": 121,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\toptions = ''",
      "lineIdx": 126,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 223,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*self.nr_weight)()",
      "lineIdx": 228,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 1,
      "to": 12
    },
    "right": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 1,
      "to": 12
    }
  }, {
    "left": {
      "line": "PRECOMPUTED = 4",
      "lineIdx": 38,
      "from": 0,
      "to": 11
    },
    "right": {
      "line": "PRECOMPUTED = 4",
      "lineIdx": 38,
      "from": 0,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 51,
      "to": 59
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 68,
      "to": 76
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 16,
      "to": 23
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 16,
      "to": 23
    }
  }, {
    "left": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\telif find_library('libsvm'):",
      "lineIdx": 23,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 243,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "\t\tif hasattr(self, '__createfrom__') and self.__createfrom__ == 'C':",
      "lineIdx": 248,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 202,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "\t\traise Exception('LIBSVM library not found.')",
      "lineIdx": 26,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 171,
      "from": 8,
      "to": 12
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-t\":",
      "lineIdx": 176,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 317,
      "from": 107,
      "to": 108
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_values, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 322,
      "from": 107,
      "to": 108
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 195,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-p\":",
      "lineIdx": 200,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 319,
      "from": 96,
      "to": 103
    },
    "right": {
      "line": "fillprototype(libsvm.svm_predict_probability, c_double, [POINTER(svm_model), POINTER(svm_node), POINTER(c_double)])",
      "lineIdx": 324,
      "from": 96,
      "to": 103
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 321,
      "from": 45,
      "to": 49
    },
    "right": {
      "line": "fillprototype(libsvm.svm_free_model_content, None, [POINTER(svm_model)])",
      "lineIdx": 326,
      "from": 45,
      "to": 49
    }
  }, {
    "left": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "class svm_node(Structure):",
      "lineIdx": 51,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 314,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_sv, c_int, [POINTER(svm_model)])",
      "lineIdx": 319,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 170,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\tself.svm_type = int(argv[i])",
      "lineIdx": 175,
      "from": 20,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 239,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "\t\tself.__createfrom__ = 'python'",
      "lineIdx": 244,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 16,
      "to": 20
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 22,
      "to": 28
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 22,
      "to": 28
    }
  }, {
    "left": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 15,
      "to": 21
    },
    "right": {
      "line": "\tindex_range = sorted(index_range)",
      "lineIdx": 75,
      "from": 15,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 200,
      "from": 9,
      "to": 18
    },
    "right": {
      "line": "\t\t\t\tself.shrinking = int(argv[i])",
      "lineIdx": 205,
      "from": 9,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 122,
      "from": 21,
      "to": 28
    },
    "right": {
      "line": "\t\tself.parse_options(options)",
      "lineIdx": 127,
      "from": 21,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 162,
      "from": 31,
      "to": 47
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 167,
      "from": 31,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 214,
      "from": 9,
      "to": 18
    },
    "right": {
      "line": "\t\t\t\tself.nr_weight += 1",
      "lineIdx": 219,
      "from": 9,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 147,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\t\tself.nr_weight = 0",
      "lineIdx": 152,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 4,
      "to": 13
    },
    "right": {
      "line": "def genFields(names, types):",
      "lineIdx": 44,
      "from": 4,
      "to": 13
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "\tdef __init__(self):",
      "lineIdx": 238,
      "from": 14,
      "to": 18
    },
    "right": {
      "line": "\tdef __init__(self):",
      "lineIdx": 243,
      "from": 14,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "\t\treturn '%d:%g' % (self.index, self.value)",
      "lineIdx": 57,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 127,
      "from": 22,
      "to": 26
    },
    "right": {
      "line": "\t\tvalues = map(lambda attr: getattr(self, attr), attrs)",
      "lineIdx": 132,
      "from": 22,
      "to": 26
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 22,
      "to": 26
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 22,
      "to": 26
    }
  }, {
    "left": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 17,
      "to": 19
    },
    "right": {
      "line": "\telif isinstance(xi, (list, tuple)):",
      "lineIdx": 62,
      "from": 17,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 193,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 198,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 203,
      "from": 9,
      "to": 20
    },
    "right": {
      "line": "\t\t\t\tself.probability = int(argv[i])",
      "lineIdx": 208,
      "from": 9,
      "to": 20
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 23,
      "to": 26
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 23,
      "to": 26
    }
  }, {
    "left": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 298,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 303,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 52,
      "to": 61
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 52,
      "to": 61
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, '../libsvm.so.2'))",
      "lineIdx": 18,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 256,
      "from": 13,
      "to": 17
    },
    "right": {
      "line": "\t\tnr_class = self.get_nr_class()",
      "lineIdx": 261,
      "from": 13,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 179,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\t\t\tself.gamma = float(argv[i])",
      "lineIdx": 184,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 168,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\tif argv[i] == \"-s\":",
      "lineIdx": 173,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 140,
      "from": 7,
      "to": 9
    },
    "right": {
      "line": "\t\tself.nu = 0.5",
      "lineIdx": 145,
      "from": 7,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 193,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 198,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 304,
      "from": 96,
      "to": 97
    },
    "right": {
      "line": "fillprototype(libsvm.svm_train, POINTER(svm_model), [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 309,
      "from": 96,
      "to": 97
    }
  }, {
    "left": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 143,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\tself.eps = 0.001",
      "lineIdx": 148,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 310,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svm_type, c_int, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 37,
      "to": 44
    },
    "right": {
      "line": "\t_types = [c_int, POINTER(c_double), POINTER(POINTER(svm_node))]",
      "lineIdx": 88,
      "from": 37,
      "to": 44
    }
  }, {
    "left": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "\tret = (svm_node * (len(index_range)+1))()",
      "lineIdx": 76,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 201,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-b\":",
      "lineIdx": 206,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 298,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tif bool(model_ptr) == False:",
      "lineIdx": 303,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 209,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\t\t\tself.nr_fold = int(argv[i])",
      "lineIdx": 214,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "\tf.argtypes = argtypes",
      "lineIdx": 49,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 154,
      "from": 19,
      "to": 23
    },
    "right": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 159,
      "from": 19,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 21,
      "to": 38
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 38,
      "to": 55
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 51,
      "to": 62
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 51,
      "to": 62
    }
  }, {
    "left": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 111,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\t_names = [\"svm_type\", \"kernel_type\", \"degree\", \"gamma\", \"coef0\",",
      "lineIdx": 116,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 226,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\t\tself.weight[i] = weight[i]",
      "lineIdx": 231,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 194,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\t\t\tself.eps = float(argv[i])",
      "lineIdx": 199,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 19,
      "to": 21
    },
    "right": {
      "line": "\t\tret[idx].value = xi[j]",
      "lineIdx": 80,
      "from": 19,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 52,
      "to": 54
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 52,
      "to": 54
    }
  }, {
    "left": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 152,
      "from": 25,
      "to": 29
    },
    "right": {
      "line": "\t\tself.print_func = cast(None, PRINT_STRING_FUN)",
      "lineIdx": 157,
      "from": 25,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 148,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tself.weight_label = (c_int*0)()",
      "lineIdx": 153,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 261,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 266,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t_names = [\"l\", \"y\", \"x\"]",
      "lineIdx": 87,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 274,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "\t\treturn [tuple(self.sv_coef[j][i] for j in xrange(self.nr_class - 1))",
      "lineIdx": 279,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 231,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "\t\t\t'probA', 'probB', 'sv_indices', 'label', 'nSV', 'free_sv']",
      "lineIdx": 236,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 222,
      "from": 39,
      "to": 43
    },
    "right": {
      "line": "\t\tlibsvm.svm_set_print_string_function(self.print_func)",
      "lineIdx": 227,
      "from": 39,
      "to": 43
    }
  }, {
    "left": {
      "line": "\t\"\"\"",
      "lineIdx": 293,
      "from": 1,
      "to": 2
    },
    "right": {
      "line": "\t\"\"\"",
      "lineIdx": 298,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 151,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "\t\tself.nr_fold = 0",
      "lineIdx": 156,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 44,
      "to": 52
    },
    "right": {
      "line": "def gen_svm_nodearray(xi, feature_max=None, isKernel=None):",
      "lineIdx": 59,
      "from": 44,
      "to": 52
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 261,
      "from": 1,
      "to": 4
    },
    "right": {
      "line": "\tdef get_sv_indices(self):",
      "lineIdx": 266,
      "from": 1,
      "to": 4
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 28,
      "to": 32
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 28,
      "to": 32
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 247,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svm_type(self)",
      "lineIdx": 252,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 277,
      "from": 12,
      "to": 16
    },
    "right": {
      "line": "\tdef get_SV(self):",
      "lineIdx": 282,
      "from": 12,
      "to": 16
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 192,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-e\":",
      "lineIdx": 197,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 305,
      "from": 103,
      "to": 110
    },
    "right": {
      "line": "fillprototype(libsvm.svm_cross_validation, None, [POINTER(svm_problem), POINTER(svm_parameter), c_int, POINTER(c_double)])",
      "lineIdx": 310,
      "from": 103,
      "to": 110
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 311,
      "from": 0,
      "to": 13
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_nr_class, c_int, [POINTER(svm_model)])",
      "lineIdx": 316,
      "from": 0,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 193,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 198,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 72,
      "to": 73
    }
  }, {
    "left": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 138,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 143,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 232,
      "from": 33,
      "to": 38
    },
    "right": {
      "line": "\t_types = [svm_parameter, c_int, c_int, POINTER(POINTER(svm_node)),",
      "lineIdx": 237,
      "from": 33,
      "to": 38
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 129,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\ts += (' %s: %s\\n' % (attr, val))",
      "lineIdx": 134,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 114,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "\t_types = [c_int, c_int, c_int, c_double, c_double,",
      "lineIdx": 119,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 12,
      "to": 21
    },
    "right": {
      "line": "\t_fields_ = genFields(_names, _types)",
      "lineIdx": 54,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 313,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_sv_indices, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 318,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(path.join(dirname, r'..\\windows\\libsvm.dll'))",
      "lineIdx": 16,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 267,
      "from": 5,
      "to": 14
    },
    "right": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 272,
      "from": 5,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 176,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\t\tself.degree = int(argv[i])",
      "lineIdx": 181,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 160,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t\t\traise TypeError(\"arg 1 should be a list or a str.\")",
      "lineIdx": 165,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 252,
      "from": 5,
      "to": 24
    },
    "right": {
      "line": "\tdef get_svr_probability(self):",
      "lineIdx": 257,
      "from": 5,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j: j <= feature_max, index_range)",
      "lineIdx": 71,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\tself.l = l = len(y)",
      "lineIdx": 94,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 154,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 159,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "from os import path",
      "lineIdx": 4,
      "from": 8,
      "to": 14
    },
    "right": {
      "line": "from os import path",
      "lineIdx": 4,
      "from": 8,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 182,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.coef0 = float(argv[i])",
      "lineIdx": 187,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tif sys.platform == 'win32':",
      "lineIdx": 15,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 108,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "\t\tfor i, xi in enumerate(self.x_space): self.x[i] = xi",
      "lineIdx": 113,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 279,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "\t\tfor sparse_sv in self.SV[:self.l]:",
      "lineIdx": 284,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 307,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "fillprototype(libsvm.svm_save_model, c_int, [c_char_p, POINTER(svm_model)])",
      "lineIdx": 312,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "           'toPyModel', 'gen_svm_nodearray', 'print_null', 'svm_node', 'C_SVC',",
      "lineIdx": 8,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 323,
      "from": 55,
      "to": 68
    },
    "right": {
      "line": "fillprototype(libsvm.svm_destroy_param, None, [POINTER(svm_parameter)])",
      "lineIdx": 328,
      "from": 55,
      "to": 68
    }
  }, {
    "left": {
      "line": "\treturn m",
      "lineIdx": 302,
      "from": 1,
      "to": 7
    },
    "right": {
      "line": "\treturn m",
      "lineIdx": 307,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "\tdef __del__(self):",
      "lineIdx": 241,
      "from": 5,
      "to": 12
    },
    "right": {
      "line": "\tdef __del__(self):",
      "lineIdx": 246,
      "from": 5,
      "to": 12
    }
  }, {
    "left": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 258,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tlibsvm.svm_get_labels(self, labels)",
      "lineIdx": 263,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 249,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "\tdef get_nr_class(self):",
      "lineIdx": 254,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 107,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\tself.x = (POINTER(svm_node) * l)()",
      "lineIdx": 112,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 1,
      "to": 8
    },
    "right": {
      "line": "\tdirname = path.dirname(path.abspath(__file__))",
      "lineIdx": 14,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 186,
      "from": 3,
      "to": 7
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-m\":",
      "lineIdx": 191,
      "from": 3,
      "to": 7
    }
  }, {
    "left": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 154,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\tdef parse_options(self, options):",
      "lineIdx": 159,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 74,
      "to": 75
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 74,
      "to": 75
    }
  }, {
    "left": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "           'EPSILON_SVR', 'LINEAR', 'NU_SVC', 'NU_SVR', 'ONE_CLASS',",
      "lineIdx": 9,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 136,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "\t\tself.kernel_type = RBF",
      "lineIdx": 141,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "# For unix the prefix 'lib' is not considered.",
      "lineIdx": 20,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 325,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "fillprototype(libsvm.svm_check_parameter, c_char_p, [POINTER(svm_problem), POINTER(svm_parameter)])",
      "lineIdx": 330,
      "from": 60,
      "to": 61
    }
  }, {
    "left": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 253,
      "from": 16,
      "to": 39
    },
    "right": {
      "line": "\t\treturn libsvm.svm_get_svr_probability(self)",
      "lineIdx": 258,
      "from": 16,
      "to": 39
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 189,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-c\":",
      "lineIdx": 194,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "\t\tx_space = self.x_space = []",
      "lineIdx": 97,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 271,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "\t\treturn (libsvm.svm_check_probability_model(self) == 1)",
      "lineIdx": 276,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 315,
      "from": 57,
      "to": 64
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_svr_probability, c_double, [POINTER(svm_model)])",
      "lineIdx": 320,
      "from": 57,
      "to": 64
    }
  }, {
    "left": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 105,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "\t\tfor i, yi in enumerate(y): self.y[i] = yi",
      "lineIdx": 110,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 207,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 212,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "\t\traise TypeError('xi should be a dictionary, list or tuple')",
      "lineIdx": 67,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 138,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "\t\tself.gamma = 0",
      "lineIdx": 143,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 24,
      "to": 30
    },
    "right": {
      "line": "\t\t\txi = [0] + xi  # idx should start from 1",
      "lineIdx": 64,
      "from": 24,
      "to": 30
    }
  }, {
    "left": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 224,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "\t\tself.weight = (c_double*self.nr_weight)()",
      "lineIdx": 229,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 267,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "\tdef get_nr_sv(self):",
      "lineIdx": 272,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "\t\tindex_range = filter(lambda j:xi[j] != 0, index_range)",
      "lineIdx": 73,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 212,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "\t\t\telif argv[i].startswith(\"-w\"):",
      "lineIdx": 217,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 115,
      "from": 13,
      "to": 21
    },
    "right": {
      "line": "\t\t\tc_double, c_double, c_double, c_int, POINTER(c_int), POINTER(c_double),",
      "lineIdx": 120,
      "from": 13,
      "to": 21
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 190,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 195,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "class svm_problem(Structure):",
      "lineIdx": 86,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 2,
      "to": 4
    },
    "right": {
      "line": "\t\tif len(y) != len(x):",
      "lineIdx": 92,
      "from": 2,
      "to": 4
    }
  }, {
    "left": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 312,
      "from": 78,
      "to": 79
    },
    "right": {
      "line": "fillprototype(libsvm.svm_get_labels, None, [POINTER(svm_model), POINTER(c_int)])",
      "lineIdx": 317,
      "from": 78,
      "to": 79
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 205,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "\t\t\t\tself.print_func = PRINT_STRING_FUN(print_null)",
      "lineIdx": 210,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 183,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-n\":",
      "lineIdx": 188,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 233,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "\t\t\tPOINTER(POINTER(c_double)), POINTER(c_double),",
      "lineIdx": 238,
      "from": 3,
      "to": 10
    }
  }, {
    "left": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "\t\tlibsvm = CDLL(find_library('libsvm'))",
      "lineIdx": 24,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "\t_names = [\"index\", \"value\"]",
      "lineIdx": 52,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 126,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "\t\tattrs = svm_parameter._names + list(self.__dict__.keys())",
      "lineIdx": 131,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 191,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "\t\t\t\tself.C = float(argv[i])",
      "lineIdx": 196,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 206,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "\t\t\telif argv[i] == \"-v\":",
      "lineIdx": 211,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 19,
      "to": 23
    },
    "right": {
      "line": "\t\tindex_range = xi.keys()",
      "lineIdx": 61,
      "from": 19,
      "to": 23
    }
  }, {
    "left": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 296,
      "from": 42,
      "to": 48
    },
    "right": {
      "line": "\tConvert a ctypes POINTER(svm_model) to a Python svm_model",
      "lineIdx": 301,
      "from": 42,
      "to": 48
    }
  }, {
    "left": {
      "line": "\t\t\ti = 0",
      "lineIdx": 282,
      "from": 7,
      "to": 8
    },
    "right": {
      "line": "\t\t\ti = 0",
      "lineIdx": 287,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 181,
      "from": 4,
      "to": 5
    },
    "right": {
      "line": "\t\t\t\ti = i + 1",
      "lineIdx": 186,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 25,
      "to": 36
    },
    "right": {
      "line": "\tfor idx, j in enumerate(index_range):",
      "lineIdx": 78,
      "from": 25,
      "to": 36
    }
  }, {
    "left": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 257,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "\t\tlabels = (c_int * nr_class)()",
      "lineIdx": 262,
      "from": 2,
      "to": 8
    }
  }, {
    "left": {
      "line": "\t\t\ttmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 99,
      "from": 59,
      "to": 60
    },
    "right": {
      "line": "                    tmp_xi, tmp_idx = gen_svm_nodearray(xi,isKernel=isKernel)",
      "lineIdx": 100,
      "from": 76,
      "to": 77
    }
  }]
}