{
  "matches": [{
    "left": {
      "line": "//#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 3,
      "to": 8
    },
    "right": {
      "line": "#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 1,
      "to": 6
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 31,
      "to": 42
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 29,
      "to": 40
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 6,
      "to": 14
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 4,
      "to": 12
    }
  }, {
    "left": {
      "line": "//#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "//    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "//using boost::optional;",
      "lineIdx": 7,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "using boost::optional;",
      "lineIdx": 7,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "//    const SVMModelPtr mMLModel;",
      "lineIdx": 23,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "    const SVMModelPtr mMLModel;",
      "lineIdx": 23,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "//    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 4,
      "to": 5
    }
  }, {
    "left": {
      "line": "//    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "//    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "//#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "//    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 11,
      "to": 27
    },
    "right": {
      "line": "    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 9,
      "to": 25
    }
  }, {
    "left": {
      "line": "//    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 49,
      "to": 50
    }
  }, {
    "left": {
      "line": "//    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 27,
      "to": 32
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 25,
      "to": 30
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 23,
      "to": 29
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 21,
      "to": 27
    }
  }, {
    "left": {
      "line": "//    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "//    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "//    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 18,
      "to": 23
    },
    "right": {
      "line": "    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 16,
      "to": 21
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 20,
      "to": 27
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 18,
      "to": 25
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 6,
      "to": 16
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 4,
      "to": 14
    }
  }, {
    "left": {
      "line": "//    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "//    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 34,
      "to": 41
    },
    "right": {
      "line": "    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 32,
      "to": 39
    }
  }, {
    "left": {
      "line": "//    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 10,
      "to": 17
    }
  }, {
    "left": {
      "line": "//    const QString mModelPath;",
      "lineIdx": 21,
      "from": 6,
      "to": 11
    },
    "right": {
      "line": "    const QString mModelPath;",
      "lineIdx": 21,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "//    const SVMModelPtr mMLModel;",
      "lineIdx": 23,
      "from": 12,
      "to": 23
    },
    "right": {
      "line": "    const SVMModelPtr mMLModel;",
      "lineIdx": 23,
      "from": 10,
      "to": 21
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "//    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 25,
      "to": 30
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 23,
      "to": 28
    }
  }, {
    "left": {
      "line": "//#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "//class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 8,
      "to": 17
    },
    "right": {
      "line": "class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 6,
      "to": 15
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "//    void openTestCase();",
      "lineIdx": 27,
      "from": 11,
      "to": 23
    },
    "right": {
      "line": "    void openTestCase();",
      "lineIdx": 27,
      "from": 9,
      "to": 21
    }
  }, {
    "left": {
      "line": "//    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 6,
      "to": 15
    },
    "right": {
      "line": "    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 4,
      "to": 13
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 33,
      "to": 42
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 31,
      "to": 40
    }
  }, {
    "left": {
      "line": "//#include <QMainWindow>",
      "lineIdx": 2,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "#include <QMainWindow>",
      "lineIdx": 2,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "//private slots:",
      "lineIdx": 25,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "private slots:",
      "lineIdx": 25,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 47,
      "to": 53
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 45,
      "to": 51
    }
  }, {
    "left": {
      "line": "//using boost::optional;",
      "lineIdx": 7,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "using boost::optional;",
      "lineIdx": 7,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "//    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 76,
      "to": 77
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 74,
      "to": 75
    }
  }, {
    "left": {
      "line": "//    void createMenus();",
      "lineIdx": 17,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "    void createMenus();",
      "lineIdx": 17,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "//#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 27,
      "to": 30
    },
    "right": {
      "line": "#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 25,
      "to": 28
    }
  }, {
    "left": {
      "line": "//#ifndef SENSIDIFF_H",
      "lineIdx": 0,
      "from": 10,
      "to": 21
    },
    "right": {
      "line": "#ifndef SENSIDIFF_H",
      "lineIdx": 0,
      "from": 8,
      "to": 19
    }
  }, {
    "left": {
      "line": "//{",
      "lineIdx": 12,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "{",
      "lineIdx": 12,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "//#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "//class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 27,
      "to": 38
    },
    "right": {
      "line": "class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 25,
      "to": 36
    }
  }, {
    "left": {
      "line": "//    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 43,
      "to": 50
    },
    "right": {
      "line": "    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 41,
      "to": 48
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 6,
      "to": 15
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 4,
      "to": 13
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "//#ifndef SENSIDIFF_H",
      "lineIdx": 0,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "#ifndef SENSIDIFF_H",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "//    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 28,
      "to": 33
    },
    "right": {
      "line": "    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 26,
      "to": 31
    }
  }, {
    "left": {
      "line": "//    void createMenus();",
      "lineIdx": 17,
      "from": 11,
      "to": 22
    },
    "right": {
      "line": "    void createMenus();",
      "lineIdx": 17,
      "from": 9,
      "to": 20
    }
  }, {
    "left": {
      "line": "//#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 12,
      "to": 23
    },
    "right": {
      "line": "#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 10,
      "to": 21
    }
  }, {
    "left": {
      "line": "//    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 6,
      "to": 11
    },
    "right": {
      "line": "    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "//    void openTestCase();",
      "lineIdx": 27,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "    void openTestCase();",
      "lineIdx": 27,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "//    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 36,
      "to": 42
    },
    "right": {
      "line": "    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 34,
      "to": 40
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 44,
      "to": 46
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 42,
      "to": 44
    }
  }, {
    "left": {
      "line": "//    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 6,
      "to": 11
    },
    "right": {
      "line": "    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "//    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 11,
      "to": 17
    },
    "right": {
      "line": "    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 9,
      "to": 15
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 28,
      "to": 36
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 26,
      "to": 34
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 38,
      "to": 45
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 36,
      "to": 43
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 33,
      "to": 40
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 31,
      "to": 38
    }
  }, {
    "left": {
      "line": "//    const QString mRangesPath;",
      "lineIdx": 22,
      "from": 20,
      "to": 31
    },
    "right": {
      "line": "    const QString mRangesPath;",
      "lineIdx": 22,
      "from": 18,
      "to": 29
    }
  }, {
    "left": {
      "line": "//    const QString mRangesPath;",
      "lineIdx": 22,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "    const QString mRangesPath;",
      "lineIdx": 22,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "//    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "//    const QString mModelPath;",
      "lineIdx": 21,
      "from": 20,
      "to": 30
    },
    "right": {
      "line": "    const QString mModelPath;",
      "lineIdx": 21,
      "from": 18,
      "to": 28
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 18,
      "to": 22
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "//#define SENSIDIFF_H",
      "lineIdx": 1,
      "from": 3,
      "to": 9
    },
    "right": {
      "line": "#define SENSIDIFF_H",
      "lineIdx": 1,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "//    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "//using boost::optional;",
      "lineIdx": 7,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "using boost::optional;",
      "lineIdx": 7,
      "from": 6,
      "to": 11
    }
  }, {
    "left": {
      "line": "//#define SENSIDIFF_H",
      "lineIdx": 1,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "#define SENSIDIFF_H",
      "lineIdx": 1,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "//    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 59,
      "to": 65
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 57,
      "to": 63
    }
  }, {
    "left": {
      "line": "//    void createMenus();",
      "lineIdx": 17,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "    void createMenus();",
      "lineIdx": 17,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "//    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "//};",
      "lineIdx": 33,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "};",
      "lineIdx": 33,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 15,
      "to": 24
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 13,
      "to": 22
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "//class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 20,
      "to": 26
    },
    "right": {
      "line": "class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 18,
      "to": 24
    }
  }, {
    "left": {
      "line": "//    void saveTestCase();",
      "lineIdx": 26,
      "from": 11,
      "to": 23
    },
    "right": {
      "line": "    void saveTestCase();",
      "lineIdx": 26,
      "from": 9,
      "to": 21
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "//    const QString mRangesPath;",
      "lineIdx": 22,
      "from": 6,
      "to": 11
    },
    "right": {
      "line": "    const QString mRangesPath;",
      "lineIdx": 22,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "//#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 18,
      "to": 26
    },
    "right": {
      "line": "#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 16,
      "to": 24
    }
  }, {
    "left": {
      "line": "//    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "//    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 11,
      "to": 27
    },
    "right": {
      "line": "    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 9,
      "to": 25
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "//    const QString mModelPath;",
      "lineIdx": 21,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "    const QString mModelPath;",
      "lineIdx": 21,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "//    const QString mRangesPath;",
      "lineIdx": 22,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "    const QString mRangesPath;",
      "lineIdx": 22,
      "from": 10,
      "to": 17
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 44,
      "to": 48
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 42,
      "to": 46
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "//#define SENSIDIFF_H",
      "lineIdx": 1,
      "from": 10,
      "to": 21
    },
    "right": {
      "line": "#define SENSIDIFF_H",
      "lineIdx": 1,
      "from": 8,
      "to": 19
    }
  }, {
    "left": {
      "line": "//#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "//class OneToOneAlignmentWithAmbiguity;",
      "lineIdx": 9,
      "from": 8,
      "to": 38
    },
    "right": {
      "line": "class OneToOneAlignmentWithAmbiguity;",
      "lineIdx": 9,
      "from": 6,
      "to": 36
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "//    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 19,
      "to": 25
    },
    "right": {
      "line": "    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 17,
      "to": 23
    }
  }, {
    "left": {
      "line": "//    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 19,
      "to": 31
    },
    "right": {
      "line": "    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 17,
      "to": 29
    }
  }, {
    "left": {
      "line": "//    void openTestCase();",
      "lineIdx": 27,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    void openTestCase();",
      "lineIdx": 27,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "//    void openTestCase();",
      "lineIdx": 27,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "    void openTestCase();",
      "lineIdx": 27,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "//    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 41,
      "to": 43
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 39,
      "to": 41
    }
  }, {
    "left": {
      "line": "//    void saveTestCase();",
      "lineIdx": 26,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "    void saveTestCase();",
      "lineIdx": 26,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "//    const SVMModelPtr mMLModel;",
      "lineIdx": 23,
      "from": 6,
      "to": 11
    },
    "right": {
      "line": "    const SVMModelPtr mMLModel;",
      "lineIdx": 23,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "//    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 56,
      "to": 65
    },
    "right": {
      "line": "    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 54,
      "to": 63
    }
  }, {
    "left": {
      "line": "//private slots:",
      "lineIdx": 25,
      "from": 10,
      "to": 15
    },
    "right": {
      "line": "private slots:",
      "lineIdx": 25,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "//    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "    void openDiffFromMenu();",
      "lineIdx": 28,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "//    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "//    void openTestCase();",
      "lineIdx": 27,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "    void openTestCase();",
      "lineIdx": 27,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "//    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 16,
      "to": 21
    },
    "right": {
      "line": "    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 14,
      "to": 19
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 46,
      "to": 55
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 44,
      "to": 53
    }
  }, {
    "left": {
      "line": "//#ifndef SENSIDIFF_H",
      "lineIdx": 0,
      "from": 3,
      "to": 9
    },
    "right": {
      "line": "#ifndef SENSIDIFF_H",
      "lineIdx": 0,
      "from": 1,
      "to": 7
    }
  }, {
    "left": {
      "line": "//class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 2,
      "to": 7
    },
    "right": {
      "line": "class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "//    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "//    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "//#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "#endif // SENSIDIFF_H",
      "lineIdx": 35,
      "from": 7,
      "to": 8
    }
  }, {
    "left": {
      "line": "//#include <QMainWindow>",
      "lineIdx": 2,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "#include <QMainWindow>",
      "lineIdx": 2,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "//class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "class SensiDiff : public QMainWindow",
      "lineIdx": 11,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 11,
      "to": 19
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 9,
      "to": 17
    }
  }, {
    "left": {
      "line": "//using boost::optional;",
      "lineIdx": 7,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "using boost::optional;",
      "lineIdx": 7,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "//#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "//#include <QMainWindow>",
      "lineIdx": 2,
      "from": 12,
      "to": 23
    },
    "right": {
      "line": "#include <QMainWindow>",
      "lineIdx": 2,
      "from": 10,
      "to": 21
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 3,
      "to": 10
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 1,
      "to": 8
    }
  }, {
    "left": {
      "line": "//    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "//class OneToOneAlignmentWithAmbiguity;",
      "lineIdx": 9,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "class OneToOneAlignmentWithAmbiguity;",
      "lineIdx": 9,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "//    const QString mModelPath;",
      "lineIdx": 21,
      "from": 12,
      "to": 19
    },
    "right": {
      "line": "    const QString mModelPath;",
      "lineIdx": 21,
      "from": 10,
      "to": 17
    }
  }, {
    "left": {
      "line": "//    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "//    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "//    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 20,
      "to": 28
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 18,
      "to": 26
    }
  }, {
    "left": {
      "line": "//using boost::optional;",
      "lineIdx": 7,
      "from": 2,
      "to": 7
    },
    "right": {
      "line": "using boost::optional;",
      "lineIdx": 7,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "//    void saveTestCase();",
      "lineIdx": 26,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "    void saveTestCase();",
      "lineIdx": 26,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "//    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 7,
      "to": 16
    },
    "right": {
      "line": "    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 5,
      "to": 14
    }
  }, {
    "left": {
      "line": "//    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 27,
      "to": 36
    },
    "right": {
      "line": "    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 25,
      "to": 34
    }
  }, {
    "left": {
      "line": "//public:",
      "lineIdx": 29,
      "from": 2,
      "to": 8
    },
    "right": {
      "line": "public:",
      "lineIdx": 29,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "//private slots:",
      "lineIdx": 25,
      "from": 2,
      "to": 9
    },
    "right": {
      "line": "private slots:",
      "lineIdx": 25,
      "from": 0,
      "to": 7
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "//    const SVMModelPtr mMLModel;",
      "lineIdx": 23,
      "from": 24,
      "to": 32
    },
    "right": {
      "line": "    const SVMModelPtr mMLModel;",
      "lineIdx": 23,
      "from": 22,
      "to": 30
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 29,
      "to": 39
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 27,
      "to": 37
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "//    void saveTestCase();",
      "lineIdx": 26,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "    void saveTestCase();",
      "lineIdx": 26,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "//    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 33,
      "to": 40
    },
    "right": {
      "line": "    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 31,
      "to": 38
    }
  }, {
    "left": {
      "line": "//    void saveTestCase();",
      "lineIdx": 26,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "    void saveTestCase();",
      "lineIdx": 26,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "//    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "//    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "//    Q_OBJECT",
      "lineIdx": 13,
      "from": 6,
      "to": 14
    },
    "right": {
      "line": "    Q_OBJECT",
      "lineIdx": 13,
      "from": 4,
      "to": 12
    }
  }, {
    "left": {
      "line": "//public:",
      "lineIdx": 29,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "public:",
      "lineIdx": 29,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 12,
      "to": 15
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 10,
      "to": 13
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 26,
      "to": 32
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 24,
      "to": 30
    }
  }, {
    "left": {
      "line": "//#include <QMainWindow>",
      "lineIdx": 2,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "#include <QMainWindow>",
      "lineIdx": 2,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "//#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "//#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 12,
      "to": 17
    },
    "right": {
      "line": "#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 10,
      "to": 15
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 68,
      "to": 75
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 66,
      "to": 73
    }
  }, {
    "left": {
      "line": "//    void createMenus();",
      "lineIdx": 17,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "    void createMenus();",
      "lineIdx": 17,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "//    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 24,
      "to": 54
    },
    "right": {
      "line": "    void addTab(const OneToOneAlignmentWithAmbiguity& alignment);",
      "lineIdx": 19,
      "from": 22,
      "to": 52
    }
  }, {
    "left": {
      "line": "//#include <QMainWindow>",
      "lineIdx": 2,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "#include <QMainWindow>",
      "lineIdx": 2,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "//    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "    bool reallyShouldSave(const QString& dirPath);",
      "lineIdx": 20,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "//    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 22,
      "to": 31
    },
    "right": {
      "line": "    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 20,
      "to": 29
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "//#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "#include <boost/optional.hpp>",
      "lineIdx": 5,
      "from": 9,
      "to": 10
    }
  }, {
    "left": {
      "line": "//};",
      "lineIdx": 33,
      "from": 3,
      "to": 4
    },
    "right": {
      "line": "};",
      "lineIdx": 33,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 75,
      "to": 76
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 73,
      "to": 74
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 17,
      "to": 25
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 15,
      "to": 23
    }
  }, {
    "left": {
      "line": "//    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "    SensiDiff(const SensiDiff&) = delete;",
      "lineIdx": 14,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "//    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 12,
      "to": 18
    },
    "right": {
      "line": "    const vector<FeatureRange> mRanges;",
      "lineIdx": 24,
      "from": 10,
      "to": 16
    }
  }, {
    "left": {
      "line": "//    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "//    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    SensiDiff& operator=(const SensiDiff&) = delete;",
      "lineIdx": 15,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 16,
      "to": 22
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 14,
      "to": 20
    }
  }, {
    "left": {
      "line": "//class OneToOneAlignmentWithAmbiguity;",
      "lineIdx": 9,
      "from": 2,
      "to": 7
    },
    "right": {
      "line": "class OneToOneAlignmentWithAmbiguity;",
      "lineIdx": 9,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "//    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 50,
      "to": 57
    },
    "right": {
      "line": "    explicit SensiDiff(const QStringList& args, QWidget *parent = nullptr);",
      "lineIdx": 30,
      "from": 48,
      "to": 55
    }
  }, {
    "left": {
      "line": "//    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "    void openDiff(QString leftPath, QString rightPath);",
      "lineIdx": 32,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "//    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "    ~SensiDiff(){}",
      "lineIdx": 31,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "//using boost::optional;",
      "lineIdx": 7,
      "from": 15,
      "to": 23
    },
    "right": {
      "line": "using boost::optional;",
      "lineIdx": 7,
      "from": 13,
      "to": 21
    }
  }, {
    "left": {
      "line": "//#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "#include \"aligner/learning/mlpipeline.h\"",
      "lineIdx": 3,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "//#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "#include \"mix/logger/logger.h\"",
      "lineIdx": 4,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "//    void createMenus();",
      "lineIdx": 17,
      "from": 6,
      "to": 10
    },
    "right": {
      "line": "    void createMenus();",
      "lineIdx": 17,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "//    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "    QTabWidget &tabs; //memory managed by qt",
      "lineIdx": 18,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "//    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 12,
      "to": 18
    },
    "right": {
      "line": "    const Logger logger{\"SensiDiff\"};",
      "lineIdx": 16,
      "from": 10,
      "to": 16
    }
  }]
}