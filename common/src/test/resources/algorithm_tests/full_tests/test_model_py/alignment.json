{
  "matches": [{
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 27,
      "to": 32
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 27,
      "to": 32
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 45,
      "to": 49
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 49,
      "to": 53
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 82,
      "to": 83
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 86,
      "to": 87
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 64,
      "to": 66
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 64,
      "to": 66
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 31,
      "to": 42
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 35,
      "to": 46
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 68,
      "to": 72
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 72,
      "to": 76
    }
  }, {
    "left": {
      "line": "    if len(y) > 0:",
      "lineIdx": 33,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "        if len(ref_y) > 0:",
      "lineIdx": 34,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 36,
      "to": 46
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 36,
      "to": 46
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 12,
      "to": 17
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 12,
      "to": 17
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 12,
      "to": 17
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 34,
      "to": 39
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 38,
      "to": 43
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 20,
      "to": 27
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 20,
      "to": 27
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 76,
      "to": 77
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 76,
      "to": 77
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 15,
      "to": 31
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 19,
      "to": 35
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 54,
      "to": 57
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 58,
      "to": 61
    }
  }, {
    "left": {
      "line": "    if len(y) > 0:",
      "lineIdx": 33,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "        if len(ref_y) > 0:",
      "lineIdx": 34,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 84,
      "to": 88
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 84,
      "to": 88
    }
  }, {
    "left": {
      "line": "    print(\"Testing:\" + dir)",
      "lineIdx": 31,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "        print(\"Testing:\" + dir)",
      "lineIdx": 32,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "with open('../features_output/testing_files.txt') as f:",
      "lineIdx": 25,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "    with open(file_list_file) as f:",
      "lineIdx": 26,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 21,
      "to": 26
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 21,
      "to": 26
    }
  }, {
    "left": {
      "line": "    print(\"Testing:\" + dir)",
      "lineIdx": 31,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "        print(\"Testing:\" + dir)",
      "lineIdx": 32,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 11,
      "to": 14
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 11,
      "to": 14
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 72,
      "to": 73
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 76,
      "to": 77
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 72,
      "to": 76
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 72,
      "to": 76
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 64,
      "to": 72
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 68,
      "to": 76
    }
  }, {
    "left": {
      "line": "with open('../features_output/testing_files.txt') as f:",
      "lineIdx": 25,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "    with open(file_list_file) as f:",
      "lineIdx": 26,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "        zipped = zip(calc_y, ref_y)",
      "lineIdx": 36,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "            zipped = zip(calc_y, ref_y)",
      "lineIdx": 37,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 69,
      "to": 70
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 31,
      "to": 36
    },
    "right": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 31,
      "to": 36
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 41,
      "to": 42
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 12,
      "to": 17
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 4,
      "to": 6
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 4,
      "to": 6
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 71,
      "to": 72
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 71,
      "to": 72
    }
  }, {
    "left": {
      "line": "    print(\"Testing:\" + dir)",
      "lineIdx": 31,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "        print(\"Testing:\" + dir)",
      "lineIdx": 32,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 29,
      "to": 31
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 29,
      "to": 31
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 4,
      "to": 16
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 4,
      "to": 16
    }
  }, {
    "left": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 68,
      "to": 69
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 15,
      "to": 21
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 19,
      "to": 25
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 7,
      "to": 17
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 7,
      "to": 17
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 59,
      "to": 85
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 59,
      "to": 85
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 24,
      "to": 34
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 24,
      "to": 34
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 4,
      "to": 10
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 4,
      "to": 10
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 30,
      "to": 34
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 34,
      "to": 38
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 54,
      "to": 57
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 58,
      "to": 61
    }
  }, {
    "left": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 9,
      "to": 19
    },
    "right": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 9,
      "to": 19
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 1,
      "to": 2
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 1,
      "to": 2
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 8,
      "to": 22
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 8,
      "to": 22
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 16,
      "to": 20
    },
    "right": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 16,
      "to": 20
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 68,
      "to": 72
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 72,
      "to": 76
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "from subprocess import *",
      "lineIdx": 4,
      "from": 16,
      "to": 22
    },
    "right": {
      "line": "from subprocess import *",
      "lineIdx": 4,
      "from": 16,
      "to": 22
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 62,
      "to": 63
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "from svmutil import *",
      "lineIdx": 6,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "from svmutil import *",
      "lineIdx": 6,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 32,
      "to": 35
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 36,
      "to": 39
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 89,
      "to": 90
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 89,
      "to": 90
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 61,
      "to": 62
    }
  }, {
    "left": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 40,
      "to": 45
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 40,
      "to": 45
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 73,
      "to": 76
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 77,
      "to": 80
    }
  }, {
    "left": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 19,
      "to": 25
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 23,
      "to": 29
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 41,
      "to": 44
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 45,
      "to": 48
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 49,
      "to": 50
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 53,
      "to": 54
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 44,
      "to": 53
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 48,
      "to": 57
    }
  }, {
    "left": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "        zipped = zip(calc_y, ref_y)",
      "lineIdx": 36,
      "from": 29,
      "to": 34
    },
    "right": {
      "line": "            zipped = zip(calc_y, ref_y)",
      "lineIdx": 37,
      "from": 33,
      "to": 38
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "import os",
      "lineIdx": 3,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import os",
      "lineIdx": 3,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 64,
      "to": 67
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 68,
      "to": 71
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 44,
      "to": 45
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 103,
      "to": 104
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 103,
      "to": 104
    }
  }, {
    "left": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 40,
      "to": 41
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 45,
      "to": 46
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 45,
      "to": 46
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 1,
      "to": 5
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 1,
      "to": 5
    }
  }, {
    "left": {
      "line": "from subprocess import *",
      "lineIdx": 4,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "from subprocess import *",
      "lineIdx": 4,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 27,
      "to": 32
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 27,
      "to": 32
    }
  }, {
    "left": {
      "line": "import svm",
      "lineIdx": 5,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "import svm",
      "lineIdx": 5,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "with open('../features_output/testing_files.txt') as f:",
      "lineIdx": 25,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "    with open(file_list_file) as f:",
      "lineIdx": 26,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 58,
      "to": 68
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 58,
      "to": 68
    }
  }, {
    "left": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 8,
      "to": 14
    },
    "right": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 8,
      "to": 14
    }
  }, {
    "left": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 33,
      "to": 38
    },
    "right": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 33,
      "to": 38
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 17,
      "to": 20
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 17,
      "to": 20
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 78,
      "to": 79
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 78,
      "to": 79
    }
  }, {
    "left": {
      "line": "    print(\"Testing:\" + dir)",
      "lineIdx": 31,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "        print(\"Testing:\" + dir)",
      "lineIdx": 32,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 4,
      "to": 32
    },
    "right": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 4,
      "to": 32
    }
  }, {
    "left": {
      "line": "from svmutil import *",
      "lineIdx": 6,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "from svmutil import *",
      "lineIdx": 6,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 71,
      "to": 78
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 71,
      "to": 78
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 8,
      "to": 36
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 8,
      "to": 36
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 29,
      "to": 33
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 33,
      "to": 37
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 53,
      "to": 57
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 53,
      "to": 57
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 21,
      "to": 29
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 25,
      "to": 33
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 54,
      "to": 55
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 36,
      "to": 51
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 40,
      "to": 55
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 24,
      "to": 27
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 98,
      "to": 103
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 98,
      "to": 103
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 23,
      "to": 28
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 27,
      "to": 32
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 20,
      "to": 25
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 24,
      "to": 29
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 21,
      "to": 25
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 21,
      "to": 25
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 30,
      "to": 34
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 34,
      "to": 38
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 76,
      "to": 82
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 80,
      "to": 86
    }
  }, {
    "left": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 4,
      "to": 10
    },
    "right": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 4,
      "to": 10
    }
  }, {
    "left": {
      "line": "    print(\"Testing:\" + dir)",
      "lineIdx": 31,
      "from": 23,
      "to": 26
    },
    "right": {
      "line": "        print(\"Testing:\" + dir)",
      "lineIdx": 32,
      "from": 27,
      "to": 30
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 9,
      "to": 14
    },
    "right": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 9,
      "to": 14
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 24,
      "to": 34
    },
    "right": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 24,
      "to": 34
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    print(\"Testing:\" + dir)",
      "lineIdx": 31,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "        print(\"Testing:\" + dir)",
      "lineIdx": 32,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 64,
      "to": 67
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 68,
      "to": 71
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 22,
      "to": 27
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 26,
      "to": 31
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 63,
      "to": 64
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 77,
      "to": 78
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 81,
      "to": 82
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 44,
      "to": 45
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 48,
      "to": 49
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 2,
      "to": 3
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 2,
      "to": 3
    }
  }, {
    "left": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 18,
      "to": 19
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 32,
      "to": 39
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 32,
      "to": 39
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 52,
      "to": 53
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 86,
      "to": 91
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 86,
      "to": 91
    }
  }, {
    "left": {
      "line": "for dir in dirs:",
      "lineIdx": 30,
      "from": 4,
      "to": 7
    },
    "right": {
      "line": "    for dir in dirs:",
      "lineIdx": 31,
      "from": 8,
      "to": 11
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 20,
      "to": 21
    }
  }, {
    "left": {
      "line": "        zipped = zip(calc_y, ref_y)",
      "lineIdx": 36,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "            zipped = zip(calc_y, ref_y)",
      "lineIdx": 37,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 15,
      "to": 22
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 15,
      "to": 22
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 66,
      "to": 67
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 66,
      "to": 67
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 91,
      "to": 92
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 91,
      "to": 92
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 26,
      "to": 28
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 30,
      "to": 32
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 0,
      "to": 3
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 33,
      "to": 34
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 41,
      "to": 44
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 41,
      "to": 44
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 41,
      "to": 44
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 45,
      "to": 48
    }
  }, {
    "left": {
      "line": "from svmutil import *",
      "lineIdx": 6,
      "from": 13,
      "to": 19
    },
    "right": {
      "line": "from svmutil import *",
      "lineIdx": 6,
      "from": 13,
      "to": 19
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 40,
      "to": 41
    }
  }, {
    "left": {
      "line": "from subprocess import *",
      "lineIdx": 4,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "from subprocess import *",
      "lineIdx": 4,
      "from": 0,
      "to": 4
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 15,
      "to": 20
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 19,
      "to": 24
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 30,
      "to": 40
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 30,
      "to": 40
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 8,
      "to": 13
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 12,
      "to": 17
    }
  }, {
    "left": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 11,
      "to": 21
    },
    "right": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 11,
      "to": 21
    }
  }, {
    "left": {
      "line": "    if len(y) > 0:",
      "lineIdx": 33,
      "from": 16,
      "to": 17
    },
    "right": {
      "line": "        if len(ref_y) > 0:",
      "lineIdx": 34,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 56,
      "to": 57
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 56,
      "to": 57
    }
  }, {
    "left": {
      "line": "import sys",
      "lineIdx": 2,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "import sys",
      "lineIdx": 2,
      "from": 7,
      "to": 10
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 82,
      "to": 83
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 82,
      "to": 83
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 8,
      "to": 17
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 26,
      "to": 28
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 30,
      "to": 32
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 13,
      "to": 17
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 17,
      "to": 21
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 30,
      "to": 33
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 34,
      "to": 37
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 36,
      "to": 37
    },
    "right": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 36,
      "to": 37
    }
  }, {
    "left": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "    assert featureMin < featureMax;",
      "lineIdx": 15,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 0,
      "to": 5
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 0,
      "to": 5
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 33,
      "to": 58
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 33,
      "to": 58
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 57,
      "to": 61
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 61,
      "to": 65
    }
  }, {
    "left": {
      "line": "from subprocess import *",
      "lineIdx": 4,
      "from": 5,
      "to": 15
    },
    "right": {
      "line": "from subprocess import *",
      "lineIdx": 4,
      "from": 5,
      "to": 15
    }
  }, {
    "left": {
      "line": "import svm",
      "lineIdx": 5,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import svm",
      "lineIdx": 5,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 8,
      "to": 9
    },
    "right": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 8,
      "to": 9
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 16,
      "to": 21
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 20,
      "to": 25
    }
  }, {
    "left": {
      "line": "    if len(y) > 0:",
      "lineIdx": 33,
      "from": 4,
      "to": 6
    },
    "right": {
      "line": "        if len(ref_y) > 0:",
      "lineIdx": 34,
      "from": 8,
      "to": 10
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 21,
      "to": 29
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 25,
      "to": 33
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 21,
      "to": 22
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 6,
      "to": 7
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 6,
      "to": 7
    }
  }, {
    "left": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 30,
      "to": 31
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 4,
      "to": 10
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 4,
      "to": 10
    }
  }, {
    "left": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 14,
      "to": 15
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 44,
      "to": 53
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 48,
      "to": 57
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 58,
      "to": 59
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 32,
      "to": 33
    }
  }, {
    "left": {
      "line": "        zipped = zip(calc_y, ref_y)",
      "lineIdx": 36,
      "from": 17,
      "to": 20
    },
    "right": {
      "line": "            zipped = zip(calc_y, ref_y)",
      "lineIdx": 37,
      "from": 21,
      "to": 24
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 29,
      "to": 33
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 33,
      "to": 37
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 27,
      "to": 28
    }
  }, {
    "left": {
      "line": "        zipped = zip(calc_y, ref_y)",
      "lineIdx": 36,
      "from": 8,
      "to": 14
    },
    "right": {
      "line": "            zipped = zip(calc_y, ref_y)",
      "lineIdx": 37,
      "from": 12,
      "to": 18
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 46,
      "to": 47
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 50,
      "to": 51
    }
  }, {
    "left": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 15,
      "to": 25
    },
    "right": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 15,
      "to": 25
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "for dir in dirs:",
      "lineIdx": 30,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "    for dir in dirs:",
      "lineIdx": 31,
      "from": 19,
      "to": 20
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "with open('../features_output/testing_files.txt') as f:",
      "lineIdx": 25,
      "from": 5,
      "to": 9
    },
    "right": {
      "line": "    with open(file_list_file) as f:",
      "lineIdx": 26,
      "from": 9,
      "to": 13
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 38,
      "to": 39
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 61,
      "to": 62
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 90,
      "to": 91
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 90,
      "to": 91
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 36,
      "to": 39
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 40,
      "to": 43
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 15,
      "to": 20
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 19,
      "to": 24
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 26,
      "to": 28
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 26,
      "to": 28
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 40,
      "to": 46
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 44,
      "to": 50
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 76,
      "to": 77
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 80,
      "to": 81
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 0,
      "to": 1
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 0,
      "to": 1
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 47,
      "to": 48
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 51,
      "to": 52
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 13,
      "to": 14
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 17,
      "to": 18
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 73,
      "to": 75
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 77,
      "to": 79
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 53,
      "to": 58
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 57,
      "to": 62
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 77,
      "to": 82
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 77,
      "to": 82
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 16,
      "to": 17
    }
  }, {
    "left": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 26,
      "to": 27
    },
    "right": {
      "line": "        (value-featureMin)/",
      "lineIdx": 18,
      "from": 26,
      "to": 27
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 65,
      "to": 66
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 69,
      "to": 70
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 48,
      "to": 49
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 52,
      "to": 53
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 17,
      "to": 22
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 17,
      "to": 22
    }
  }, {
    "left": {
      "line": "    if len(y) > 0:",
      "lineIdx": 33,
      "from": 7,
      "to": 10
    },
    "right": {
      "line": "        if len(ref_y) > 0:",
      "lineIdx": 34,
      "from": 11,
      "to": 14
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 8,
      "to": 14
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 12,
      "to": 18
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 43,
      "to": 44
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 47,
      "to": 48
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "with open('../features_output/testing_files.txt') as f:",
      "lineIdx": 25,
      "from": 50,
      "to": 52
    },
    "right": {
      "line": "    with open(file_list_file) as f:",
      "lineIdx": 26,
      "from": 30,
      "to": 32
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 104,
      "to": 105
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 104,
      "to": 105
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 31,
      "to": 32
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 35,
      "to": 36
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 12,
      "to": 16
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 12,
      "to": 16
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "with open('../features_output/testing_files.txt') as f:",
      "lineIdx": 25,
      "from": 0,
      "to": 4
    },
    "right": {
      "line": "    with open(file_list_file) as f:",
      "lineIdx": 26,
      "from": 4,
      "to": 8
    }
  }, {
    "left": {
      "line": "        print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 39,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "            print(\"Sample count:\" + str(len(calc_y)))",
      "lineIdx": 43,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 88,
      "to": 89
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 88,
      "to": 89
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 64,
      "to": 65
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 68,
      "to": 69
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 58,
      "to": 63
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 62,
      "to": 67
    }
  }, {
    "left": {
      "line": "        zipped = zip(calc_y, ref_y)",
      "lineIdx": 36,
      "from": 21,
      "to": 27
    },
    "right": {
      "line": "            zipped = zip(calc_y, ref_y)",
      "lineIdx": 37,
      "from": 25,
      "to": 31
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 40,
      "to": 43
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 44,
      "to": 47
    }
  }, {
    "left": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 4,
      "to": 11
    },
    "right": {
      "line": "    epsilon = 0.0001",
      "lineIdx": 11,
      "from": 4,
      "to": 11
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 55,
      "to": 56
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 59,
      "to": 60
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 20,
      "to": 23
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 24,
      "to": 27
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 58,
      "to": 63
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 58,
      "to": 63
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 8,
      "to": 14
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 12,
      "to": 18
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 23,
      "to": 30
    },
    "right": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 23,
      "to": 30
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 58,
      "to": 63
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 62,
      "to": 67
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 34,
      "to": 39
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 38,
      "to": 43
    }
  }, {
    "left": {
      "line": "for dir in dirs:",
      "lineIdx": 30,
      "from": 0,
      "to": 3
    },
    "right": {
      "line": "    for dir in dirs:",
      "lineIdx": 31,
      "from": 4,
      "to": 7
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 15,
      "to": 18
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 19,
      "to": 22
    }
  }, {
    "left": {
      "line": "        print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 40,
      "from": 38,
      "to": 39
    },
    "right": {
      "line": "            print(\"False positive rate: \" + str(false_pos/len(ref_y)))",
      "lineIdx": 44,
      "from": 42,
      "to": 43
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 92,
      "to": 97
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 92,
      "to": 97
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 57,
      "to": 58
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 42,
      "to": 43
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 46,
      "to": 47
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 97,
      "to": 98
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 97,
      "to": 98
    }
  }, {
    "left": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 10,
      "to": 11
    },
    "right": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 10,
      "to": 11
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 47,
      "to": 49
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 47,
      "to": 49
    }
  }, {
    "left": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "def get_immediate_subdirectories(a_dir):",
      "lineIdx": 21,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "    if len(y) > 0:",
      "lineIdx": 33,
      "from": 14,
      "to": 15
    },
    "right": {
      "line": "        if len(ref_y) > 0:",
      "lineIdx": 34,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 15,
      "to": 16
    },
    "right": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "        zipped = zip(calc_y, ref_y)",
      "lineIdx": 36,
      "from": 20,
      "to": 21
    },
    "right": {
      "line": "            zipped = zip(calc_y, ref_y)",
      "lineIdx": 37,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 30,
      "to": 31
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 45,
      "to": 55
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 45,
      "to": 55
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 37,
      "to": 38
    }
  }, {
    "left": {
      "line": "    print(\"Testing:\" + dir)",
      "lineIdx": 31,
      "from": 18,
      "to": 19
    },
    "right": {
      "line": "        print(\"Testing:\" + dir)",
      "lineIdx": 32,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    print(\"Testing:\" + dir)",
      "lineIdx": 31,
      "from": 19,
      "to": 20
    },
    "right": {
      "line": "        print(\"Testing:\" + dir)",
      "lineIdx": 32,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 15,
      "to": 20
    },
    "right": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 15,
      "to": 20
    }
  }, {
    "left": {
      "line": "        zipped = zip(calc_y, ref_y)",
      "lineIdx": 36,
      "from": 27,
      "to": 28
    },
    "right": {
      "line": "            zipped = zip(calc_y, ref_y)",
      "lineIdx": 37,
      "from": 31,
      "to": 32
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "with open('../features_output/testing_files.txt') as f:",
      "lineIdx": 25,
      "from": 9,
      "to": 10
    },
    "right": {
      "line": "    with open(file_list_file) as f:",
      "lineIdx": 26,
      "from": 13,
      "to": 14
    }
  }, {
    "left": {
      "line": "        print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 41,
      "from": 40,
      "to": 43
    },
    "right": {
      "line": "            print(\"False negative rate: \" + str(false_neg/len(ref_y)))",
      "lineIdx": 45,
      "from": 44,
      "to": 47
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 21,
      "to": 22
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 73,
      "to": 75
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 77,
      "to": 79
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "    return (lower + (upper-lower) *",
      "lineIdx": 17,
      "from": 11,
      "to": 12
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 8,
      "to": 17
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 12,
      "to": 21
    }
  }, {
    "left": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 22,
      "to": 23
    },
    "right": {
      "line": "        assert false, \"invalid range\"",
      "lineIdx": 13,
      "from": 22,
      "to": 23
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 50,
      "to": 52
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 50,
      "to": 52
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 53,
      "to": 54
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 57,
      "to": 58
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 76,
      "to": 82
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 80,
      "to": 86
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 56,
      "to": 59
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 60,
      "to": 63
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 60,
      "to": 61
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 64,
      "to": 65
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 23,
      "to": 24
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 23,
      "to": 24
    }
  }, {
    "left": {
      "line": "        assert len(calc_y) == len(ref_y)",
      "lineIdx": 35,
      "from": 25,
      "to": 26
    },
    "right": {
      "line": "            assert len(calc_y) == len(ref_y)",
      "lineIdx": 36,
      "from": 29,
      "to": 30
    }
  }, {
    "left": {
      "line": "    if len(y) > 0:",
      "lineIdx": 33,
      "from": 17,
      "to": 18
    },
    "right": {
      "line": "        if len(ref_y) > 0:",
      "lineIdx": 34,
      "from": 25,
      "to": 26
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 50,
      "to": 51
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 54,
      "to": 55
    }
  }, {
    "left": {
      "line": "from svmutil import *",
      "lineIdx": 6,
      "from": 5,
      "to": 12
    },
    "right": {
      "line": "from svmutil import *",
      "lineIdx": 6,
      "from": 5,
      "to": 12
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 29,
      "to": 30
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 33,
      "to": 34
    }
  }, {
    "left": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 34,
      "to": 35
    },
    "right": {
      "line": "def custom_scale(value, featureMin, featureMax):",
      "lineIdx": 8,
      "from": 34,
      "to": 35
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 37,
      "to": 38
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 41,
      "to": 42
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 11,
      "to": 12
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 15,
      "to": 16
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 24,
      "to": 25
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 24,
      "to": 25
    }
  }, {
    "left": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 12,
      "to": 13
    },
    "right": {
      "line": "    lower = -1.0",
      "lineIdx": 9,
      "from": 12,
      "to": 13
    }
  }, {
    "left": {
      "line": "for dir in dirs:",
      "lineIdx": 30,
      "from": 8,
      "to": 10
    },
    "right": {
      "line": "    for dir in dirs:",
      "lineIdx": 31,
      "from": 12,
      "to": 14
    }
  }, {
    "left": {
      "line": "for dir in dirs:",
      "lineIdx": 30,
      "from": 11,
      "to": 15
    },
    "right": {
      "line": "    for dir in dirs:",
      "lineIdx": 31,
      "from": 15,
      "to": 19
    }
  }, {
    "left": {
      "line": "    print(\"Testing:\" + dir)",
      "lineIdx": 31,
      "from": 11,
      "to": 18
    },
    "right": {
      "line": "        print(\"Testing:\" + dir)",
      "lineIdx": 32,
      "from": 15,
      "to": 22
    }
  }, {
    "left": {
      "line": "import sys",
      "lineIdx": 2,
      "from": 0,
      "to": 6
    },
    "right": {
      "line": "import sys",
      "lineIdx": 2,
      "from": 0,
      "to": 6
    }
  }, {
    "left": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 41,
      "to": 56
    },
    "right": {
      "line": "#dirs = get_immediate_subdirectories('../features_output/')",
      "lineIdx": 24,
      "from": 41,
      "to": 56
    }
  }, {
    "left": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "    upper = 1.0",
      "lineIdx": 10,
      "from": 4,
      "to": 9
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 4,
      "to": 9
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 8,
      "to": 13
    }
  }, {
    "left": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 67,
      "to": 71
    },
    "right": {
      "line": "    return [name for name in os.listdir(a_dir) if os.path.isdir(os.path.join(a_dir, name))]",
      "lineIdx": 22,
      "from": 67,
      "to": 71
    }
  }, {
    "left": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 28,
      "to": 29
    },
    "right": {
      "line": "    if featureMax - epsilon < featureMin and featureMin < featureMax + epsilon:",
      "lineIdx": 12,
      "from": 28,
      "to": 29
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 57,
      "to": 61
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 61,
      "to": 65
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 51,
      "to": 52
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 55,
      "to": 56
    }
  }, {
    "left": {
      "line": "import os",
      "lineIdx": 3,
      "from": 7,
      "to": 9
    },
    "right": {
      "line": "import os",
      "lineIdx": 3,
      "from": 7,
      "to": 9
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 43,
      "to": 48
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 47,
      "to": 52
    }
  }, {
    "left": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 20,
      "to": 30
    },
    "right": {
      "line": "        (featureMax-featureMin))",
      "lineIdx": 19,
      "from": 20,
      "to": 30
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 45,
      "to": 49
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 49,
      "to": 53
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 63,
      "to": 64
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 67,
      "to": 68
    }
  }, {
    "left": {
      "line": "    dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 26,
      "from": 4,
      "to": 8
    },
    "right": {
      "line": "        dirs = f.read().strip(\"[]\\n\").split(\", \")",
      "lineIdx": 27,
      "from": 8,
      "to": 12
    }
  }, {
    "left": {
      "line": "        calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 34,
      "from": 58,
      "to": 59
    },
    "right": {
      "line": "            calc_y, p_acc, p_val = svm_predict(ref_y, x, model)",
      "lineIdx": 35,
      "from": 62,
      "to": 63
    }
  }, {
    "left": {
      "line": "        false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 37,
      "from": 82,
      "to": 83
    },
    "right": {
      "line": "            false_neg = sum(1 if elem[0] < 0 and elem[1] > 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 86,
      "to": 87
    }
  }, {
    "left": {
      "line": "        false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 38,
      "from": 39,
      "to": 40
    },
    "right": {
      "line": "            false_pos = sum(1 if elem[0] > 0 and elem[1] < 0 else 0 for elem in zipped)",
      "lineIdx": 39,
      "from": 43,
      "to": 44
    }
  }, {
    "left": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 3,
      "to": 6
    },
    "right": {
      "line": "#!/usr/bin/env python3.4",
      "lineIdx": 0,
      "from": 3,
      "to": 6
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 85,
      "to": 86
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 85,
      "to": 86
    }
  }, {
    "left": {
      "line": "    ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 32,
      "from": 35,
      "to": 36
    },
    "right": {
      "line": "        ref_y, x = svm_read_problem('../features_output/' + dir + '/features.txt')",
      "lineIdx": 33,
      "from": 39,
      "to": 40
    }
  }, {
    "left": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 28,
      "from": 32,
      "to": 33
    },
    "right": {
      "line": "model = svm_load_model('../build-ContextBasedGeneralDiffer-Desktop_Qt_5_4_1_GCC_64bit-Debug/align.model')",
      "lineIdx": 52,
      "from": 32,
      "to": 33
    }
  }]
}